[
  {
    "id": 1,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 2,
    "title": "area",
    "time_limit": "1 초",
    "description": "두 자연수를 입력으로 받아 직사각형의 넓이를 구하는 프로그램을 작성하시오.",
    "input": "두 자연수가 입력으로 주어지고 , 각각 가로 , 세로 길이이다.단위는 같은 것으로 가정한다.\n두 수는 1000 을 넘지 않는다.\n온라인 저지를 처음 사용하는 분들을 위해....\n\"입력의 제한 조건 1000 을 넘지 않는다\" 이 부분은 따로 처리 하지 않으셔도 됩니다. 입력 데이터가 이 범위를 넘어서 들어오지 않는다는 것입니다.\n\n이 제한 조건이 없으면 20 억 이상의 수가 입력으로 주어지는 경우 정수형 변수로 해결할 수가 없습니다. 즉 정수 범위 안의 입력이니 정수로 처리할 수 있다는 것입니다.\n\n\"입력\" \"출력\"...이 부분도 출력해서는 안되고 단지 두 수만 입력으로 받아서 결과 값만을 출력해야 합니다.\n\n시간초과 오류란 각 문제 당 제한 시간이 있어 이 제한 시간내에 결과가 나오지 않으면 이 오류를 출력합니다. 이 오류가 발생할 경우 조금 더 좋은 알고리즘을 생각해서 해결해야 합니다.",
    "output": "직 사각형의 넓이를 출력한다.",
    "sample": "입력\n\n10 20\n\n출력\n\n200"
  },
  {
    "id": 3,
    "title": "m2s",
    "time_limit": "1 초",
    "description": "분을 입력으로 받아 초로 변환하는 프로그램을 작성하시오.",
    "input": "분 m 이 자연수로 주어진다. ( 1 <= m <= 60)",
    "output": "변환 된 초를  출력 예의 형식으로 출력한다. 출력을 간단히 하기 위해 1 분도 1 minutes 로 쓰기로 한다.",
    "sample": "입력\n\n2\n\n출력\n\n2 minutes is 120 seconds."
  },
  {
    "id": 4,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 5,
    "title": "op",
    "time_limit": "1 초",
    "description": "a 가 5 이고 , b 가 3 이면",
    "input": "두 수 a,b 는 1000 이하이다.",
    "output": "숫자와 연산자 사이에 공백이 없이 출력 예의 형식으로 출력한다.",
    "sample": "5+3=8\n5-3=2\n5*3=15\n5/3=1\n5%3=2"
  },
  {
    "id": 6,
    "title": "triangle",
    "time_limit": "1 초",
    "description": "삼각형 넓이를 구하는 문제이다.",
    "input": "두 자연수가 입력으로 주어진다. 두 수는 1000 이하의 자연수이고 ,차례대로 밑변과 높이이다.",
    "output": "넓이를\n소수 이하 2 자리 ( 세 번째 자리에서 반올림 )\n까지 출력한다.",
    "sample": "입력\n\n9 83 \n\n출력\n\n373.50"
  },
  {
    "id": 7,
    "title": "average",
    "time_limit": "1 초",
    "description": "정수 입력 사이에는 공백으로 구분되며 , 평균은 소수 2 째 자리까지 출력하세요.(소수 3 번째 자리에서 반올림)",
    "input": "입력은 1 에서 100 사이의 자연수가 입력된다.",
    "output": "",
    "sample": "입력\n\n7 7 7 7\n\n출력\n\n7.00\n\n입력\n\n2 5 9 5\n\n출력\n\n5.25"
  },
  {
    "id": 8,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 9,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 10,
    "title": "change",
    "time_limit": "1 초",
    "description": "돈은 반드시 1000 원을 내며 , 거스름 돈은 10 원 , 50 원 , 100 원 동전으로 하고 큰 동전 우선으로 준다.",
    "input": "물건 값으로 세자리 자연수가  입력으로 주어진다. 일의 자리는 0 이다.",
    "output": "동전 100 원 , 50 원 , 10 원의 개수를 출력한다.",
    "sample": "입력\n\n530\n\n출력\n\n4 1 2"
  },
  {
    "id": 11,
    "title": "sec(open)",
    "time_limit": "1 초",
    "description": "초(second)가 입력으로 주어진다.",
    "input": "초(second)가 입력으로 주어진다. 10 000 000 이하의 정수 이다.",
    "output": "4 개의 정수를 출력한다.\n날 시 분 초",
    "sample": "입력\n\n70\n\n출력\n\n0 0 1 10"
  },
  {
    "id": 12,
    "title": "three",
    "time_limit": "1 초",
    "description": "(1)과 (2) 위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6) 위치에 들어갈 값을 구하는 프로그램을 작성하시오.",
    "input": "첫째 줄에 (1)의 위치에 들어갈 세 자리 자연수가, 둘째 줄에 (2)의 위치에 들어갈 세 자리\n자연수가 주어진다.",
    "output": "첫째 줄부터 넷째 줄까지 차례대로 (3), (4), (5), (6)에 들어갈 값을 출력한다.",
    "sample": "472…… (1)\n ×385…… (2)\n---------------\n  2360…… (3)\n 3776 …… (4)\n1416  …… (5)\n--------------\n181720…… (6)"
  },
  {
    "id": 13,
    "title": "koi_watch",
    "time_limit": "1 초",
    "description": "KOI 전자에서는 건강에 좋고 맛있는 훈제오리구이 요리를 간편하게 만드는 인공지능 오븐을 개발하려고 한다. 인공지능 오븐을 사용하는 방법은 적당한 양의 오리 훈제 재료를 인공지능 오븐에 넣으면 된다. 그러면 인공지능 오븐은 오븐구이가 끝나는 시간을 초 단위로 자동적으로 계산한다.",
    "input": "첫 째 줄에는 현재 시각이 나온다.\n시 A (0 <= A <= 23)\n분 B ( 0 <= B <= 59)\n초 C ( 0 <= C <= 59)\n두 번째 줄에는 요리하는 데 필요한 시간 D ( 0 <= D <= 500 000)가 초 단위로 주어진다.",
    "output": "첫째 줄에 종료되는 시각의 시, 분, 초을 공백을 사이에 두고 출력한다. \n(단, 시는 0부터 23까지의 정수이며, 분, 초는 0부터 59까지의 정수이다. 디지털 시계는 23시 59분 59초에서 1초가 지나면 0시 0분 0초가 된다.)",
    "sample": "입력 \n\n14 30 0\n200\n\n출력 \n\n14 33 20\n\n입력 \n\n17 40 45\n6015\n\n출력 \n\n19 21 0\n\n입력 \n\n23 48 59\n2515\n\n출력 \n\n0 30 54"
  },
  {
    "id": 14,
    "title": "empty_bottle",
    "time_limit": "1 초",
    "description": "음료수 더블릿드링크는 빈 병 모으기 이벤트를 한다. 이벤트 내용은 음료수를 사먹고 남은 빈 병 4개를 가져오면 음료수 1병을 주는 것이다. Jay는 음료수를 많이 먹고 싶어 한다.",
    "input": "처음 산 음료수의 값을 입력한다.입력은 정수범위를 넘지 않는다.",
    "output": "이벤트를 2번 참가해 받을 수 있는 음료수의 최댓값과 이벤트를 2번 참가해도 남는 병 수를 출력한다.",
    "sample": "입력\n\n32\n\n출력\n\n42 0\n\n입력\n\n45\n\n출력\n\n58 4"
  },
  {
    "id": 15,
    "title": "business",
    "time_limit": "1 초",
    "description": "4 개의 정수가 입력으로 주어진다.",
    "input": "4 개의 정수 값 N , M , P , C  가 입력으로 주어진다. 각각은 0 에서 500000 사이다.\n원가\n정가\n위조 지폐 금액\n거스름돈\nN < M 이고 P <= M + C . 즉 C 를 보면 손님이 지불한 금액을 알수 있고 그 중 P 원이 위조 지폐이다. 물론 지불한 돈 모두가 위조 지폐일 수가 있다.\n예를 들어\n40 70 100 30\n원가가 40 원이고 정가가 70 원인 물건을 거스름돈 30 원을 주었으니 손님이 지불한 금액은 100 원이고 이 돈 모두\n위조 금액이다.",
    "output": "주인이 (손해를 본 경우에는 양수 , 손해도 이익도 아니면 0 , 이익을 본 경우는 음수) 금액을 출력한다.\n70원을 손해 보았을 경우 -> 출력값 : 70\n손해도 이익도 아닐 경우 -> 출력값 : 0\n60원을 이익 보았을 경우 -> 출력값 : -60",
    "sample": "입력\n\n40 70 100 30\n \n출력\n\n70\n\n입력\n\n40 70 50 20\n\n출력\n\n20\n\n입력\n\n14604 32391 3902 153\n\n출력\n\n-13885"
  },
  {
    "id": 16,
    "title": "fuse(open)",
    "time_limit": "1 초",
    "description": "대부분의 사람들은 연구실에 있는 모든 컴퓨터를 가동하면 얼마 만큼의 전기가 소비되는지 를 인식하지 못한다.",
    "input": "입력은  세 개의  음이 아닌 정수가 주어진다. 차례대로 컴퓨터 , 프린터 , 라우터의 수이다.\n반드시 컴퓨터의 수보다 다른 기기의 수가 적을 필요는 없다.(실험실이니)\n모든 수는 100 이하이다.",
    "output": "최소 퓨즈의 용량을 출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n10 2 1\n\n출력\n\n60 amperes\n\n입력\n\n5 4 0\n\n출력\n\n50 amperes"
  },
  {
    "id": 17,
    "title": "paintblock",
    "time_limit": "1 초",
    "description": "크기가 1*1*1 인 정육면체를 가지고 가로 A 세로 B 높이 C 인 직육면체를 만든 후 A×B×C (2≤A,B,C≤120)의 블록 겉면에 페인트를 칠하였다.",
    "input": "A , B , C 가 차례대로 입력된다. A 는 가로, B 는 세로, C 는 높이이다.",
    "output": "2개의 면만 페인트가 칠해진 블록의 개수를 첫째 줄에 출력한다.",
    "sample": "입력 \n\n3 3 3 \n\n출력 \n\n12"
  },
  {
    "id": 18,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 19,
    "title": "coci_faktor",
    "time_limit": "1 초",
    "description": "[문제요약] 과학 논문 평가의 주요 요소는 다른 논문에 얼마나 많은 인용이 일어나는가가 주요 요소이다.",
    "input": "First and only line of input will contain 2 integers, A (1 ≤ A ≤ 100), number of\narticles you plan to publish and  I  (1 ≤  I ≤ 100) impact factor the owners\nrequire.",
    "output": "First and only line of output should contain one integer, the minimal number\nof scientists you need to bribe.",
    "sample": "Total sum of all citations articles published in the journal recived\n--------------------------------------------------------------------\n              Total number of articles published"
  },
  {
    "id": 20,
    "title": "coci_slatkisi",
    "time_limit": "1 초",
    "description": "",
    "input": "첫번째 줄에는 사탕의 가격 C (0 ≤ C ≤ 1 000 000 000)와 미르코가 가진 최소 지폐의 단위 K가 주어진다. (10^K 이 최소 지폐이다.)",
    "output": "미르코가 지불해야하는 반올림한 값을 출력한다.",
    "sample": "입력\n\n184 1\n\n출력\n\n180\n\n10^1 = 10 이 최소로 가진 단위이니 180 190 중 180 이 가까워서 답은 180 \n\n입력\n\n182 2\n\n출력\n\n200\n\n10^2= 100 이 최소로 가진 단위이니 100 과 200 중 200 이 가까워서  200"
  },
  {
    "id": 21,
    "title": "butter",
    "time_limit": "1 초",
    "description": "n 마리의 쥐가 크기가 같은 n 개의 버터를 먹는데 n 시간이 걸린다고 할 때 , m 마리의 쥐가 m 개의 버터를 먹는데 걸리는 시간을 구하는것이 문제이다. 각각의 쥐가 버터를 먹는 속도는 모두 동일하다고 한다.",
    "input": "차례대로 n,m 이 주어진다.  각 수는 1000 이하의 자연수 이다.",
    "output": "시간을 출력한다.",
    "sample": "입력\n\n3 3\n\n출력\n\n3"
  },
  {
    "id": 22,
    "title": "slant",
    "time_limit": "1 초",
    "description": "엑스 형은 와이 다.",
    "input": "동생과 형의 받는 용돈 두 번의 금액이 입력으로 주어진다.",
    "output": "몇 배가 되는지를 출력한다.  정수배가 된다는 것은 보장된다.",
    "sample": "입력\n\n300 1000\n400 1300\n\n출력\n\n3 100"
  },
  {
    "id": 23,
    "title": "maxandmin",
    "time_limit": "1 초",
    "description": "예를 들면, max(5,3)=5 이고, min(2,1)=1 이다.",
    "input": "두 정수 x,y 가 입력으로 주어진다.  (x,y < 2^31)",
    "output": "max(min(x,y),x) 값을 출력한다.",
    "sample": "입력\n\n4 3\n\n출력\n\n4"
  },
  {
    "id": 24,
    "title": "angle(open)",
    "time_limit": "1 초",
    "description": "",
    "input": "n 은 3 이상 20 이하의 정수이다.",
    "output": "내각의 합, 외각의 합을 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n180 360"
  },
  {
    "id": 25,
    "title": "spot(special judge)",
    "time_limit": "1 초",
    "description": "받침대에 있는 프로젝터가 벽 쪽으로 둥글게 빛을 쏜다.",
    "input": "입력은 두 줄로 이루어진다.\n한 줄에는 d 가 1 과 40 사이의 실수가 주어지고 ,\n다음 줄에는 p 가 -95 와 300 사이의 실수로 주어진다.",
    "output": "프로젝트 위치의 변화를 나타내는 수를 소수 이하 세자리(4 번째 자리에서 반올림) 까지 출력한다.\n양수이면 프로젝트를 벽쪽으로 오른쪽으로 가깝게 하는 것을 음수이면 반대 편으로 즉 벽에서 더 멀어지는 것을 의미한다.",
    "sample": "입력\n\n28.5\n-25.0\n\n출력\n\n7.125\n\n입력\n\n28.5\n50.0\n\n출력\n\n-14.250"
  },
  {
    "id": 26,
    "title": "rpoly(open)",
    "time_limit": "1 초",
    "description": "그림과 같이 원안에 있는 정 다각형에서",
    "input": "실수 r 과 정수 n 이 주어진다. (0 < r < 20000 , 2 < n < 20000)",
    "output": "다각형의 면적을 소수 이하 세자리까지 구한다.",
    "sample": "입력\n\n2 2000\n\n출력\n\n12.566\n\n입력\n\n10 3000\n\n출력\n\n314.159"
  },
  {
    "id": 27,
    "title": "x_length",
    "time_limit": " 1 초",
    "description": "오른쪽 그림과 같은 형식으로 x가 그려질 때, x에 사용되는 곡선과 선분의 길이의 합을 구하는 프로그램을 작성하라.",
    "input": "첫 번째 줄에 자연수 a와 b가 공백으로 구분되어 주어진다. (1≤a,b≤200)",
    "output": "사용된 길이를 소수점 셋째 자리까지 출력한다.",
    "sample": "입력\n\n4 3\n\n출력\n\n31.891"
  },
  {
    "id": 28,
    "title": "complete_graph",
    "time_limit": "1 초",
    "description": "꼭지점(vertex)의 수 n 이 주어질 때 임의의 점에서 다른 점으로 바로 가는 길이 존재할 때 선의 수(edge) 을 구하는 것이 문제이다.",
    "input": "n 이 주어진다. n 은  2 이상 1000 이하의 정수이다.",
    "output": "선의 수를 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n6"
  },
  {
    "id": 29,
    "title": "coci_intersect",
    "time_limit": "1 초",
    "description": "n 각형의 볼록 다각형이 주어질 때 대각선끼리 교차하는 점의 수를 구하는 것이 문제이다. 단, 세 개의 대각선이 한 점에서 만나는 경우는 없다.",
    "input": "3 이상 100 이하인 정수 n 이 입력으로 주어진다.",
    "output": "교차점의 수를 출력한다.",
    "sample": "입력\n\n3 \n\n출력\n\n0 \n\n입력\n\n4 \n\n출력\n\n1 \n\n입력\n\n6 \n\n출력\n\n15"
  },
  {
    "id": 30,
    "title": "even(open)",
    "time_limit": "1 초",
    "description": "두 정수 A, B (1 <= A <= B <= 2,000,000,000) 가 주어질때 A 와 B 사이 (A, B 포함) 에 약수의 개수가 짝수인 수의 개수를 출력하시오.",
    "input": "두 정수 A, B 가 주어진다.",
    "output": "약수의  개수가 짝수인 수의 개수를 출력하시오.",
    "sample": "입력\n\n3 17\n\n출력 \n\n12"
  },
  {
    "id": 31,
    "title": "flr",
    "time_limit": "1 초",
    "description": "주희는 심심해서 다음과 같이 수를 쓰기 시작 했다.",
    "input": "32 비트 정수 범위내의 값이 입력으로 주어진다.",
    "output": "층 수를 출력한다.",
    "sample": "입력\n\n100\n\n출력\n\n7"
  },
  {
    "id": 32,
    "title": "joana",
    "time_limit": "1 초",
    "description": "조아나는 홀수로 게임을 하는 것을 좋아한다. 하루는 아래와 같이 홀수를 쓰기 시작했다.",
    "input": "입력으로 라인 번호  N 이 주어진다.  홀수 N 의 범위는 1 < N <1 000 000 000 이다.",
    "output": "입력의 라인에 대한 마지막 세 개의 홀수의 합을 출력한다.\n합은 2^63 보다 작다는 것은 보장된다.",
    "sample": "1\n 3  5  7\n 9 11 13 15 17\n19 21 23 25 27 29 31\n..."
  },
  {
    "id": 33,
    "title": "bumblebee",
    "time_limit": "1 초",
    "description": "두 기차 A,B 가 l m 의 거리를 두고 있는 상태에서 여왕벌이 기차 A 에 앉았다가 날아올랐다. 기차 A 는 a m/s 로 기차 B 를 향해 달리고 , 기차 B 는 b m/s 로 기차 A 를 향해 달린다.",
    "input": "a,b,x,l ( 1 <= a, b < x < l <= 40000) 이 순서대로 주어지며 , 네 수는 모두 정수이다.",
    "output": "여왕벌이 두 기차 A,B 가 부딪히기 직전까지 날아다닌 거리를 m 단위로 소수점 6 번째 자리까지 출력한다.",
    "sample": "입력\n\n2 3 6 10\n\n출력\n\n12.0000000\n\n입력\n\n3 4 9 10\n\n출력\n\n12.857143"
  },
  {
    "id": 34,
    "title": "nuclear",
    "time_limit": "1 초",
    "description": "모든 불안정한 핵은 k 개의 핵으로 분열되고 이 때 생긴 핵은 안정할 수도 불안정할 수도 있다. 안정한 핵은 더 이상 분열되지 않고 , 불 안정한 핵은 다시 k 개의 핵으로 분열되는데 , 이 과정은 안정한 핵들만 남을 때 까지 계속된다.",
    "input": "k 와 n 이 입력으로 주어진다. k 는 10 이하 n 은 1000000 이하의 정수이다.",
    "output": "총 에너지를 출력한다. 답이 존재한다는 것은 보장된다.",
    "sample": "입력\n\n2 8\n\n출력\n\n700"
  },
  {
    "id": 35,
    "title": "toilet",
    "time_limit": "1 초",
    "description": "남자화장실의 소변기는 일렬로 쭉 이어져있다. 다른 사람들이 이용하는 곳을 제외하면 어느 곳에서나 볼일을 볼 수는 있지만, 옆자리에 아무도 없을 때 마음 편하게 볼일을 볼 수 있다.",
    "input": "변기의 수 N ( 0 < N ≤ 100 ) 이 주어진다.",
    "output": "최대 인원수와 최소 인원수를 공백으로 구분하여 출력한다.",
    "sample": "입력\n\n5\n\n출력\n\n3 2"
  },
  {
    "id": 36,
    "title": "eboxes(open)",
    "time_limit": "1 초",
    "description": "책상 위 1 번 박스가 N 개 놓여있다.( N 은 2 이상 )",
    "input": "첫 줄에 네 개의 정수가 주어진다: N, K, T, F (1 < N , K , T, F < 1 000 000 이고  N < F)",
    "output": "총 상자 개수를 출력한다.",
    "sample": "입력\n\n11 8 2 102\n\n출력\n\n115"
  },
  {
    "id": 37,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 38,
    "title": "nsubset(open)",
    "time_limit": "1 초",
    "description": "갑,을 두 사람이 그림과 같이 두 구역으로 나뉘어진 과녁에 화살을 쏘는 방법은 4 가지 이다.",
    "input": "사람수 n (1 <= n <= 10)  , 과녁수 m (1 <= m <= 10) 이 차례대로 주어진다. 두 수는 자연수이다.",
    "output": "방법의 수를 출력한다.",
    "sample": "갑   을 \n-------\nb    b\nb    y\ny    b\ny    y"
  },
  {
    "id": 39,
    "title": "boi_squint",
    "time_limit": "1 초",
    "description": "정수 n 의 제곱 근을 구하는 문제이다.",
    "input": "정수 n ( 0 <= n <2^63)  이 입력으로 주어진다.",
    "output": "q^2 >= n 을 만족하는 음이 아닌 정수 값중  최소 q 를 출력한다.",
    "sample": "입력\n\n122333444455555\n\n출력\n\n11060446"
  },
  {
    "id": 40,
    "title": "d_f(open)",
    "time_limit": "1 초",
    "description": "",
    "input": "소수 이하 2 자리수가 입력으로 주어진다.",
    "output": "한 줄에 정수부, 소수부를 출력한다. 소수부는 소수 이하 두자리까지 출력한다.",
    "sample": "입력\n\n1.58\n\n출력\n\n1 0.58\n\n입력\n\n-1.58\n\n출력\n\n-2 0.42"
  },
  {
    "id": 41,
    "title": "tiles(open)",
    "time_limit": "1 초",
    "description": "타일의 크기는 8*8 이다. 타일은 그대로 이용할 수도 있고 잘라서 부분을 이용할 수도 있다. 그런데 잘라서 사용한 타일의 나머지는 반드시 버려야 한다.",
    "input": "방의 가로 , 세로 크기가 주어진다. 각 수는 1000 이하이다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n160 240\n\n출력\n\nThe number of whole tiles is 600 part tiles is 0\n\n입력\n\n100 120\n\n출력\n\nThe number of whole tiles is 180 part tiles is 15"
  },
  {
    "id": 42,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 43,
    "title": "compare",
    "time_limit": "1 초",
    "description": "두 정수를 입력으로 받아",
    "input": "",
    "output": "",
    "sample": "입력\n\n3 4\n\n출력\n\n<\n\n입력\n\n4 4\n\n출력\n\n="
  },
  {
    "id": 44,
    "title": "comparefrac",
    "time_limit": "1 초",
    "description": "a/b 와 c/d 의 대소를 판단하는 프로그램이다.",
    "input": "자연수  a , b, c ,d 가 입력으로 주어진다. 입력되는 수는 10000 이하이다.",
    "output": "a/b > c/d 이면 1\na/b = c/d 이면 0\na/b < c/d 이면 -1\n을 출력한다.",
    "sample": "입력\n\n3 4 5 6\n\n출력\n\n-1"
  },
  {
    "id": 45,
    "title": "coci_note",
    "time_limit": "1 초",
    "description": "C 장조의 음계는 8 개로 나타내어진다(c d e f g a h C). 이를 1 에서 숫자 8 로 약속을 한다.",
    "input": "1 에서 8 까지의 수가 임의의 순서로 한 번 나타난다.",
    "output": "ascending , descending , mixed 중 하나를 출력한다.",
    "sample": "입력\n\n1 2 3 4 5 6 7 8\n\n출력\n\nascending\n\n입력\n\n8 7 6 5 4 3 2 1\n\n출력\n\ndescending\n\n입력\n\n8 1 7 2 6 3 5 4\n\n출력\n\nmixed"
  },
  {
    "id": 46,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 47,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 48,
    "title": "truck",
    "time_limit": "1 초",
    "description": "",
    "input": "지하차도의 높이가 입력으로 주어진다. 각 지하차도의 높이는 0 에서 300 이다.",
    "output": "세 개의 지하차도를 무사히 빠져 나가면 \"NO CRASH\" 를 출력하고 아니면 \"CRASH X\" 를 출력한다.\n즉 지하차도의 높이는 168 이하이면 부딪히고 , X 는 최초로 부딪히는 지하차도의 높이이다.",
    "sample": "입력\n\n180 160 170\n\n출력\n\nCRASH 160"
  },
  {
    "id": 49,
    "title": "troy",
    "time_limit": "1 초",
    "description": "칼카스는 트로이를 멸망시키려면 네 가지 일이 이루어져야 한다고 말했다. 그중에서 세 가지는 했는데,마지막 한 가지,트로이 성의 대들보를 부수는 것이 아직 이루어지지 않았다. 하지만 트로이 성은 태양의 신 아폴론과 바다의 신 포세이돈이 쌓은 것이라 그리스 군이 부수지 못한다. 그래서 그리스 군의 오디세우스 장군이 목마를 이용해 대들보를 부수는 방법을 생각해냈다. 목마를 만드는 데는 목재 1000개가 필요하다.",
    "input": "첫 번째 줄에는 목마의 개수를 입력받는다.\n두 번째 줄에는 목재의 수를 입력받는다.",
    "output": "목마를 만들 수 있으면 'O' 아니면 'X'를 출력한다.",
    "sample": "입력\n\n5\n10000\n\n출력\n\nO\n\n입력\n\n5\n2000\n\n출력\n\nX"
  },
  {
    "id": 50,
    "title": "div_mul(open)",
    "time_limit": "1 초",
    "description": "a 가 b 의 약수이면 a | b 로 표시하고 그렇지 않으면 a ł b 로 표시한다.",
    "input": "두 정수 m , n 이 차례로 주어진다.  m , n 값으로 0 이 입력될 수 있다. (-100 <= m,n <= 100)\n참고로 0 은 모든 수의 배수이고 어떤 수의 약수는 될 수 없다.",
    "output": "기호 ł 는 !| 로 대신한다.\nm 이 n 의 약수이면 m | n 를 아니면 m !| n 를 출력한다. 숫자와 기호 사이에는 한 칸의 공백을 둔다.",
    "sample": "입력\n\n2 4\n\n출력\n\n2 | 4\n\n입력\n\n3 4\n\n출력\n\n3 !| 4"
  },
  {
    "id": 51,
    "title": "coci_spa",
    "time_limit": "1 초",
    "description": "[문제요약] 주어진 시각에서 45 분 전의 시각을 출력하는 게 문제이다.",
    "input": "The first and only line of input will contain exactly two integers H and M (0 ≤\nH ≤ 23, 0 ≤ M ≤ 59) separated by a single space, the input time in 24-hour\nnotation. H denotes hours and M minutes.",
    "output": "The first and only line of output should contain exactly two integers, the time\n45 minutes before input time.",
    "sample": "입력\n\n10 10\n\n출력\n\n9 25\n\n입력\n\n0 30\n\n출력\n\n23 45\n\n입력\n\n23 40\n\n출력\n\n22 55"
  },
  {
    "id": 52,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 53,
    "title": "프로그램 명:leap_year",
    "time_limit": "제한시간:1 초",
    "description": "윤년이란 ,",
    "input": "입력되는 수는 3000 이하의 자연수이다.",
    "output": "",
    "sample": "입력\n\n4\n\n출력\n\nYES\n\n입력 \n\n100\n\n출력\n\nNO\n\n입력\n\n200\n\n출력 \n\nNO\n\n입력 \n\n400\n\n출력\n\nYES"
  },
  {
    "id": 54,
    "title": "ATM(open)",
    "time_limit": "1 초",
    "description": "영자는 ATM(Automated Teller Machine) 기에서 X $ 의 돈을 인출하고자 한다. 이 기계는 5 의 배수 금액 만을 취급한다. 단, 인출할 때 마다 0.5 $ 의 수수료를 내어야 한다.",
    "input": "두 수가 입력으로 주어진다.\n첫 수는 인출 할 금액으로 정수이고 0 < X <= 10000\n다음 수는 소수 이하 두 자리 수를 가진 최초 계좌의 금액($)이다. 0 <= Y <= 2000",
    "output": "거래 후의 잔액을 소수 이하 두자리로 출력한다.  정상 적인 인출이 불가능할 경우\n     원래의 금액을 출력한다.\nATM 기계에는 충분한 돈이 있다는 것은 보장된다.",
    "sample": "입력\n\n30 120.00\n\n출력\n\n89.50\n\n입력\n\n42 120.00\n\n출력\n\n120.00\n\n입력\n\n300 120.00\n\n출력\n\n120.00"
  },
  {
    "id": 55,
    "title": "calorie(open)",
    "time_limit": "1 초",
    "description": "어떤 가게에는 아주 간단한 메뉴만 있다. 각 음식의 항목은 숫자로 선택한다.",
    "input": "1 에서 4 사이의 정수 4 개가 주어진다. 각 수는 버거,음료,추가주문,디저트 이다.",
    "output": "총 칼로리를 출력 예의 형식으로 출력한다.",
    "sample": "3 가지의 버거 \n\n1 . Cheeseburger (461 Calories) \n2 . Fish Burger (431 Calories) \n3 . Veggie Burger (420 Calories) \n4 . no burger \n\n3 가지 음료\n\n1 . Soft Drink ( 130 Calories)\n2 . Orange Juice (160 Calories)\n3 . Milk (118 Calories)\n4 . no drink\n\n3 가지 side order(추가 주문)\n\n1 . Fries (100 Calories)\n2 . Baked Potato (57 Calories) \n3 . Chef Salad (70 Calories) \n4 . no side order \n\n3 가지 디저트 \n\n1 . Apple Pie (167 Calories)\n2 . Sundae (266 Calories)\n3 . Fruit Cup (75 Calories)\n4 . no dessert"
  },
  {
    "id": 56,
    "title": "fairy",
    "time_limit": "1 초",
    "description": "어느 요정이 있었다. 이 요정은 2000년에 폴 존스라는 탐험가가 처음 보았고, 8년마다 페이스 해변에서 보인다고 한다.",
    "input": "년도를 입력받는다.\n입력은 정수범위를 넘지 않는다.",
    "output": "요정이 나타나는 해이면 O,아니면 X를 출력한다.",
    "sample": "입력\n\n2011\n\n출력\n\nX\n\n입력\n\n2016\n\n출력\n\nO"
  },
  {
    "id": 57,
    "title": "punch_game",
    "time_limit": "1 초",
    "description": "어느 PC방에는 펀치 게임이 있다. Eddy는 지금 이 복싱 게임을 플레이 하고 있다.",
    "input": "주먹,날아차기,아도겐,연속펀치,던지기 횟수가 공백을 두고 입력된다.",
    "output": "제한시간 초과이면 time out,공격의 데미지의 합이 100이상이면 you win,공격의 데미지의 합이 100 미만이면 game over을 출력한다.",
    "sample": "입력\n\n4 6 7 8 9\n\n출력\n\ntime out"
  },
  {
    "id": 58,
    "title": "even_odd(open)",
    "time_limit": "1 초",
    "description": "짝,홀수성을 공부 중인 주희는",
    "input": "1000 이하의 두 자연수가 입력으로 주어진다.",
    "output": "공백없이 출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n5 8\n\n출력\n\nodd+even=odd\nodd*even=even\n\n입력\n\n8 5\n\n출력\n\neven+odd=odd\neven*odd=even\n\n입력\n\n5 3\n\n출력\n\nodd+odd=even\nodd*odd=odd"
  },
  {
    "id": 59,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 60,
    "title": "fill",
    "time_limit": "1 초",
    "description": "[문제요약] 그림과 같은 포지션 별 정보가 주어지고 , 각 선수들의 속도 , 체중 , 힘 이 주어질 때 이 선수에게 맞는 포지션이 무엇인지를 출력하는 프로그램이다.",
    "input": "세 수가 주어진다. 첫 수는 속도 , 무게 , 힘 이 주어진다. 세 수는 실수이다.",
    "output": "가능한 포지션을 모두 출력하고 맞는 포지션이 하나도 없으면 No positions 을 출력한다.\n여러 포지션이 가능한 경우 위 표에 주어진 순서대로 출력한다.",
    "sample": "입력\n\n4.4 180 200\n\n출력\n\nWide Receiver\n\n입력\n\n5.5 350 700\n\n출력\n\nLineman\n\n입력\n\n4.4 205 350\n\n출력\n\nWide Receiver Quarterback\n\n입력\n\n5.2 210 500\n\n출력\n\nNo positions"
  },
  {
    "id": 61,
    "title": "whatisn",
    "time_limit": "1 초",
    "description": "나탈리는 손가락 세는 연습을 하고 있다.",
    "input": "1 에서 10 사이 중 한 수가 주어진다.( 1 , 10 포함 )",
    "output": "가짓 수를 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n3"
  },
  {
    "id": 62,
    "title": "kangaroo",
    "time_limit": "1 초",
    "description": "캥거루 세 마리가 게임을 하고 있다.",
    "input": "처음 위치한 곳의 위치가 정수 A,B,C 로 주어진다.(0 < A < B < C < 100)",
    "output": "최대 점프 수를 출력한다.",
    "sample": "입력\n\n2 3 5\n\n출력\n\n1\n\n입력\n\n3 5 9\n\n출력\n\n3"
  },
  {
    "id": 63,
    "title": "coci_kornislav",
    "time_limit": "1 초",
    "description": "[요약] 숫자 네개가 주어질 때 네 수의 조합으로 한 방향 90 도 꺽는 동작으로 닫힌 사각형을 만들 때 이 중 최대 면적을 구하는것이 문제이다.",
    "input": "The first line contains four positive integers A, B, C and D (0 < A, B, C, D < 100), the four chosen \nintegers.",
    "output": "Output the largest area.",
    "sample": "input \n\n1 2 3 4 \n\noutput \n\n3 \n\ninput \n\n4 4 3 4 \n\noutput \n\n12"
  },
  {
    "id": 64,
    "title": "can(open)",
    "time_limit": "1 초",
    "description": "어떤 커피 캔 속에 검은 콩과 하얀 콩이 섞여 들어가 있다. 그리고 당신에게는 무한 개의 검은 콩이 주어져 있다.",
    "input": "캔에 든 검은 콩의 개수와 하얀 콩의 개수가 순차적으로 주어진다. 각 콩의 개수는 2^31-1 이하이다.",
    "output": "최종적으로 남은 콩의 색깔이 하얀색이면 white, 검은색이면 black을 출력한다.",
    "sample": "입력\n\n25 23\n\n출력\n\nwhite\n\n입력\n\n16 4\n\n출력\n\nblack\n\n입력\n\n17 2\n\n출력\n\nblack"
  },
  {
    "id": 65,
    "title": "equation",
    "time_limit": "1 초",
    "description": "",
    "input": "a , b , c, d 가 입력으로 주어진다. 각 수는 -1000 이상 1000 이하 정수이다.",
    "output": "근이 두 개  이상 존재하면 many , 존재하지 않으면 none  아니면 구한 근을 소수 이하 세자리까지 출력한다.",
    "sample": "입력\n\n3 2 3 2\n\n출력\n\nmany\n\n입력\n\n3 2 3 8\n\n출력\n\nnone\n\n입력\n\n4 2 3 8\n\n출력\n\n6.000"
  },
  {
    "id": 66,
    "title": "fourth",
    "time_limit": "1 초",
    "description": "주희를 도와 네 번째 점을 구하라.",
    "input": "1 에서 1000 이하의 정수 3 쌍이 입력으로 주어진다.",
    "output": "네 번째 점을 구하라.",
    "sample": "입력\n\n5 5\n5 7\n7 5\n\n출력\n\n7 7\n\n입력\n\n30 20\n10 10\n10 20\n\n출력\n\n30 10"
  },
  {
    "id": 67,
    "title": "coci_tablica",
    "time_limit": "1 초",
    "description": "페리카는 수학을 잘 한다. 단 그의 하나의 약점은 더하기와 나누기이다. 그를 돕기 위해 선생님은 다음과 같은 문제를 제시했다.",
    "input": "첫 줄에는 A,B 가\n두 번째 줄에는 C,D 가 주어진다.\n네 수는 정수이고 100 을 넘지 않는다.",
    "output": "최소 회전 수를 출력한다.",
    "sample": "입력\n\n1 2\n3 4\n\n출력\n\n2\n\n입력\n\n5 9\n7 2\n\n출력\n\n0\n\n입력\n\n41 99\n100 13\n\n출력\n\n1"
  },
  {
    "id": 68,
    "title": "coci_sok(special judge)",
    "time_limit": "1 초",
    "description": "[문제 요약] 미코와 슬라브코는 몇 리터의 오렌지, 사과 ,파인애플 쥬스를 샀다.",
    "input": "The first line contains three integers, A, B, C, (1 ≤ A, B, C ≤ 500), amount of orange, apple and pineapple juice they bought, in liters.\nThe second line contains three integers, I, J, K, (1 ≤ I, J, K ≤ 50), the ratio of orange, apple and pineapple juice in the cocktail.",
    "output": "The first and only line of output should contain three decimal numbers,\nleftover amounts of each juice, in liters.\nNote: solutions with relative error 10^-4 or smaller will be accepted.",
    "sample": "입력\n\n10 10 10\n3 3 3\n\n출력\n\n0 0 0\n\n입력\n\n9 9 9\n3 2 1\n\n출력\n\n0 3 6\n\n입력\n\n10 15 18\n3 4 1\n\n출력\n\n0 1.666667 14.666667"
  },
  {
    "id": 69,
    "title": "tri",
    "time_limit": "1 초",
    "description": "세 정수를 입력 받아 이 수가 삼각형을 만들 수 있는지를 판단하는 프로그램을 작성하는 것이 문제이다.",
    "input": "세 양의 정수가 입력으로 주어진다. 세 수 모두 100000 이하이다.",
    "output": "가능하면 yes , 아니면 no 를 출력한다.",
    "sample": "입력\n\n2 3 5\n\n출력\n\nno\n\n입력\n\n4 5 6\n\n출력\n\nyes"
  },
  {
    "id": 70,
    "title": "rao(open)",
    "time_limit": "1 초",
    "description": "삼각형의 세 변의 길이가 주어질 때 이 삼각형이 직각(right) 삼각형인지 , 예각(acute) 삼각형 인지 , 둔각(obtuse) 삼각형인지를 판별 하라.",
    "input": "세 변의 길이 a,b,c 가 주어진다.(a,b,c 는 10000 이하의 자연수)\n이루어질 수 없는 삼각형은 주어지지 않는다.",
    "output": "right,acute,obtuse 중 하나를 출력한다.",
    "sample": "입력\n\n5 3 4\n\n출력\n\nright"
  },
  {
    "id": 71,
    "title": "up_down",
    "time_limit": "1 초",
    "description": "Nikky 와 Byron 체육시간에 게임을 하고 있다.",
    "input": "5 개의 정수 a,b,c,d,s 가 주어진다.\n단, a,b,c,d 는 100 이하의 정수이고 a > b , c > d 이고 s 는 10000 이하의 정수이다.",
    "output": "세 가지 중 하나를 출력한다.\nNikky\nByron\nTied",
    "sample": "입력\n\n4\n2\n5\n3\n12\n\n출력\n\nByron"
  },
  {
    "id": 72,
    "title": "beat",
    "time_limit": "1 초",
    "description": "수퍼볼 선데이날이다. 전반전이 끝난 후 막간을 이용해서 지역 해커는 게임의 스코어를 맞추는 게임을 제안했다.",
    "input": "두 개의 수 s , d 가 입력으로 주어진다.  s 는 합이고 , d 는 차( 큰수 - 작은수)이다.",
    "output": "각 테스트 데이터당 두 팀의 점수를 큰 수 , 작은 수 순으로 출력한다. 가능하지 않는 경우에는 impossible 을 출력한다.\n점수는 음수가 될 수 없다.",
    "sample": "입력\n\n40 20\n\n출력\n\n30 10\n\n입력\n\n20 40\n\n출력\n\nimpossible"
  },
  {
    "id": 73,
    "title": "eva",
    "time_limit": "1 초",
    "description": "",
    "input": "한 줄당 4 개의 자연수가  입력으로 주어진다.  네 개의 수는 등차 혹은 등비 수열이고 등비수열인 경우\n    공비는 자연수이다.",
    "output": "원래 수열과 다음 항의 수를 출력한다.",
    "sample": "입력\n\n1 2 3 4\n\n출력\n\n1 2 3 4 5\n\n입력\n\n1 2 4 8\n\n출력\n\n1 2 4 8 16"
  },
  {
    "id": 74,
    "title": "reduction",
    "time_limit": "1 초",
    "description": "560 * 400 밀리미터 이미지를 표준 용지( 218 * 280 mm) 로 복사하려고 한다.",
    "input": "4 개의 정수가 입력으로 주어진다. 처음 두 수는 복사할 이미지의 크기이고 다음 두 수는 복사용지의\n      크기이다.",
    "output": "답은 1 에서 100% 사이의 정수이다.",
    "sample": "입력\n\n560 400 218 280\n\n출력\n\n50%\n\n입력\n\n10 25 88 10\n\n출력\n\n100%\n\n입력\n\n8 13 5 1\n\n출력\n\n12%\n\n입력\n\n199 333 40 2\n\n출력\n\n1%"
  },
  {
    "id": 75,
    "title": "tpz(open)",
    "time_limit": "1 초",
    "description": "10 명의 사람에게 스타크래프트 종족 선호를 조사 했더니",
    "input": "첫 줄에는인원 수 N (100 이하) 이 주어지고  다음 줄에는 세 개의 정수가 주어진다. 각 수는 N 을 넘지 않는다.",
    "output": "한 줄에 최대 , 최소 인원수를 출력한다.",
    "sample": "입력\n\n10\n8 7 9\n\n출력\n\n7 4"
  },
  {
    "id": 76,
    "title": "cross(open)",
    "time_limit": "1 초",
    "description": "",
    "input": "",
    "output": "",
    "sample": "입력 \n\n20 80\n85 40\n\n출력 \n\ncross"
  },
  {
    "id": 77,
    "title": "pool",
    "time_limit": "1 초",
    "description": "수영장에서 다이빙에 몇 번 실패한 이후 Wilbur는 자기 뒷마당에 직사각형 모양의 수영장을 지으려 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n2\n0 0\n1 1\n\n출력\n\n1\n\n\n입력\n\n1\n1 1\n\n출력\n\n-1"
  },
  {
    "id": 78,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 79,
    "title": "overlap(open)",
    "time_limit": "1 초",
    "description": "두 사각형 좌표가 주어질 때 두 사각형이 오버랩(overlap) 되는지 아닌지를 판단하는 프로그램을 작성하시오. 변을 공유하거나 꼭지점을 공유하는 경우에도 overlap 되는 것으로 간주한다.",
    "input": "한 줄에 4 개 씩 음이 아닌 정수 x1 y1 x2 y2 가 두 줄로 주어진다.\n(x1,y1) 은 왼쪽 아래 좌표이고, (x2,y2) 은 오른쪽 위 좌표이다. 입력되는 수는 200 보다 작다.",
    "output": "overlap 되는 경우에는 \"Overlap\" 아니면 \"No overlap\" 을 출력한다.",
    "sample": "입력\n\n1 1 2 2\n2 2 5 3\n\n출력\n\nOverlap"
  },
  {
    "id": 80,
    "title": "rlpn",
    "time_limit": "1 초",
    "description": "2차원 격자공간에 두 개의 꼭짓점 좌표로 표현되는 직사각형이 있다. 직사각형은 아래와 같이 왼쪽 아래 꼭짓점 좌표 (x,y) 와 오른쪽 위 꼭짓점 좌표 (p,q) 로 주어진다.",
    "input": "8개의 정수가 하나의 공백을 두고 나타나는데, 첫 4개의 정수는 첫 번째 직사각형을, 나머지 4개의 정수는 두 번째 직사각형을 각각 나타낸다. 단 입력 직사각형의 좌표 값은 1이상 50,000 이하의 정수로 제한된다.",
    "output": "해당 단어를 출력해야 한다.",
    "sample": "입력\n\n3 10 50 60 100 100 200 300\n\n출력\n\nnone\n\n입력\n\n45 50 600 600 400 450 500 543\n\n출력\n\nrectangle\n\n입력\n\n11 120 120 230 50 40 60 440\n\n출력\n\nrectangle\n\n입력\n\n35 56 67 90 67 80 500 600    \n\n출력 \n\nline"
  },
  {
    "id": 81,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 82,
    "title": "example_switch",
    "time_limit": "1 초",
    "description": "년도 , 달을 입력으로 받아 이 달의 날 수를 구하는 프로그램을 작성하시오.",
    "input": "두 정수 y , m 이 입력으로 주어진다. y 는 1000 이상 , m 은 1 에서 12 사이의 정수이다.",
    "output": "해당 달의 날 수를 출력한다.",
    "sample": "입력\n\n2009 10\n\n출력\n\n31"
  },
  {
    "id": 83,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 84,
    "title": "vauvau",
    "time_limit": "1 초",
    "description": "어떤 마을에 집배원,우유 배달, 환경 미화원 아저씨가 한 집에서 키우는 개 때문에 매일 아침 곤욕을 치르고 있다.",
    "input": "첫 줄은 A,B,C,D 가 주어진다.\n다음 줄은 P,M,G 가 주어진다. 순서대로 집배원(postman),우유 배달(milkman) , 환경 미화원(garbage) 아저씨가 그 집에 도착하는 시각이다.\n모든 수는 1 이상 999 이하의 정수이다.",
    "output": "both,one,none 중 하나를 출력한다.",
    "sample": "입력\n\n2 2 3 3\n1 3 4\n\n출력\n\nboth\none\nnone\n\n입력\n\n2 3 4 5\n4 9 5\n\n출력\n\none\nnone\nnone"
  },
  {
    "id": 85,
    "title": "profit",
    "time_limit": "1 초",
    "description": "",
    "input": "a,b,c 가 입력으로 주어진다. (모두 자연수이고 a < 100000 , b,c < 100)",
    "output": "이윤을 소수 첫째 자리에서 반올림하여 출력한다. 손해를 볼 경우에는 loss 를 출력한다.",
    "sample": "입력\n\n100 10 10\n\n출력\n\nloss\n\n입력\n\n100 10 8\n\n출력\n\n1"
  },
  {
    "id": 86,
    "title": "queen",
    "time_limit": "1 초",
    "description": "N*M 격자에서 인접한 두 대각선,같은 가로세로줄 내에서는 Queen을 둘 수 없다고 할 때, Quuen을 배치할 수 있는 최대 개수를 구하는 문제이다.",
    "input": "입력의 첫 줄에는 가로행의 크기를 나타내는 N(4 <= N <= 2\n63\n-1) 과 세로행의 크기를 나타내는 M(4 <= M <=2\n63\n-1) 이 주어진다.",
    "output": "최대로 배치할 수 있는 Queen의 수를 출력하여라.",
    "sample": "입력 예\n\n6 6\n\n출력 예\n\n6"
  },
  {
    "id": 87,
    "title": "clo",
    "time_limit": "1 초",
    "description": "석현이는 새로 시계를 샀다.",
    "input": "첫 줄에 현재 시각 N ( 1 <= N  <= 12 )이 입력된다.",
    "output": "겹칠 시각의 분을 소수점 6자리까지 출력한다.\n만약 그 시각에 겹치지 않는다면 \"CAN'T SEE!\"를 출력한다.",
    "sample": "입력\n\n12\n\n출력\n\n0.000000\n\n입력\n\n6\n\n출력\n\n32.727273\n\n입력\n\n11\n\n출력\n\nCAN'T SEE!"
  },
  {
    "id": 88,
    "title": "quadratic",
    "time_limit": "1 초",
    "description": "2차 방정식이 a*x^2 + b*x + c = 0 형태로 주어질 때, 실수 범위에서 근의 개수와 근을 출력하는 프로그램을 작성해보자.",
    "input": "3개의 정수 a, b, c 가 빈 칸으로 구분되어 입력으로 주어진다. (-100000 < a, b, c < 100000)",
    "output": "첫 번째 줄에는 근의 개수를 출력한다. (근이 없으면 0, 1개이면 1, 2개이면 2)\n두 번째 줄에는 근을 작은 숫자부터 순서대로 빈 칸으로 구분하여 출력한다.\n근의 값은 소수점 아래 3자리까지 반올림해서 출력한다.",
    "sample": "입력\n\n1 -3 1\n\n출력\n\n2\n0.382 2.618"
  },
  {
    "id": 89,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 90,
    "title": "bus",
    "time_limit": "1 초",
    "description": "어느날 공연을 마치고 버스를 타고 돌아가던 피에로는 창밖을 보다가, 바로 옆을 지나치는 버스를 보고 문득 한가지 궁금한 점이 생겼다.",
    "input": "입력의 끝이 EOF 일때까지 각 데이터마다 공백으로 구분되어 입력된다.\n각 데이터별\n첫 줄에는 바로 옆을 지나치는 버스의 방향이 입력된다. 동일한 방향일때는 1을, 마주보는 방향일때는 0이 입력된다.\n두번째 줄에는 피에로가 타고 있는 버스의 배차간격이 자연수로 주어진다.\n세번째 줄에는 옆을 지나친 버스의 배차간격이 자연수로 주어진다.",
    "output": "각 줄마다 같은 번호의 다른 버스를 마주칠 때까지 걸린 시간을 소수 둘째자리까지 출력해주자. 만약 마주치지 못한다면, \"-1\"을 출력해주자.",
    "sample": "입력\n\n1\n15\n13\n\n0\n15\n15\n\n1\n15\n15\n\n출력\n\n97.50\n7.50\n-1"
  },
  {
    "id": 91,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n#include < stdio.h >\n int main()\n{\n   int i;\n    for( i = 1 ; i <= 5 ; i++){\n      printf(\"hello\");\n   }\n }",
    "time_limit": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n#include < stdio.h >\n int main()\n{\n   int i,sum;\n    sum = 0;\n   for(i = 1 ; i <= 10 ; i++){\n      sum+=i;\n   }\n   printf(\"%d\\n\",sum);\n}",
    "description": "조건식이 참이면 루프 바디를 실행 후 증감식 다시 조건식이 참이면 반복 ... 조건이 거짓일때 까지 반복.",
    "input": "",
    "output": "",
    "sample": "차례:\n  -for \n  -break\n  -continue"
  },
  {
    "id": 92,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 93,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 94,
    "title": "seq(open)",
    "time_limit": "1 초",
    "description": "두 자연수가 주어진다. 두 수 사이의 수(두 수 포함)를 차례대로 출력하는 프로그램을 작성하시오.",
    "input": "두 수가 입력으로 주어진다.  두 수는 100 이하의 자연수이다.",
    "output": "두 수 사이에 공백을 하나 준다.",
    "sample": "입력\n\n3 6\n\n출력\n\n3 4 5 6\n\n입력\n\n6 3\n\n출력\n\n3 4 5 6"
  },
  {
    "id": 95,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 96,
    "title": "sum",
    "time_limit": "1 초",
    "description": "각 수는 100 이하의 자연수이다.",
    "input": "7 개의 수가 입력으로 주어진다.\n각 수는 100 이하의 자연수이다.",
    "output": "",
    "sample": "입력\n\n6 2 9 8 3 4 7\n\n출력\n\n39"
  },
  {
    "id": 97,
    "title": "seq2",
    "time_limit": "1 초",
    "description": "수 N 을 입력으로 받어서 출력 예의 형식으로 합을 구하는 프로그램이다.",
    "input": "수 N 이 입력으로 주어진다.  N 은 1000 이하의 자연수이다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n5\n\n출력\n\n1..1 1\n1..2 3\n1..3 6\n1..4 10\n1..5 15"
  },
  {
    "id": 98,
    "title": "adigit",
    "time_limit": "1 초",
    "description": "한 자리 정수는 한자리수 끼리의 합 , 두 자리 정수는 두자리 정수 , 세 자리 정수는 세자리 정수의 합을 구하는 문제이다.",
    "input": "입력은 7 개 이고 , 각 수는 999 이하의 양의 정수이다.",
    "output": "세 수가 출력된다. 각각 한자리 정수,두자리 정수,세자리 정수끼리의 합이다.",
    "sample": "입력\n\n1 10 100 2 20 300 1\n\n출력\n\n4 30 400"
  },
  {
    "id": 99,
    "title": "1ton1",
    "time_limit": "1 초",
    "description": "자연수 n 을 입력으로 받아 1 부터 n 까지의 보기의 예와 같이 출력하는 프로그램을 작성하시오.",
    "input": "1000 이하의 자연수가 입력으로 주어진다.",
    "output": "보기에 제시된 형식으로 출력 한다.  출력되는 문자사이에 공백은 없다.",
    "sample": "입력\n\n5\n\n출력\n\n1+2+3+4+5=15"
  },
  {
    "id": 100,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 101,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 102,
    "title": "mM",
    "time_limit": "1 초",
    "description": "7 개의 수를 입력으로 받아 입력 받은 수 중 최대값,최소값을 출력하는 프로그램을 작성하시오.",
    "input": "7 개의 수는 100 이하의 자연수이다.",
    "output": "두 수를 출력한다. 첫 수는 최대 , 두 번째수는 최소값이다.",
    "sample": "입력\n\n6 2 9 8 3 4 7\n\n출력\n\n9 2"
  },
  {
    "id": 103,
    "title": "sb",
    "time_limit": "1 초",
    "description": "농부 7 명 , 각 농부별로 수확한 딸기 바구니의 수를 입력 받아서 가장 부지런한 농부 번호를 출력하는 프로그램을 작성하세요.",
    "input": "7 명의 농부가  수확한 딸기 바구니 수가 입력으로 주어진다.\n      각 수는 100 이하의 자연수이고 같은 수는 입력으로 주어지지 않는다.\n입력되는 순서대로 1 번농부 , 2 번 , 3 번 ...",
    "output": "가장 부지런한 농부 번호를 출력한다.",
    "sample": "입력\n\n6 2 9 8 1 4 7\n\n출력\n\n3"
  },
  {
    "id": 104,
    "title": "3np1",
    "time_limit": "1 초",
    "description": "6 이 입력으로 주어지면",
    "input": "1000 이하의 자연수가 입력으로 주어진다.",
    "output": "공백 한자리로 수를 구분한다.",
    "sample": "입력\n\n4\n\n출력\n\n4 2 1\n\n입력\n\n6\n\n출력\n\n6 3 10 5 16 8 4 2 1"
  },
  {
    "id": 105,
    "title": "odd",
    "time_limit": "1 초",
    "description": "예를 들어, 7개의 자연수 12, 77, 38, 41, 53, 92, 85가 주어지면 이들 중 홀수는 77, 41, 53, 85이므로 그 합은",
    "input": "첫 째 줄부터 일곱 번째 줄까지 한 줄에 하나의 자연수가 주어진다. 주어지는 자연수는\n100 이하이다.",
    "output": "홀수가 존재하지 않는 경우에는 첫째 줄에 -1 을 출력한다. 홀수가 존재하는 경우 첫째 줄에\n홀수들의 합을 출력하고, 둘째 줄에 홀수들 중 최소값을 출력한다.",
    "sample": "입력\n\n12\n77\n38\n41\n53\n92\n85\n\n출력\n\n256\n41"
  },
  {
    "id": 106,
    "title": "1ton",
    "time_limit": "1 초",
    "description": "3 을 입력으로 받으면",
    "input": "1000 이하의 자연수가 입력으로 주어진다.",
    "output": "",
    "sample": "입력\n\n5\n\n출력\n\n15"
  },
  {
    "id": 107,
    "title": "Nsum(open)",
    "time_limit": "1 초",
    "description": "N 이 주어질 때, 1+2+…+(N-1)+N 을 더하면 M 을 만들 수 있다. M 이 주어질 때, N 을 구하여라.",
    "input": "첫째 줄에 1~N 의 합 M 이 입력된다. 답을 구할수 없는 경우는 입력으로 주어지지 않는다.",
    "output": "첫째 줄에 N 을 출력한다. N 은 커야 100 을 넘지 않는다.",
    "sample": "입력\n\n45\n\n출력\n\n9"
  },
  {
    "id": 108,
    "title": "fact",
    "time_limit": "1 초",
    "description": "",
    "input": "12 이하인 자연수가 입력으로 주어진다.",
    "output": "n! 값을 출력한다.",
    "sample": "입력\n\n5\n\n출력\n\n120"
  },
  {
    "id": 109,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 110,
    "title": "financial",
    "time_limit": "1 초",
    "description": "래리는 올해 졸업을하고 드디어 취업을 했다. 그는 많은 돈을 벌었지만 충분한 것 같지가 않았다. 래리는 그의 재정 포트폴리오를 작성해서 재정 설계사에게 그의 재정 문제를 해결하려고 한다.",
    "input": "입력은 12 줄로 이루어지고 , 각 줄당 그 달의 수입 금액이 주어진다.\n     \n      모든 수는 양수이다. penny 단위로 주어지고 달러 기호는 포함되지 않는다.",
    "output": "출력은 수 하나 , 지난 12 개월 동안의 평균 금액을 출력한다.\n달러 기호을 먼저 출력 후 가장 가까운 penny 단위로 반올림하여 출력한다.",
    "sample": "입력\n\n100.00\n489.12\n12454.12\n1234.10\n823.05\n109.20\n5.27\n1542.25\n839.18\n83.99\n1295.01\n1.75\n\n출력\n\n$1581.42"
  },
  {
    "id": 111,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 112,
    "title": "yaksu",
    "time_limit": "1 초",
    "description": "6을 예로 들면",
    "input": "첫째 줄에 n과 k가 빈칸을 사이에 두고 주어진다. n은 1 이상 10,000 이하이다. k는 1 이상 n 이하이다.",
    "output": "첫째 줄에 n의 약수들 중 k번째로 작은 수를 출력한다. 만일 n의 약수의 개수가 k개보다 적어서 k번째 약수가 존재하지 않을 경우에는 0을 출력하시오.",
    "sample": "6 ÷ 1 = 6 … 0\n   6 ÷ 2 = 3 … 0\n   6 ÷ 3 = 2 … 0\n   6 ÷ 4 = 1 … 2\n   6 ÷ 5 = 1 … 1\n   6 ÷ 6 = 1 … 0"
  },
  {
    "id": 113,
    "title": "ft",
    "time_limit": "1 초",
    "description": "자연수가 입력으로 주어진다. 이 수의 약수를 출력하고 , 다음 줄에는 약수의 개수 , 다음 줄에는 약수의 총합 , 다음 줄에는 약수의 곱의 일의 자리수를 출력한다.",
    "input": "주어지는 수는 1000 이하의 자연수이다.",
    "output": "",
    "sample": "입력\n\n6\n\n출력\n\n1 2 3 6\n4\n12\n6"
  },
  {
    "id": 114,
    "title": "complete",
    "time_limit": "1 초",
    "description": "6 은 완전수이다. 6 의 약수는",
    "input": "1000 이하의 자연수를 입력받는다.",
    "output": "완전수이면 yes , 아니면 no 를 출력한다.",
    "sample": "입력\n\n6\n\n출력\n\nyes\n\n입력\n\n8\n\n출력\n\nno"
  },
  {
    "id": 115,
    "title": "perfect",
    "time_limit": "1 초",
    "description": "완전수(perfect) , 부족수(deficient) , 과잉수(abundant) 를 출력하는 문제.",
    "input": "각 수는 60,000 보다 작다.",
    "output": "수는 5 자리 확보후 오른쪽에 맞추어 출력후 2 칸 스페이스를 준 후 수의 종류를 출력한다.",
    "sample": "입력\n\n15\n\n출력\n\n   15  DEFICIENT\n\n입력\n\n28\n\n출력\n\n   28  PERFECT\n\n입력\n\n   56\n   \n출력\n\n   56  ABUNDANT"
  },
  {
    "id": 116,
    "title": "validate",
    "time_limit": "1 초",
    "description": "컴퓨터를 제조하는 회사인 KOI 전자에서는 제조하는 컴퓨터마다 6자리의 고유번호를 매긴다.",
    "input": "첫째 줄에 고유번호의 처음 5자리의 숫자들이 빈칸을 사이에 두고 하나씩 주어진다.",
    "output": "첫째 줄에 검증수를 출력한다.",
    "sample": "입력\n\n0 4 2 5 6\n\n출력\n\n1"
  },
  {
    "id": 117,
    "title": "center1",
    "time_limit": "1 초",
    "description": "예를 들어 , 4 는 1+2+3=6 이고 5 부터 차례대로 더해갈 때 5+6=11 이므로 4 는 중간수가 될 수 없다.",
    "input": "10,000 이하의 자연수가 입력으로 주어진다.",
    "output": "중간수이면 O  , 아니면 X 를 출력한다.",
    "sample": "입력\n\n6\n\n출력\n\nO\n\n입력\n\n10\n\n출력\n\nX"
  },
  {
    "id": 118,
    "title": "triangular_sum(open)",
    "time_limit": "1 초",
    "description": "T(4) 는 아래와 같다.",
    "input": "300 이하인 n 이 입력된다.",
    "output": "w(n) 값을 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n45"
  },
  {
    "id": 119,
    "title": "modular_inverse(open)",
    "time_limit": "1 초",
    "description": "암호학에서 모듈러 인버스(modular inverse)를 구하는 것은 핵심적인 부분이다.",
    "input": "자연수 x 와 m 이 주어진다. (m <= 100)",
    "output": "답이 없는 경우 \"No such integer exists.\" 를 출력한다.",
    "sample": "입력\n\n4 17\n\n출력\n\n13\n\n입력\n\n6 10\n\n출력\n\nNo such integer exists."
  },
  {
    "id": 120,
    "title": "lunacy",
    "time_limit": "1 초",
    "description": "호규는 몇 달간의 다이어트와 사투 후에 몸무게에 대한 과도한 집착을 보이게 되었다. 그는 이상한 방식으로 자신을 합리화 했다.",
    "input": "하나이상의 데이터가 주어진다. 주어지는 수는 실수이고 입력의 끝은 음의 실수이다.",
    "output": "각 입력에 대해서 아래 형식으로 출력한다.\n\"Objects weighing X on Earth will weigh Y on the moon.\"\nX 는 지구에서의 무게이고 , Y 는 달에서의 무게이다. 둘다 소수이하 두자리까지 출력한다.",
    "sample": "입력\n\n100.0\n12.0\n0.12\n120000.0\n-1.0\n\n출력\n\nObjects weighing 100.00 on Earth will weigh 16.70 on the moon.\nObjects weighing 12.00 on Earth will weigh 2.00 on the moon.\nObjects weighing 0.12 on Earth will weigh 0.02 on the moon.\nObjects weighing 120000.00 on Earth will weigh 20040.00 on the moon."
  },
  {
    "id": 121,
    "title": "ftod(open)",
    "time_limit": "1 초",
    "description": "0 과 1 사이의 분수가 입력으로 주어질 때 소수이하 k 자리까지 출력하는 문제이다.",
    "input": "세 수가 입력으로 주어진다.\n차례대로 분자, 분모 ,표현할 소수이하 자리 k 이다. 세수 모두 1000 이하의 자연수이다.",
    "output": "출력 예의 형식으로 출력한다.\n소수이하 유효자리를 포함하는 것은 보장되고 반올림은 하지 않는다.",
    "sample": "입력\n\n6 7 2\n\n출력\n\n0.85"
  },
  {
    "id": 122,
    "title": "chemistry",
    "time_limit": "1 초",
    "description": "현재 온도와 바로 전 온도 뺀 값을 출력하는 프로그램을 작성하시오.",
    "input": "입력은 일련의 온도가 입력으로 주어진다. 온도의 범위는 -10 에서 200 사이이다. \n온도는 소수이하 2 자리까지 주어지고 , 999 는 입력의 끝을 나타낸다.\n적어도 2 개 이상의 온도가 입력으로 주어진다.",
    "output": "차이는 소수이하 2 자리로 출력한다.\n1.2 라면 1.20 로\n0.1 이라면 0.10 으로\n1.2 인 경우 1.20 으로\n출력의 마지막에는 End of Output 을 출력한다.",
    "sample": "입력\n\n10.0\n12.05\n30.25\n20\n999\n\n출력\n\n2.05\n18.20\n-10.25\nEnd of Output"
  },
  {
    "id": 123,
    "title": "arith_seq(open)",
    "time_limit": "1 초",
    "description": "등차수열이란 인접한 항과의 차이가 동일한 수열을 말한다.",
    "input": "세 정수 a , d , an 이 주어진다.  -1000 < a,d < 1000 ,  -100000 < an < 100000\n단 , d 는 0 이 아니다.",
    "output": "an 이 몇 번째 항 인 가를 출력한다. 만약 이 수열의 수가 아니면 X 를 출력한다.",
    "sample": "입력\n\n1 2 9\n\n출력\n\n5\n\n입력\n\n2 2 9\n\n출력\n\nX"
  },
  {
    "id": 124,
    "title": "selfdup",
    "time_limit": "1 초",
    "description": "어떤 자연수 N 을 제곱했을 때, 그 제곱수의 맨 뒷자리에 원래의 수 N이 다시 나타나면, 우리는 그 수 N을 자기복제수라고 하자.",
    "input": "입력은 없다.",
    "output": "크기 순으로 한 줄에 하나씩 출력한다.",
    "sample": "출력\n\n1\n5\n..."
  },
  {
    "id": 125,
    "title": "rounders(open)",
    "time_limit": "1 초",
    "description": "10 보다 큰 수이면 일의 자리에서 반올림하고 , 결과가 100 보다 크면 10 의 자리에서 반올림하고 , 결과가 1000 보다 크면 결과를 100 의 자리에서 반올림하고 , ....",
    "input": "반올림 할 수 x 가 주어진다. 0 <= x <= 99 999 999",
    "output": "반올림 한 결과를 출력한다.",
    "sample": "입력\n\n15\n\n출력\n\n20\n\n입력\n\n5\n\n출력\n\n5\n\n입력\n\n99\n\n출력\n\n100\n\n입력\n\n12345678\n\n출력\n\n10000000\n\n입력\n\n44444445\n\n출력\n\n50000000"
  },
  {
    "id": 126,
    "title": "sc",
    "time_limit": "1 초",
    "description": "각 점수별 학점은 다음과 같다.",
    "input": "1 에서 100 사이 정수가 입력으로 주어진다. 입력된 점수는 100 개를 넘지 않는다.\n\n-1 은 입력의 끝이다.",
    "output": "첫 수는 입력된 점수의 수이고\n다음 줄 부터 차례대로 A , B , C, D ,F 학점의 수를 출력한다.",
    "sample": "입력\n\n100 90 60 58 -1\n\n출력\n\n4\n2\n0\n0\n1\n1"
  },
  {
    "id": 127,
    "title": "hangover",
    "time_limit": "1 초",
    "description": "얼마나 멀리 테이블 위에 카드를 쌓아 돌출 시킬 수 있을까?",
    "input": "입력의 첫 줄에 양의 실수 c 가 주어진다. 이 값은 적어도 0.01 이상 5.20 이하이다. 총 자리수는 세자리.",
    "output": "각각의 테스트 케이스에 대하여 적어도 입력 c 만큼의 카드 길이를 만들 수 있는 최소한의 필요 카드 개수를 출력하라. 예를 보고 정확한 출력 양식을 사용하라.",
    "sample": "입력\n\n1.00\n\n출력\n\n3 card(s)\n\n입력\n\n3.71\n\n출력\n\n61 card(s)\n\n입력\n\n0.04\n\n출력\n\n1 card(s)\n\n입력\n\n5.19\n\n출력\n\n273 card(s)"
  },
  {
    "id": 128,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 129,
    "title": "usa_skidesign",
    "time_limit": "1 초",
    "description": "[요약] N개의 언덕이 있고, 각 고지가 주어질 때, 각 고지를 깎거나, 쌓아올릴 수 있다(단, 깎거나 쌓아올릴때 비용은 [깎거나 쌓아올린 높이]^2이다. ) 최소고도의 고지와 최대고도의 고지의 차이가 17이 넘지 않게 만들때, 최소 비용을 구하는것이 문제이다.",
    "input": "Line 1: The integer N.\nLines 2..1+N: Each line contains the elevation of a single hill.",
    "output": "* Line 1: The minimum amount FJ needs to pay to modify the elevations\n        of his hills so the difference between largest and smallest is\n        at most 17 units.",
    "sample": "입력\n\n5\n20\n4\n1\n24\n21\n\n출력\n\n18"
  },
  {
    "id": 130,
    "title": "oddddo(open)",
    "time_limit": "1 초",
    "description": "주희는 심심해서 종이에 1 부터 홀수를 차례로 어떤 수까지 적었다. 다음 줄에는 이 적힌 수를 거꾸로 적은 후 아랫수와 윗수의 곱의 합이 얼마일까가 궁금해 졌다.",
    "input": "자연수 N 이 입력으로 주어진다. N 은 쓴 수의 개수이다. 1000 을 넘지 않는다.",
    "output": "합을 출력한다.",
    "sample": "1 3 5\n5 3 1\n------\n5 9 5"
  },
  {
    "id": 131,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 132,
    "title": "nf",
    "time_limit": "1 초",
    "description": "12 의 약수",
    "input": "1 에서 10000 사이의 자연수가 입력으로 주어진다.",
    "output": "제곱수이면 yes 아니면 no 를 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\nyes\n\n입력\n\n8\n\n출력\n\nno"
  },
  {
    "id": 133,
    "title": "prime",
    "time_limit": "1 초",
    "description": "주어진 자연수 N 이 소수인지 아닌지를 판정하라.",
    "input": "30,000 이하의 자연수가 입력으로 주어진다.",
    "output": "이 수가 소수(prime number)이면 'prime' 아니면 'not prime' 을 출력하시오.",
    "sample": "입력\n\n4\n\n출력\n\nnot prime\n\n입력\n\n7\n\n출력\n\nprime"
  },
  {
    "id": 134,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 135,
    "title": "tf",
    "time_limit": "1 초",
    "description": "양의 정수 n 을 입력으로 받아 n = o * 2^p 가 되는 홀수 o 와 정수 p 를 구하는 것이 문제이다.",
    "input": "정수 n 이 입력으로 주어진다. ( 1 <= n <= 10^6 )",
    "output": "한 줄에 o 와 p 를 출력한다.",
    "sample": "입력\n\n24\n\n출력\n\n3 3"
  },
  {
    "id": 136,
    "title": "fou(open,special judge)",
    "time_limit": "1 초",
    "description": "등차 수열을 이루는 네 수가 주어진다. 그런데 네 수 중 한 수를 잊어 버렸다. 이 수를 구하는 게 문제이다.",
    "input": "세 수가 입력으로 주어진다. 세 수는 -100 이상 100 이하의 수이다.",
    "output": "잊어 버린 한 수를 출력 한다.",
    "sample": "입력\n\n4 6 8 \n\n출력\n\n10\n\n입력\n\n10 1 4 \n\n출력\n\n7"
  },
  {
    "id": 137,
    "title": "bit_pos",
    "time_limit": "1 초",
    "description": "양의 정수 n 을 입력으로 받아 이 수를 이진수로 나타내었을 때 1 이 나타나는 위치를 구하는 것이 문제이다.",
    "input": "양의 정수  n 이 입력으로 주어진다. ( 1 <= n <= 10^6 )",
    "output": "1 이 나타나는 위치를 모두 출력한다.",
    "sample": "입력\n\n13\n\n출력\n\n0 2 3"
  },
  {
    "id": 138,
    "title": "parking",
    "time_limit": "1 초",
    "description": "미챌이 롱 스트리트를 쇼핑할 때 차를 가게 앞에 주차 후 필요한 가게로 걸어간다. 당신은 미챌을 도와 그가 걷는 거리가 최소가 되는 주차 지점을 찾는 것이다. 주차지점은 구역번호로 나누어져 있고 , 한 구역당 주차비를 지불해야 한다.",
    "input": "첫 번째 수는 미챌이 방문할 가게 수  n 이고 , 다음 n 개의 수는 가게 번호 Xi 이다.( 1 ≤ n ≤ 20,  0 ≤ Xi ≤ 99 )",
    "output": "최적의 위치에 주차해서 걷는 거리의 최소 값을 출력한다.",
    "sample": "입력\n\n4\n24 13 89 37\n\n출력\n\n152\n\n입력\n\n6\n7 30 41 14 39 42\n\n출력\n\n70"
  },
  {
    "id": 139,
    "title": "speed_limit",
    "time_limit": "1 초",
    "description": "빌과 테드는 여행을 하고 있다. 그런데 차의 거리 측정기가 고장이 나서 그들은 얼마만큼의 거리를 여행한 지를 알수가 없다. 다행스럽게도 , 빌은 스톱워치를 가지고 있어 속도와 그들이 달린 총 시간을 기록할 수가 있다.",
    "input": "첫 수는 줄 수 n ( 1 <= n <= 10) 이고 , 다음 n 라인이 주어진다.\n      각 줄의 첫 수는 시간당 마일이고 , 두번째 수는 경과 시간 이다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n3\n20 2\n30 6\n10 7\n\n출력\n\n170 miles\n\n입력\n\n2\n60 1\n30 5\n\n출력\n\n180 miles\n\n입력\n\n4\n15 1\n25 2\n30 3\n10 5\n\n출력\n\n90 miles"
  },
  {
    "id": 140,
    "title": "6174",
    "time_limit": "1 초",
    "description": "1949 년 인도 수학자 Kaprekar 는 Kaprekar 연산을 고안해냈다. Kaprekar 연산은 네 자리 수 중 모든 자리수가 같지 않은 수(1111, 2222 등을 제외한)의 각 자리의 숫자를 재배열해서 만들 수 있는 가장 큰 수와 가장 작은 수를 만들어서 그 차이를 계산하는데, 그 결과로 나온 새로운 숫자를 갖고 같은 과정을 반복하는 것이다.",
    "input": "한 줄에 네 자리 수(1000~9999)가 하나씩 주어진다. 단, 이 숫자는 1111, 2222 처럼 하나의 숫자로 이루어진 수는 제외한다.",
    "output": "Kaprekar 연산을 통해 몇 단계 만에 6174가 되는지 출력하시오.",
    "sample": "8200 - 0028 = 8172 \n8721 - 1278 = 7443 \n7443 - 3447 = 3996 \n9963 - 3699 = 6264 \n6642 - 2466 = 4176 \n7641 - 1467 = 6174 \n7641 - 1467 = 6174"
  },
  {
    "id": 141,
    "title": "square",
    "time_limit": "1 초",
    "description": "M 과 N 이 주어질 때 M 이상 N 이하의 자연수 중 완전제곱수인 것을 모두 골라 그 합을 구하고 그 중 최소값을 찾는 프로그램을 작성하시오.",
    "input": "첫 째 줄에 M 이, 둘째 줄에 N 이 주어진다. M 과 N 은 10000 이하의 자연수이며 M 은 N 보다 같거나\n작다.",
    "output": "M 이상 N 이하의 자연수 중 완전제곱수인 것을 모두 찾아\n첫째 줄에 그 합을,\n둘째 줄에 그 중 최소값을 출력한다.\n단, M 이상 N 이하의 자연수 중 완전제곱수가 없을 경우는 첫째 줄에 -1을 출력한다.",
    "sample": "입력\n\n60 \n100\n\n출력\n\n245\n64"
  },
  {
    "id": 142,
    "title": "steps",
    "time_limit": "1 초",
    "description": "원점 (0.0) 에서 시작하여 그림과 같이 0,1,2,3,... 의 숫자를 쓴다.",
    "input": "x,y 좌표가 입력으로 주어진다.",
    "output": "할당된 번호를 출력한다. 할당된 번호가 없는 경우 'No Number' 를 출력한다.",
    "sample": "입력\n\n4 2\n\n출력\n\n6\n\n입력\n\n6 6\n\n출력\n\n12\n\n입력\n\n3 4\n\n출력\n\nNo Number"
  },
  {
    "id": 143,
    "title": "count",
    "time_limit": "1 초",
    "description": "그림과 같은 규칙을 가지는 수열이 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n14\n\n출력\n\n14 IS 2/4"
  },
  {
    "id": 144,
    "title": "chessboard",
    "time_limit": "1 초",
    "description": "개미는 (1,1) 에서 시작하여 아래와 같은 모양(뱀 모양)으로 이동한다. (한 셀을 이동하는데 1 초 소요)",
    "input": "정수 N(1 <= N <= 2*10^9)이 입력으로 주어진다.",
    "output": "각 입력데이터에 대해서 좌표 (x,y) 를 출력한다.",
    "sample": "입력\n\n8\n\n출력 \n\n2 3\n\n입력 \n\n20\n\n출력 \n\n5 4\n\n입력\n\n25\n\n출력\n\n1 5"
  },
  {
    "id": 145,
    "title": "cha",
    "time_limit": "1 초",
    "description": "두 양의 정수를 입력으로 받아",
    "input": "두 수가 주어진다. 두 수는 10000 이하의 양의 정수이다.",
    "output": "한 줄에 이어지는 수를 출력한다.",
    "sample": "입력\n\n5 3\n\n출력\n\n5 3 2 1 1 0 1"
  },
  {
    "id": 146,
    "title": "layout",
    "time_limit": "1 초",
    "description": "배치 매니저는 직사각형 물체를 받아 사각형 원도에 왼쪽에서 오른쪽으로 이 물체들을 채워 나간다. 공간이 부족하면 다음 물체를 위 물체 바로 다음 행부터 같은 방식으로 채워 나간다.",
    "input": "첫 줄은 윈도의 폭 m ( 1 <= m <= 80 ) 이 주어진다.\n다음 줄 부터는 한 줄에 하나씩 물건의 가로 , 세로 길이가 주어진다. 각 물체의 가로는 80 을 넘지 않고, 세로는 100 을 넘지 않는다. -1 과 -1 이면 입력의 끝이다.",
    "output": "가로 길이 출력 + 하나의 공백 + 소문자 x + 하나의 공백 + 세로 길이를 출력한다.",
    "sample": "입력\n\n35\n10 5\n20 12\n8 13\n-1 -1\n\n출력\n\n30 x 25\n\n입력\n\n25\n10 5\n20 13\n3 12\n-1 -1\n\n출력\n\n23 x 18\n\n입력\n\n15\n5 17\n5 17\n5 17\n7 9\n7 20\n2 10\n-1 -1\n\n출력\n\n15 x 47"
  },
  {
    "id": 147,
    "title": "ncpc_soda",
    "time_limit": "1 초",
    "description": "[문제요약] 팀은 완전히 소다수 메니아이다. 하지만 구두쇠라 빈병을 팔아서 소다수를 사 먹으려고 한다.",
    "input": "Three non-negative integers e,f,c, where\ne < 1000 equals the number of empty soda bottles in Tim's possession at the start of the day,\nf < 1000 the number of empty soda bottles found during the day, and\n1 < c < 2000 the number of empty bottles required to buy a new soda.",
    "output": "How many sodas did Tim drink on his extra thirsty day?",
    "sample": "입력\n\n9 0 3 \n\n출력\n\n4\n\n입력\n\n5 5 2 \n\n출력\n\n9"
  },
  {
    "id": 148,
    "title": "cycling",
    "time_limit": "1 초",
    "description": "토미스라브는 그가 완전히 몸꽝인 것을 발견 했다. 하긴 계단을 오를 때 거의 땡칠이가 된다.",
    "input": "첫 줄에는 의 정수 N 이 주어진다. 주어지는 높이의 수이다.(1 ≤ N ≤ 1000)\n두 번째 줄에는 N 개의 양의 정수 Pi이다. (1 ≤ Pi ≤ 1000) 이는 도로의 높이이다.",
    "output": "가장 큰 오르막의 크기를  출력한다. 오르막이 존재하지 않으면 0 을 출력한다.",
    "sample": "입력\n\n5\n1 2 1 4 6\n\n출력\n\n5 \n\n입력\n\n8 \n12 20 1 3 4 4 11 1\n\n출력\n\n8\n\n입력\n\n6 \n10 8 8 6 4 3\n\n출력\n\n0\n\n두번 째 예에서 오르막은  12-20, 1-3-4, and 4-11 이고  1-3-4-4-11 는 오르막이 아니다."
  },
  {
    "id": 149,
    "title": "coins",
    "time_limit": "1 초",
    "description": "스누피가 동전을 3개 주웠다. 어느날 스누피는 동전을 던져 그것을 모두 앞면 또는 뒷면으로 만들고 싶었다. 몇 번을 해보니까 최소 2 번의 뒤집음을 하지 않고는 모두 앞 또는 뒤로 만들수 없었다.",
    "input": "여러개의 입력이 주어진다.\n각 입력에 대해 동전의 수 n ( n < 10,000 ) 이 주어지고 , 입력의 끝은 0 이다.",
    "output": "각 입력에 대해 최소 뒤집음 의 횟수를 한 줄에 하나씩 출력한다.\n답이 없는 경우 “No Solution!” 을 출력한다.",
    "sample": "- 앞 앞 앞 \n- 앞 앞 뒤\n- 앞 뒤 뒤\n- 뒤 뒤 뒤"
  },
  {
    "id": 150,
    "title": "ants",
    "time_limit": "1 초",
    "description": "일련의 개미떼들이 길이가 L cm 인 수평 작대기를 걸어간다. 이 들은 각 초당 1 cm 의 속도로 걸어가고 있다.",
    "input": "첫 줄에는 두 개의 정수가 입력으로 주어진다. 첫 수는 작대기의 길이 이고 다른 하나는 개미의 수 n 이다.\n다음 n 개의 수는 개미가 현재 위치하고 있는 위치이다.\n입력의 모든 수는 1000000 이하의 정수이다.",
    "output": "두 수를 출력한다. 첫 수는 제일 빠른 시간 , 가장 느린 시간이다.",
    "sample": "입력\n\n10 3\n2 6 7\n\n출력\n\n4 8\n\n입력\n\n214 7\n11 12 7 13 176 23 191\n\n출력\n\n38 207"
  },
  {
    "id": 151,
    "title": "log",
    "time_limit": "1 초",
    "description": "안정된 형태로 통나무를 쌓기 위해서는 아래 그림과 같이 최하단 부터 쌓기 시작하여 한 층 위로 올라갈 때 마다 통나무 개수가 한 개씩 줄어 들도록 해야 한다. 이 때 최상단에 놓인 통나무의 수는 바로 아래 층의 통나무 개수보다 한 개 이상 적다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n18\n\n출력\n\n6 3\n\n입력\n\n19\n\n출력\n\n6 1"
  },
  {
    "id": 152,
    "title": "when_is_1231(open)",
    "time_limit": "1 초",
    "description": "어떤 해 M월 어떤 주의 A1,A2,...,AN요일의 날짜의 합이 K일때, 12월 31일이 무슨 요일인지 구하는 프로그램을 작성하라.\n(일요일은 0, 월요일은 1,  화요일은 2, ..., 토요일은 6)",
    "input": "첫 번째 줄에는 M과 N이 주어진다.\n두 번째 줄에는 A1,A2,... 이 공백으로 구분되어 주어진다. (2≤N≤7)\n세 번째 줄에는 K가 주어진다.\n불가능한 경우는 주어지지 않는다.",
    "output": "그 해 12월 31일이 무슨 요일인지 출력한다.\n(일요일은 0, 월요일은 1,  화요일은 2, ..., 토요일은 6)",
    "sample": "입력\n\n5 3\n1 2 6\n18\n\n출력\n\n4"
  },
  {
    "id": 153,
    "title": "antseries",
    "time_limit": "1 초",
    "description": "개미 수열은 아래와 같이 수열이 만들어 진다.",
    "input": "40 개 이하의 1 이상 9 이하의 수가 주어진다.\n입력의 끝은 0 이다.",
    "output": "다음 단계의 수열을 한 줄에 출력한다.",
    "sample": "1\n1 1\n2 1 \n1 2 1 1\n1 1 1 2 2 1\n...."
  },
  {
    "id": 154,
    "title": "tea(open)",
    "time_limit": "1 초",
    "description": "n 명이 원탁에 앉아 tea party 를 하고 있다.",
    "input": "파티 참석자 수 n 이 ( 1 <= n  <= 32767 )  이 입력으로 주어진다.",
    "output": "최소 시간(분)을 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n2\n\n입력\n\n5\n\n출력\n\n4\n\n입력\n\n2\n\n출력\n\n0"
  },
  {
    "id": 155,
    "title": "flea(open)",
    "time_limit": "1 초",
    "description": "체스판의 각 사각형은 검은색 혹은 하얀색이 인접해 있다.( 왼쪽 아래 사각형은 검은색이다.) 이 사각형의 변의 길이 S 는 밀리미터 0 < S <= 1000 이다.",
    "input": "5 개의 정수가 입력으로 주어진다. S,x,y,dx,dy",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n10 2 3 3 2\n\n출력\n\nAfter 3 jumps the flea lands at (11, 9).\n\n입력\n\n100 49 73 214 38\n\n출력\n\nAfter 1 jumps the flea lands at (263, 111).\n\n입력\n\n25 0 0 5 25\n\n출력\n\nThe flea cannot escape from black squares.\n\n입력\n\n407 1270 1323 1 1\n\n출력\n\nAfter 306 jumps the flea lands at (1576, 1629).\n\n입력\n\n18 72 6 18 6\n\n출력\n\nThe flea cannot escape from black squares.\n\n입력\n\n407 1270 1170 100 114\n\n출력\n\nAfter 0 jumps the flea lands at (1270, 1170)."
  },
  {
    "id": 156,
    "title": "buttons",
    "time_limit": "1 초",
    "description": "아시다시피 , Yekaterinburg 는 2032 년에 하계 올림픽 개최지이다. 주최측에서는 buttons 라는 새로운 게임을 고안했다.",
    "input": "K 가 주어진다.",
    "output": "L 을 출력한다. L 이 여러가지인 경우 최소 L 을 출력하고 이기는 전략이 없는 경우 0 을 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n2"
  },
  {
    "id": 157,
    "title": "squ",
    "time_limit": "1 초",
    "description": "크기 W x L 의 직사각형이 무한개로 주어졌을때 이 사각형들로 최대한 작은 정사각형을 만들려고 할 때 몇 개의 직사각형이 필요한가?",
    "input": "입력은 두수 W, L 이다. 두 수는 1 000 000 이하의 정수이다.",
    "output": "필요한 직사각형 개수를 출력한다.",
    "sample": "입력\n\n3 2\n\n출력\n\n6"
  },
  {
    "id": 158,
    "title": "fibonacci",
    "time_limit": "1 초",
    "description": "피보나치 수열은 여러분도 잘 알고 있을 것이다.",
    "input": "여러 개의 테스트 데이터가 한꺼번에 입력된다. 테스트 데이터의 개수는 주어지지 않으며, 피보나치 수들의 개수 n (1＜n≤40) 이 입력된다. n이 2 미만일 경우, 프로그램을 종료한다.",
    "output": "\"Case #N:\"를 출력하고 개행을 한 뒤,\n케이스별 세로와 가로 길이를 콤마와 공백으로 (\", \") 구분하여 출력하고 2번 개행한다.",
    "sample": "입력\n\n6\n2\n4\n3\n-2\n\n출력\n\nCase #1:\n13, 8\n\nCase #2:\n2, 1\n\nCase #3:\n5, 3\n\nCase #4:\n2, 3"
  },
  {
    "id": 159,
    "title": "luckynum(open)",
    "time_limit": "1 초",
    "description": "다음은 처음 5개의 행운의 숫자다.",
    "input": "정수 k( 1<= k <= 10^9) 가 주어진다.",
    "output": "k번 째 행운의 숫자를 출력한다.",
    "sample": "입력\n\n5\n\n출력 \n\n74"
  },
  {
    "id": 160,
    "title": "ctu_stock",
    "time_limit": "1 초",
    "description": "부정 부패를 적발하는 것은 쉬운 일이 아니다.",
    "input": "첫 줄은 두 양의 정수 D 와 M 이 주어진다.(1 ≤ D ≤ 70000, 1 ≤ M ≤ 40000) D 는 주식거래가 이루어진 날 수이고 M 은 최초 자본 금이다.\n두 번째 줄은 D 개의 양의 정수가 주어진다.p1, p2, p3, . . . , pD (1 ≤ pi ≤ 40000) pi 는 i 번째 날에 한 주의 가격이다.",
    "output": "단지  한 번 사고 한 번만 팔수 있을 때의 최대 이윤을 출력한다.\n\n\n시작 할 때는 주식이 없다.\n문제를 간단히 하기 위해 돈이 되는 한 까지 주식을 살수 있고 정수 단위로만 주식을 팔거나 살 수 있다. 예를 들어 , 주식이 3 달러이고 11 달러를 가졌다면 3 주를 살 수 있다.\n물론 , 이윤을 극대화 하기 위해 모든 주식을 파는 것은 가능하다.",
    "sample": "입력\n\n3 1\n1 2 3\n\n출력\n\n2\n\n입력\n\n3 1000\n1200 40 10\n\n출력\n\n0\n\n입력\n\n3 10\n3 4 5\n\n출력\n\n6\n\n입력\n\n5 10\n2 3 7 1 4\n\n출력\n\n30"
  },
  {
    "id": 161,
    "title": "rational_times",
    "time_limit": "1 초",
    "description": "이상한 나라의 피에로는 궁금한 점이 생겼다.",
    "input": "유리수의 갯수를 나타내는 n( 1 <= n <= 100 )이 입력된다. 이후 각 줄에 걸쳐 유리수 k가 입력된다. ( 0 < k <= 10^9 )",
    "output": "다음 출력 예제와 같이 처리한다. 소숫점은 6자리까지만 출력하도록 한다.",
    "sample": "입력\n\n5\n1.48\n2.82\n3.24\n2.88\n4.32\n\n출력\n\n1.682411 2\n\n입력\n\n3\n2134.66\n1352.34\n2938.19\n\n출력\n\n8.481926 9"
  },
  {
    "id": 162,
    "title": "cont_prime",
    "time_limit": "1 초",
    "description": "어떤 수 n이 k개의 연속된 소수의 합으로 나타내어질 수 있다면 이 수 n을 k-연속 소수체라고 부른다.",
    "input": "n과 k가 주어진다. ( 1<=k<=10, 1<=n<=500,000)",
    "output": "n이 k-연속소수체라면 yes, k-연속소수체가 아니면 no를 출력한다.",
    "sample": "입력\n\n139 5\n\n출력\n\nyes\n\n입력\n\n24 4\n\n출력\n\nno"
  },
  {
    "id": 163,
    "title": "dfreq",
    "time_limit": "1 초",
    "description": "1 부터 N 까지 차례대로 수를 쓰내려갈 때 특정수의 빈도수를 구하는 것이 문제이다.",
    "input": "N 과 한 자리 수(0 ~ 9)가 주어진다. N 은 100 000 000 이하의 자연수이다.",
    "output": "빈도 수를 출력한다. 답은 32 비트 정수 범위를 넘어가지 않는다.",
    "sample": "입력\n\n11 1\n\n출력\n\n4"
  },
  {
    "id": 164,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 165,
    "title": "coci_jabuka(special judge)",
    "time_limit": "1 초",
    "description": "미코는 그의 친구들과 같이 먹을 파란 사과와 빨간 사과를 가지고 있다, 그들 모두는 같은 개수의 빨간,파란 사과를 가진다.",
    "input": "The first line contains two positive integers R and G separated by a space (1 ≤ R, G ≤ 1 000 000 000), \nthe numbers of red and green apples.",
    "output": "For each possible distribution, output three integers N, X and Y on one line. The number N is the \nnumber of friends that will receive apples. The numbers X and Y tell how many red and greed apples \neach of them will receive.\nEach distribution needs to be output exactly once. You may output the distributions in any order.",
    "sample": "input \n\n4 8 \n\noutput \n\n1 4 8 \n2 2 4 \n4 1 2 \n\ninput \n\n15 12 \n\noutput \n\n3 5 4 \n1 15 12 \n\ninput \n\n42 105 \n\noutput \n\n1 42 105 \n3 14 35 \n7 6 15 \n21 2 5"
  },
  {
    "id": 166,
    "title": "pie",
    "time_limit": "1 초",
    "description": "아인쉬타인 생일날 그는 가장 친한 두명의 친구를 파티에 초대했다. 그의 생일이 3 월 14일 파이 데이 여서 생일케익 대신에 생일파이를 준비했다.",
    "input": "입력으로 두 줄이 주어지고 각 줄은 친구 한 명이 먹는 파이의 양이 분수로 입력된다.\n첫수가 분자 , 두 번째 수가 분모이다.\n두 분수의 합은 1 을 넘지 않는다.",
    "output": "남은 파이의 양을 출력한다.  만약 남은 파이의 양이 없으면 0 을 출력하고 아니면  기약분수로 \n출력한다.",
    "sample": "입력\n\n1 4\n1 4\n\n출력\n\n1/2\n\n입력\n\n1 4\n2 3\n\n출력\n\n1/12\n\n입력\n\n33 99\n66 99\n\n출력\n\n0\n\n입력\n\n2 17\n5 23\n\n출력\n\n260/391"
  },
  {
    "id": 167,
    "title": "extended_euclid",
    "time_limit": "1 초",
    "description": "양의 정수 A , B 에 대해서 아래 식을 만족하는 정수 X,Y 가 존재하는 것이 확장 유클리드 알고리즘이다.",
    "input": "입력은 정수 A, B 가 주어진다.(A,B<1 000 000 001)",
    "output": "입력에 대해서 X,Y,D 를 출력한다.\n만약 여러개의 X,Y 가 존재한다면 첫 째 기준은 |X| + |Y| 가 최소인 쌍을 그리고 X <= Y 인 순으로 출력한다.",
    "sample": "입력\n\n4 6\n\n출력\n\n-1 1 2\n\n입력\n\n17 17\n\n출력\n\n0 1 17"
  },
  {
    "id": 168,
    "title": "coci_pascal",
    "time_limit": "1 초",
    "description": "아래 프로그램의 효율을 높이는 문제이다.",
    "input": "N 이 입력으로 주어진다. (1 ≤ N ≤ 10^9).",
    "output": "결과를 한 줄에 출력한다.",
    "sample": "int counter=0;\n   int i,n;\n\n   scanf(\"%d\",&n);\n\n   for(i = n-1 ; i >= 1 ; i--){\n      counter++;\n      if ( n % i == 0 ) break;\n   }\n\n   printf(\"%d\\n\",counter);"
  },
  {
    "id": 169,
    "title": "divisor1",
    "time_limit": "1 초",
    "description": "A와 B가 주어질 때, A 에서부터 B까지의 약수가 홀수인 수의 개수와 그 합을 구하는 문제이다.",
    "input": "첫 줄에는 범위를 나타내는 A,B(1<=A,B<=1,000,000,000,000[1조])가 주어진다.",
    "output": "맨 첫줄에 약수가 홀수인 수의 개수와 그의 합을 출력하라. 단 합이 커질 수 있으므로 1,000,000,003(10억 3) 으로 나눈 나머지를 출력하여라.",
    "sample": "입력\n\n2300 2410\n\n출력 \n\n2 4705"
  },
  {
    "id": 170,
    "title": "paradox(open)",
    "time_limit": "1 초",
    "description": "생일 파티에 n 명의 참석자가 있을 때 같은 생일(같은 달,같은 일)을 가질 확률을 구하라.",
    "input": "n 이 입력으로 주어진다. ( 0 <= n <= 365)",
    "output": "출력은 소수이하 6 자리(7자리에서 반올림)까지 출력한다.",
    "sample": "입력\n\n365\n\n출력\n\n1.000000\n\n입력\n\n0\n\n출력\n\n0.000000\n\n입력\n\n23\n\n출력\n\n0.507297"
  },
  {
    "id": 171,
    "title": "midp",
    "time_limit": "1 초",
    "description": "(x1,y1) 과 (x2,y2) 를 연결한 선분의 중점은 ((x1+x2)/2,(y1+y2)/2) 이다. N개의 정수 좌표가 주어졌을 때 (xi,yi) 와 (xj,yj) 를 연결한 선분의 중점이 정수 좌표가 되는 쌍 (xi,yi), (xj,yj) 의 개수를 구하는 게 문제이다.",
    "input": "첫 번째 줄에는 정수 N(1<=N<=100,000)이 주어진다.\n다음 N개의 줄에는 각각 정수 xi, yi (1<=xi,yi<=100,000) 가 공백을 사이로 주어진다. 여기서 xi, yi 는 i번째 좌표를 가리킨다.",
    "output": "중점이 정수 좌표가 되는 쌍 개수를 출력한다.",
    "sample": "입력\n\n3\n2 4\n2 6\n3 4\n\n출력 \n\n1\n\n데이터의 50%는 N<=1000 이다."
  },
  {
    "id": 172,
    "title": "insubunE(open)",
    "time_limit": "1 초",
    "description": "인수분해를 하세요.",
    "input": "a ( 0 < a < 1500 )와 b ( b < 300000 ) 인 자연수가 주어진다.\n불가능한 데이터가 주어질수도 있다.",
    "output": "예시를 참고하시오\n(x-p)(x-q)일때 p <= q이어야 한다.",
    "sample": "입력\n\n4 3\n\n출력\n\n(x-1)(x-3) \n  \n입력 \n   \n5 2\n   \n출력 \n\nimpossible"
  },
  {
    "id": 173,
    "title": "pythagoras(special judge)",
    "time_limit": "1 초",
    "description": "피타고라스의 정리는 누구나 알고 있을 것이다.",
    "input": "c 가 입력된다. c는 130,000을 넘지 않는 자연수이다.",
    "output": "c에 대해 만족하는 해가 있을 경우 자연수  a와 b (a < b)를 출력한다.\n답이 여러개 존재하는 경우 그 중 하나만을 출력하고 없을 경우 \"impossible\"을 출력한다.",
    "sample": "입력\n\n5\n\n출력\n\n3 4"
  },
  {
    "id": 174,
    "title": "e(special judge)",
    "time_limit": "1 초",
    "description": "e 는 다음과 같은 식으로 구할 수 있다.",
    "input": "입력은 없다.",
    "output": "n 을 0 에서 9 까지 보낼 때 결과를 아래 출력 예의 형식으로 출력하는게 문제이다.",
    "sample": "출력\n\nn e\n- -----------\n0 1\n1 2\n2 2.5\n3 2.666666667\n4 2.708333334"
  },
  {
    "id": 175,
    "title": "interest",
    "time_limit": "1 초",
    "description": "마지막 최종금액이 소수점을 포함한다면 소수점을 버리고 , 답은 2^31 -1 보다는 크지 않다.",
    "input": "R,M,Y 가 입력된다.",
    "output": "Y 년 후의 최종 금액을 출력한다.",
    "sample": "입력\n\n5 5000 4\n\n출력\n\n6077"
  },
  {
    "id": 176,
    "title": "egyptian_fraction(special judge)",
    "time_limit": "1 초",
    "description": "고대 이집트 사람들은 장인의 경지에 오른 엔지니어와 건축가들도 수학적인 지식은 조금의 흠을 가지고 있다. 그 중에 하나가 분수를 취급하는 그들의 체계가 그렇다.",
    "input": "입력으로 2 개의 정수 분자,분모가 주어진다. (분자 < 분모 , 각 수는 25 보다 크지 않다)",
    "output": "합으로 이루어지는 가장 짧은 단위 분수(항의 개수가 최소)의 합을 공백을 사이에 두고 출력해야 한다.\n출력의 항수는 10 개를 넘지 않고 , 답이 여러 개 존재하는 경우 그 중 하나 만 출력한다.",
    "sample": "입력\n\n3 5\n\n출력\n\n1/2 1/10\n\n입력\n\n19 20\n\n출력\n\n1/2 1/3 1/9 1/180\n\n입력\n\n5 7\n\n출력\n\n1/2 1/5 1/70\n\n입력\n\n7 23\n\n출력\n\n1/4 1/19 1/583 1/1019084"
  },
  {
    "id": 177,
    "title": "cfrac(open)",
    "time_limit": "1 초",
    "description": "1 보다 작은 분수를 입력으로 받아 아래와 같은 모양의 식으로 바꾸는 프로그램을 작성하시요.",
    "input": "분자 n , 분모 m 이 입력으로 주어진다.  ( 1000 이하, m >n  )",
    "output": "자연수 a1,a2, .. ,an 을 출력한다.",
    "sample": "입력\n\n3 4\n\n출력\n\n1 3"
  },
  {
    "id": 178,
    "title": "rendezvous(open)",
    "time_limit": "1 초",
    "description": "같은 트랙를 반대로 도는 두 개의 로봇이 한 지점에서 반대 방향으로 다른 속도로 돌 때 시작 지점에서 다시 만날 때까지 몇 번만에 다시 만날 수 있는 가를 알아내는 것이 문제이다.",
    "input": "두 로봇의 속도(m/sec) a,b 가 입력으로 주어진다. a,b 는 100 000 000 이하의 자연수이다.\n트랙의 길이는 입력으로 주어지지 않는다. 트랙의 길이에 관계없이 답은 일정하다.",
    "output": "원 위치에서 다시 만날 때까지의 만나는 횟수를 출력한다.",
    "sample": "입력\n\n2 3\n\n출력\n\n5"
  },
  {
    "id": 179,
    "title": "?\n1\n2\n3\n4\n5\nfor( i = 1 ; i <=2 ; i++){\n   for( j = 1 ; j <= 3 ; j++){\n      printf(\"hello\");\n   }\n}",
    "time_limit": "?\n1\n2\n3\n4\n*******\n*******\n*******\n*******",
    "description": "다음은 hello 를 몇 번 출력할 까요?",
    "input": "",
    "output": "",
    "sample": "출처:dovelet"
  },
  {
    "id": 180,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 181,
    "title": "tri2",
    "time_limit": "1 초",
    "description": "주어지는 줄 수 만큼 역 직각 삼각형을 출력하는게 문제이다.",
    "input": "2 이상 20 이하의 자연수가 입력으로 주어진다.",
    "output": "",
    "sample": "입력\n\n5\n\n출력\n\n*****\n****\n***\n**\n*"
  },
  {
    "id": 182,
    "title": "tri3",
    "time_limit": "1 초",
    "description": "주어지는 줄 수 만큼 역 직각 삼각형을 출력하는게 문제이다.",
    "input": "2 이상 20 이하의 자연수가 입력으로 주어진다.",
    "output": "출력 예의 형식으로 출력한다. 불필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5\n\n출력\n\n*****\n ****\n  ***\n   **\n    *"
  },
  {
    "id": 183,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 184,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 185,
    "title": "nemo",
    "time_limit": "1 초",
    "description": "수 n 을 입력으로 받아 n * n 네모를 출력하는 문제이다.",
    "input": "n 이 입력으로 주어진다. n 은 3 이상 20 이하의 자연수이다.",
    "output": "출력 예의 형식으로 출력한다. 불필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n4\n\n출력\n\n****\n*  *\n*  *\n****"
  },
  {
    "id": 186,
    "title": "printF",
    "time_limit": "1 초",
    "description": "홀수 n 을 입력으로 받아 F 를 출력하는 프로그램이다.",
    "input": "홀수 n 을 입력받는다.  3 <= n <= 20",
    "output": "출력 예의 형식으로 출력한다. 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5\n\n출력\n\n*****\n*\n*****\n*\n*\n\n입력\n\n7\n\n출력\n\n*******\n*\n*\n*******\n*\n*\n*"
  },
  {
    "id": 187,
    "title": "printT",
    "time_limit": "1 초",
    "description": "홀수 n 을 입력으로 받아 T 를 출력하는 프로그램이다.",
    "input": "홀수 n 을 입력받는다.  3 <= n <= 20",
    "output": "출력 예의 형식으로 출력한다. 불 필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5\n\n출력\n\n*****\n  *\n  *\n  *\n  *"
  },
  {
    "id": 188,
    "title": "printH",
    "time_limit": "1 초",
    "description": "홀수 n 을 입력으로 받아 H 를 출력하는 프로그램이다.",
    "input": "n 이 입력으로 주어진다.  n 은 3 이상 20 이하의 홀수",
    "output": "출력 예의 형식으로 출력한다. 불 필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5\n\n출력\n\n*   *\n*   *\n*****\n*   *\n*   *"
  },
  {
    "id": 189,
    "title": "zorro",
    "time_limit": "1 초",
    "description": "주어지는 n 을 받아 출력 예 모양으로 Z 를 출력하는 문제이다.",
    "input": "3 이상 20 이하의 자연수가 입력으로 주어진다.",
    "output": "출력 예의 형식으로 출력한다. 불필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5\n\n출력\n\n*****\n   *\n  *\n *\n*****"
  },
  {
    "id": 190,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 191,
    "title": "diamond",
    "time_limit": "1 초",
    "description": "수 하나를 입력으로 받아 다이아몬드 모양으로 출력하는 프로그램이다.",
    "input": "2 이상 30 이하의 자연수가 입력으로 주어진다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n2\n\n출력\n\n *\n***\n *\n\n입력\n\n3\n\n출력\n\n  *\n ***\n*****\n ***\n  *"
  },
  {
    "id": 192,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 193,
    "title": "oscilloscope",
    "time_limit": "1 초",
    "description": "존은 이 오실로스코프가 작동 하는지 확인하기 위해 자신의 소들에게 톱니파를 발생하는 전자회로를 제 작을 명령 하였다.",
    "input": "",
    "output": "",
    "sample": "1v(전압)를 걸때 1Vp,-1Vp, 주기가 2ms인 톱니파를 발생한다.\n2v 일때 2Vp,-2Vp , 4ms\n3v 일때 3Vp,-3Vp , 6ms\n........."
  },
  {
    "id": 194,
    "title": "bui",
    "time_limit": "1 초",
    "description": "V 를 출력하는 문제이다.",
    "input": "80 이하의 자연수 n 이 주어진다.",
    "output": "불 필요한 공백을 출력해서는 안되고 , 짝/홀수 출력은 입출력 예를 참고 한다.",
    "sample": "**<--------n------>** \n*  *               *  *\n *  *             *  *\n  *  *           *  *\n   *  *         *  *\n    *  *       *  *\n     *  *     *  *\n      *  *   *  *\n       *  * *  *\n        *  *  *\n         *   *\n          * *\n           *"
  },
  {
    "id": 195,
    "title": "54321",
    "time_limit": "1 초",
    "description": "수 n 을 입력으로 받아 출력예의 형식으로 출력하는 프로그램을 작성하시오.",
    "input": "n 은 1 이상 9 이하의 정수이다.",
    "output": "출력 예의 형식으로 출력한다. 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5\n\n출력\n\n54321\n4321\n321\n21\n1"
  },
  {
    "id": 196,
    "title": "b54321",
    "time_limit": "1 초",
    "description": "수 n 을 입력으로 받아 출력예의 형식으로 출력하는 프로그램을 작성하시오.",
    "input": "n 은 1 이상 9 이하의 정수이다.",
    "output": "출력 예의 형식으로 출력한다. 불필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5\n\n출력\n\n54321\n 4321\n  321\n   21\n    1"
  },
  {
    "id": 197,
    "title": "ddiamond",
    "time_limit": "1 초",
    "description": "숫자 다이아 몬드를 출력하는 문제이다.",
    "input": "3 이상 17 이하 홀수가 입력으로 주어진다.",
    "output": "출력 예의 형식으로 출력한다. 불 필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5\n\n출력\n\n  1\n 121\n12321\n 121\n  1"
  },
  {
    "id": 198,
    "title": "gseries",
    "time_limit": "1 초",
    "description": "다음과 같은 군 수열이 주어진다.",
    "input": "n 은 100 이하의 자연수이다.",
    "output": "합을 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n10"
  },
  {
    "id": 199,
    "title": "ate",
    "time_limit": "1 초",
    "description": "피터버그 지역은 전화번호 형식은 XXX-XX-XX 이다. 전화번호 중",
    "input": "앞 세자리 번호 정수 n 이 주어진다. (100 <= n <= 999).",
    "output": "lucky number 가 될수 있는 가능한 개수를 출력한다.",
    "sample": "입력\n\n196 \n\n출력\n\n3\n\n입력\n\n239 \n\n출력\n\n0"
  },
  {
    "id": 200,
    "title": "grp",
    "time_limit": "1 초",
    "description": "1에서 n까지의 자연수를 다음과 같이 연속한 k개의 수로 차례로 묶어 놓았다.",
    "input": "n , k(n>k) 가 입력으로 주어진다. n 은 1000  이하의 자연수이다.",
    "output": "묶음이 15 의 배수인 것의 개수를 출력한다.",
    "sample": "입력\n\n100 3\n\n출력\n\n19"
  },
  {
    "id": 201,
    "title": "electrical_outlets",
    "time_limit": "1 초",
    "description": "로이는 새로운 아파트로 이사갔다.",
    "input": "입력의 첫 수는 테스트 케이스의 수 N ( 1 <= N <= 20) 이다. 다음 N 줄은 테스트 데이터의 수이다.\n각 테스트 데이터 별로 첫 수는 멀티 탭의 개수 K ( 1 <= K <= 10 ) 이다. 다음 K 개의 수는 각 멀티탭의 구 수이다.",
    "output": "꽂을 수 있는 최대 가전 제품 수를 출력한다.",
    "sample": "입력\n\n3\n3 2 3 4\n10 4 4 4 4 4 4 4 4 4 4\n4 10 10 10 10\n\n출력\n\n7\n31\n37"
  },
  {
    "id": 202,
    "title": "sugar",
    "time_limit": "1 초",
    "description": "미코는 설탕공장의 배달원이다.",
    "input": "주문 량 N 이 입력으로 주어진다.  N (3 ≤ N ≤ 5000).",
    "output": "최소 포대 수를 출력하고 가능하지 않는 경우에는 -1 을 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n-1\n\n입력\n\n9\n\n출력\n\n3\n\n입력\n\n18\n\n출력\n\n4"
  },
  {
    "id": 203,
    "title": "dice",
    "time_limit": "1 초",
    "description": "철수는 주사위 두 개를 가지고 있다. 이 주사위 두 개를 던질 때 눈의 합이 어떤 수가 되는지가 궁금하다. 그런데 일일히 따지기가 귀찮아서 컴퓨터 전문가인 당신에게 도움을 요청 했다.",
    "input": "입력은 12 이하인 자연수가 주어진다.",
    "output": "두 개의 수가 출력된다.  각각 첫번째 , 두번째 주사위의 눈이다.\n출력은 적은 수 , 큰 순으로 출력한다.",
    "sample": "입력\n\n9\n\n출력\n\n3 6\n4 5\n5 4\n6 3"
  },
  {
    "id": 204,
    "title": "dice1",
    "time_limit": "1 초",
    "description": "철수는 주사위 두개를 가지고 있다. 이 주사위 두 개를 던질 때 눈의 합이 어떤 수가 되는가가 궁금하다. 그런데 일일히 따지기가 궁금하여 컴퓨터 전문가인 당신의 도움이 필요한다.",
    "input": "입력은 12 이하인 자연수가 주어진다.",
    "output": "가능한 경우 모두를 출력한다.\n각 줄에 두 개의 수 첫번째 , 두번째 주사위의 눈이다. 출력은 첫 수가 작은 수부터 먼저 출력한다.",
    "sample": "입력\n\n9\n\n출력\n\n3 6\n4 5"
  },
  {
    "id": 205,
    "title": "somenum(open)",
    "time_limit": "1 초",
    "description": "양의 정수 d 가 √n 보다 작을 때 , d 은 항상 n 의 약수이다.",
    "input": "입력은 없다.",
    "output": "1 에서 10000 사이(1,10000 포함)의 어떤 수를 모두 출력하시오.",
    "sample": "입력\n\n출력\n\n.\n.\n6\n.\n."
  },
  {
    "id": 206,
    "title": "multofn",
    "time_limit": "1 초",
    "description": "주희는 수학 문제를 풀다가 이런 문제를 만났다.",
    "input": "n 이 입력으로 주어진다. n 은 30 이하의 자연수이다.",
    "output": "개수를 출력한다.",
    "sample": "입력\n\n2\n\n출력\n\n27"
  },
  {
    "id": 207,
    "title": "mask",
    "time_limit": "1 초",
    "description": "아래와 같은 성질을 가지는 복면산에서 세자리 수 ABC 를 구하는게 문제이다.",
    "input": "입력은 없다.",
    "output": "ABC 를 크기 순으로 한 줄에 하나씩 출력한다.",
    "sample": "ABC\n + CCA\n ------\n  1AB2"
  },
  {
    "id": 208,
    "title": "amstrong",
    "time_limit": "1 초",
    "description": "세자리 자연수 abc 가",
    "input": "입력은 없다.",
    "output": "한 줄에 하나 씩 크기 순으로  세자리 암스트롱 수를 모두 출력한다.",
    "sample": "입력\n\n출력\n\n153\n..."
  },
  {
    "id": 209,
    "title": "table(open)",
    "time_limit": "1 초",
    "description": "2 에서 n 의 10 거듭 제곱 테이블을 만드는 것이 문제이다.",
    "input": "2 에서 9 사이의 자연수가 입력으로 주어진다.",
    "output": "출력 예의 형식으로 출력한다.\nn 에 따라 각 수가 확보하는 자릿수가 다르다는 것에 주의 한다.",
    "sample": "1     2     3     4     5     6     7     8     9    10\n     2     2     4     8    16    32    64   128   256   512  1024\n     3     3     9    27    81   243   729  2187  6561 19683 59049"
  },
  {
    "id": 210,
    "title": "the_king",
    "time_limit": "1 초",
    "description": "옛날 아주 오래된 옛날에 큰 영토를 가진 왕이 살았다. 그는 매우 현명했지만 최대로 셀 수 있는 수가 3 까지만 셀 수 있었다.",
    "input": "입력의 첫 줄은 아들의 수이고 최대 100 을 넘지않는다.\n다음 줄은 아들의 정신지수에 몇 제곱을 하는지를 나타내는 수이고 이는 1 , 2 , 3 중 하나이다.\n다음은 아들들의 정신지수이고 이는 -3 에서 3 사이의 정수이다.",
    "output": "최대값을 출력한다.",
    "sample": "입력\n\n3\n3\n2 -1 1\n\n출력\n\n9"
  },
  {
    "id": 211,
    "title": "well_order(open)",
    "time_limit": "1 초",
    "description": "크기 순으로 정렬되어 있을 때 정렬된 수라고 한다.",
    "input": "입력은 없다.",
    "output": "100 에서 999 사이의 정렬된 수를 출력한다.\n      한 줄에  5 개씩 출력하고 수 사이에는 하나의 공백을 둔다.",
    "sample": "입력\n\n출력\n\n123 124 125 126 127\n..."
  },
  {
    "id": 212,
    "title": "dcomplete",
    "time_limit": "2 초",
    "description": "6 은 완전수이다. 6 의 약수는",
    "input": "10000 이하의 자연수가 입력으로 주어진다.",
    "output": "완전수를 크기 순으로 한 줄에 하나씩 출력한다.",
    "sample": "입력\n\n10\n\n출력\n\n6\n\n입력\n\n30\n\n출력\n\n6\n28"
  },
  {
    "id": 213,
    "title": "lock",
    "time_limit": "1 초",
    "description": "방학이 끝나고 새로운 학기가 시작되었으므로, 당신은 학교에 가야 한다. 그러므로 당신은 학교 사물함 자물쇠를 어떻게 여는지 기억하여야 한다. 자물쇠는 'Master' 브랜드가 만들었다. (사진 참고..) 자물쇠는 40개의 눈금이 있으며, 눈금에는 0부터 39의 수가 쓰여 있다.",
    "input": "입력은 여러 개의 예제로 이루어진다.\n입력 데이터에서 한 개의 줄은 4개의 숫자로 이루어지며, 숫자는 0에서 39 사이다. 첫 번째 숫자는 다이얼이 가리키고 있는 눈금의 숫자이다. 2번째부터 4번째 숫자는 비밀번호이다.\n0 0 0 0이 입력되면 프로그램을 종료한다.",
    "output": "각 줄에 다이얼이 돌아가는 각도를 출력한다.",
    "sample": "입력\n\n0 30 0 30\n5 35 5 35\n0 20 0 20\n7 27 7 27\n0 10 0 10\n9 19 9 19\n0 0 0 0\n\n출력\n\n1350\n1350\n1620\n1620\n1890\n1890"
  },
  {
    "id": 214,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 215,
    "title": "amicable",
    "time_limit": "1 초",
    "description": "어떤수 A 의 약수(단, 자신은 제외)의 합을 B 라 할 때",
    "input": "자연수 n ( n <= 10000 ) 을 입력으로 받아 이 수 까지의 친구수를 모두 출력하는 프로그램을 작성하는 것이 문제이다.",
    "output": "두 수가 친구 수이면 두 수중 작은수를 먼저 출력한다. 또한 친구수가 여러개 존재하면 작은 수 기준 오름차순으로\n한 줄에 한 쌍씩 출력한다.",
    "sample": "입력\n\n300\n\n출력\n\n220 284"
  },
  {
    "id": 216,
    "title": "3nplusone",
    "time_limit": "1 초",
    "description": "짝수이면 2 로 나누고 , 홀수이면 3 배해서 1 을 더하는 과정을 반복하다 1 이 되면 멈춘다.",
    "input": "두 수가 입력으로 주어진다. 두 수는 10000 이하의 양의 정수이다.",
    "output": "",
    "sample": "입력\n\n3 5\n\n출력\n\n8"
  },
  {
    "id": 217,
    "title": "jinjin",
    "time_limit": "1 초",
    "description": "진진은 중학생이다.",
    "input": "첫 수는 날 수 N 이 입력으로 주어진다. ( 1 <= N <= 7)\n      다음 줄부터 두 개의 수가 주어진다. 첫 번째 숫자는 정상 수업시간 , 두 번째 숫자는 방과후 수업시간이다.\n      두 수는 10 보다 작고 , 차례대로 첫째날 , 둘째날, ... 이다.",
    "output": "모든 날이 행복하다면 0 을 출력하고 \n 그렇지 않으면 가장 행복하지 않는 날(행복 지수가 가장 낮은 날)을 출력한다.\n답이 여러가지인 경우 가장 빠른 날을 출력한다.",
    "sample": "입력\n\n7\n5 3\n6 2\n7 2\n5 3\n5 4\n0 4\n0 6\n\n출력\n\n3\n\n입력\n\n1\n4 4\n\n출력\n\n0"
  },
  {
    "id": 218,
    "title": "ncpc_event",
    "time_limit": "1 초",
    "description": "[문제요약] 입력 예시",
    "input": "The first line of input consists of four integers: 1 <= N <= 200, the number of participants, 1 <= B <= 500000, the budget, 1 <= H <= 18, the number of hotels to consider, and 1 <= W <= 13, the number of weeks you can choose between.\nThen follow two lines for each of the H hotels.\nThe first gives 1 <= p <= 10000, the price for one person staying the weekend at the hotel.\nThe second contains W integers, 0 <= a <= 1000, giving the number of available beds for each weekend at the hotel.",
    "output": "Output the minimum cost of the stay for your group, or \"stay home\" if nothing can be found within the budget.",
    "sample": "3 1000 2 3 //미팅의 참가자수 , 예산 , 호텔의수 , 가능한 주(1~weekend)\n\n200 // 첫번째 호텔의 인당 숙박비\n0 2 2 //첫번째 호텔의  각 주말마다 숙박가능한 인원 \n\n300 // 두번째 호텔의 ...\n27 3 20"
  },
  {
    "id": 219,
    "title": "nOf",
    "time_limit": "1 초",
    "description": "n 팩토리얼(factorial)",
    "input": "자연수 n , 소수 m 이 주어진다. ( n < 10 000 000 , m <= n)",
    "output": "소인수 m 의 개수를 출력한다.",
    "sample": "입력\n\n5 2 \n\n출력\n\n3"
  },
  {
    "id": 220,
    "title": "pfactor",
    "time_limit": "1 초",
    "description": "수를 곱으로 표현 할 때 , 곱으로 표현된 각 수를 인수라 하고 인수가 소수일 때 이를 소인수라 한다.",
    "input": "2 이상 100 000 이하의 자연수가 입력으로 주어진다.",
    "output": "소인수 사이의 곱셈 기호는 생략하고 소인수는 크기순으로 출력한다.",
    "sample": "입력\n\n5\n\n출력\n\n5\n\n입력\n\n10\n\n출력\n\n2 5\n\n입력\n\n20\n\n출력\n\n2 2 5\n\n입력\n\n8\n\n출력\n\n2 2 2"
  },
  {
    "id": 221,
    "title": "decomp(open)",
    "time_limit": "1 초",
    "description": "자연수 n 이 입력으로 주어진다. 이 수를 소인수 분해하는 프로그램을 작성하시오.",
    "input": "n 은 2 이상  1 000 000 000  이하의 자연수이다.",
    "output": "소인수를 크기 순으로 공백을 사이에 두고  한 줄에 출력한다.",
    "sample": "입력\n\n20\n\n출력\n\n2 2 5\n\n입력\n\n7\n\n출력\n\n7"
  },
  {
    "id": 222,
    "title": "climbing",
    "time_limit": "1 초",
    "description": "한 마리벌레가 n 인치 깊이의 우물 바닥에 있다. 벌레는 매 분당 u 인치를 오를수 있고 다시 일분을 쉬고 다시 오르고를 반복한다. 쉬는 동안은 d 인치를 미끄러진다.",
    "input": "여러개의 테스트 데이터가 입력으로 주어진다. \n      각 테스트 데이터는 3 개의 양의 정수 n,u,d 가 입력으로 주어진다.\n\n      이 변수들은 위에서 설명한 그대로 이다. ( d < u , n <100 )\nn 이 0 이면 입력의 끝이다.",
    "output": "매 입력당 벌레가 우물을 빠져 나오는 필요한  분을 출력한다.",
    "sample": "입력\n\n10 2 1\n20 3 1\n0 0 0\n\n출력\n\n17\n19"
  },
  {
    "id": 223,
    "title": "mchain",
    "time_limit": "1 초",
    "description": "두 양의 정수가 주어질 때 두 수의 길이는 다음과 같이 약속",
    "input": "n 은 1000 이하의 자연수이다.",
    "output": "최대 길이를 출력한다.",
    "sample": "입력\n\n5\n\n출력\n\n7"
  },
  {
    "id": 224,
    "title": "make_square(open)",
    "time_limit": "1 초",
    "description": "수 n 에 어떤 수 x 를 곱해서 제곱수를 만들고자 한다.",
    "input": "n 은 10000 이하의 자연수이다.",
    "output": "",
    "sample": "입력\n\n8\n\n출력\n\n2"
  },
  {
    "id": 225,
    "title": "herd",
    "time_limit": "1 초",
    "description": "수 N 이 입력으로 들어올 때 , 수들의 순차적인 합으로 N 을 만들수 있는 가지수를 출력하는게 문제이다.",
    "input": "수 N ( 1 <= N <= 10,000,000 ) 이 입력으로 주어진다.",
    "output": "가짓 수를 출력한다.",
    "sample": "입력\n\n15\n\n출력\n\n4"
  },
  {
    "id": 226,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 227,
    "title": "quirk",
    "time_limit": "1 초",
    "description": "짝수자리의 수를 입력으로 받아 두 수를 반으로 자른 합의 제곱이 원래 수가 되는 수를 quirksome 수라 한다.",
    "input": "2,4,6,8 중 하나가 입력으로 주어진다.",
    "output": "한 줄에 하나의 수를 출력한다.",
    "sample": "입력 \n\n2\n\n출력\n\n00\n01\n81"
  },
  {
    "id": 228,
    "title": "cube",
    "time_limit": "1 초",
    "description": "페르마의 마지막 정리 \" 2 보다 큰 n 에대해서 , a^n = b^n + c^n 인 1 보다 큰 a , b , c 가 존재하지 않는다 \"",
    "input": "100 이하인 정수 N 이 주어진다.",
    "output": "입출력 예의 형식으로 출력한다. a 가 작은 순으로 출력하고 a 가 같은 경우 b 가 작은 순으로 출력한다.",
    "sample": "입력\n\n24\n\n출력\n\nCube = 6, Triple = (3,4,5)\nCube = 12, Triple = (6,8,10)\nCube = 18, Triple = (2,12,16)\nCube = 18, Triple = (9,12,15)\nCube = 19, Triple = (3,10,18)\nCube = 20, Triple = (7,14,17)\nCube = 24, Triple = (12,16,20)"
  },
  {
    "id": 229,
    "title": "beer (special judge)",
    "time_limit": "1 초",
    "description": "맥주를 좋아하는 클럽에서 정규모임을 가진다. 그들은 뜨뜨무리한 맥주를 아주 싫어한다. 그러나 클럽의 냉장고가 너무 작아서 충분한 양의 맥주를 보관할 수 없다.",
    "input": "입력으로 냉장고의 부피 정수  n 이 주어진다. ( 1 <= n <= 2 000 000 000 )",
    "output": "겉 넓이를 최소로 하는 세 정수 a , b , c 를 출력한다. \n      답이 여러 개인 경우 그 중 하나 만을 출력하고 , 출력하는 순서는 중요하지 않다.",
    "sample": "입력\n\n12\n\n출력\n\n3 2 2\n\n입력\n\n13\n\n출력\n\n1 13 1\n\n입력\n\n1000000 \n\n출력\n\n100 100 100"
  },
  {
    "id": 230,
    "title": "blocks",
    "time_limit": "1 초",
    "description": "도날드는 이 블럭을 직사각형 포장지에 싸서 조카에게 선물하려고 한다. 이 포장지의 최소 면적을 구하는게 문제이다.",
    "input": "첫 줄은 테스트 데이터의 개수 C 이다. 다음 C 줄에는 블록의 수가 한 줄에 하나씩 주어진다. 블록의 수는\n      최대 1000 을 넘지 않는다.",
    "output": "포장지의 최소 면적을 출력한다.",
    "sample": "입력\n\n5\n9\n10\n26\n27\n100\n\n출력\n\n30\n34\n82\n54\n130"
  },
  {
    "id": 231,
    "title": "lagrange",
    "time_limit": "1 초",
    "description": "이는 Lagrange's Four-Square 이론으로 얄려져 있다.",
    "input": "2\n15\n이하인 양의 정수가 입력으로 주어진다.",
    "output": "가능한 가짓수를 출력한다.",
    "sample": "입력\n\n1\n\n출력\n\n1\n\n입력\n\n25\n\n출력\n\n3\n\n입력\n\n2003\n\n출력\n\n48\n\n입력\n\n211\n\n출력\n\n7\n\n입력\n\n20007\n\n출력\n\n738"
  },
  {
    "id": 232,
    "title": "se(open)",
    "time_limit": "1 초",
    "description": "1부터 순서대로 입력된 긴 숫자가 있다.",
    "input": "정수  n 이 입력된다.  1 <= n < 1,000,000",
    "output": "n 번째 수를 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n3\n\n입력\n\n25\n\n출력\n\n7"
  },
  {
    "id": 233,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 234,
    "title": "rprint",
    "time_limit": "1 초",
    "description": "다음 줄에는 수들이 입력으로 주어진다. 각 수의 범위는 -10000 < n < 10000 이다.",
    "input": "입력의 첫 수는 수의 개수 n 이다. ( 1 <= n <= 1000 )\n다음 줄에는 수들이 입력으로 주어진다. 각 수의 범위는 -10000 < n < 10000 이다.",
    "output": "한 줄에 입력받은 수를 거꾸로 출력한다.",
    "sample": "입력\n\n4\n-9 1 2 3 \n\n출력\n\n3 2 1 -9"
  },
  {
    "id": 235,
    "title": "pmin",
    "time_limit": "1 초",
    "description": "수열이 주어질 때 이 수열에 있는 수 중 최소값의 위치를 모두 출력하는 프로그램을 작성하시오.",
    "input": "첫 줄은 수열의 개수 n 이다.( 1 <= n <= 100 )\n다음 줄에는 n 개의 수가 주어진다. ( 모든 수는 1000 이하의 음이 아닌 정수) 차례대로 첫번째 , 두번째 , ....",
    "output": "최소값의 위치를 순서대로 출력한다.",
    "sample": "입력\n\n4 \n5 2 10 2\n\n출력\n\n2 4"
  },
  {
    "id": 236,
    "title": "white",
    "time_limit": "1 초",
    "description": "미코는 다락방에서 오래된 체스판과 한 세트의 체스를 발견 했다. 불행히도 , 한조의 세트는 단지 하얀 색만을 가지고 있다. 그리고 추측컨대 완전한 한 조가 아닌듯 하다. 완전한 한 조는 다음과 같이 이루어져야 한다.",
    "input": "입력은 6 개의 정수가 주어진다. 각 수는 0 이상 10 이하이다. 순서대로 kings,queens,rooks,bishops,knights , pawns\n순이다.",
    "output": "출력은 한 줄에 6 개의 수를 나타낸다.  출력한 수가 양수이면 이 만큼의 조각을 더하여야 하고 음수이면 빼는 것을\n의미한다.",
    "sample": "입력\n\n0 1 2 2 2 7\n\n출력\n\n1 0 0 0 0 1\n\n입력\n\n2 1 2 1 2 1\n\n출력\n\n-1 0 0 1 0 7"
  },
  {
    "id": 237,
    "title": "pir(special judge)",
    "time_limit": "1 초",
    "description": "20 개의 수가 입력으로 주어진다. 이 수에서 두 수를 뽑은 합의 최대 값을 출력하는 문제이다.",
    "input": "20 개의 수가 입력으로 주어진다. 각 수는  -30 이상  30  이하의 수이다.",
    "output": "첫 줄에는 최대 합을 출력하고\n다음 줄에는 두 수를 출력한다. 출력 순서는 관계가 없다.\n여러개의 답이 존재하는 경우 만족하는 답 중 하나를 출력한다.",
    "sample": "입력\n\n28 -28 27 3 -22 29 2 1 -2 16 -8 5 -7 21 -25 -14 26 -20 15 21\n\n출력\n\n57\n29 28"
  },
  {
    "id": 238,
    "title": "dwarf(special judge)",
    "time_limit": "1 초",
    "description": "일곱 난장이가 저녁 시간에 9 명이 와서는 모두 자기가 7 명 중에 한명이라고 우기고 있다.",
    "input": "100 보다 작은 9 개의 수가 입력으로 주어진다.",
    "output": "7 개의 수를 출력한다. 순서는 관계가 없다.",
    "sample": "입력\n\n7\n8\n10\n13\n15\n19\n20\n23\n25\n\n출력\n\n7\n8\n10\n13\n19\n20\n23\n\n입력\n\n8\n6\n5\n1\n37\n30\n28\n22\n36\n\n출력\n\n8\n6\n5\n1\n30\n28\n22"
  },
  {
    "id": 239,
    "title": "jumsu",
    "time_limit": "1 초",
    "description": "OX 문제는 맞거나 틀린 두 경우의 답을 가지는 문제를 말한다.",
    "input": "첫째 줄에 문제의 개수 N (1 ≤ N ≤ 100)이 주어진다.\n둘째 줄에는 N개 문제의 채점 결과를 나타내는 0 혹은 1이 빈 칸을 사이에 두고 주어진다. 0은 문제의 답이 틀린 경우이고, 1은 문제의 답이 맞는 경우이다.",
    "output": "첫째 줄에 입력에서 주어진 채점 결과에 대하여 가산점을 고려한 총 점수를 출력한다.",
    "sample": "입력\n\n10\n1 0 1 1 1 0 0 1 1 0\n\n출력\n\n10"
  },
  {
    "id": 240,
    "title": "variation",
    "time_limit": "1 초",
    "description": "그런데 두 반의 점수의 흩어진 정도는 B 반이 더 크지만 평균으로는 흩어진 정도는 알수는 없다. 흩어진 정도를 측정하는 대표적인 방법이 분산(variation) 이다.",
    "input": "첫 째 줄에는 인원 수 n 이 입력으로 주어진다.\n다음 줄에는 n 개의 정수가 입력으로 주어진다. 각 수는 1 이상 100 이하이다.\nn 은 3 이상 100 이하이다.",
    "output": "소수 2 자리까지 출력한다.",
    "sample": "입력\n\n4 \n1 2 3 4\n\n출력\n\n1.25"
  },
  {
    "id": 241,
    "title": "box_brick",
    "time_limit": "1 초",
    "description": "밥은 벽돌 쌓기놀이를 좋아한다.",
    "input": "첫수는 벽돌 무더기의 수 n ( 1 <= n <= 50 ) 이고 , 다음 n 수는 각 무더기의 벽돌의 수(벽돌의 높이) hi 이다. 각 hi 는 1 에서 100 사이이다.\n높이를 같이 맞출수 없는 데이터는 입력으로 주어지지 않는다.",
    "output": "아래와 같은 형식으로 출력한다.\nThe minimum number of moves is k.",
    "sample": "The minimum number of moves is k."
  },
  {
    "id": 242,
    "title": "above_average",
    "time_limit": "1 초",
    "description": "반 인원수와 점수가 주어질 때 반 평균 초과인 사람의 백분률을 구하는 문제이다.",
    "input": "첫 번째 수는 반 인원 수 N 이고  , 다음 N  명의 학생의 점수가 정수로 주어진다.\n인원 수는 1000 이하이고 , 점수는 0 이상 100 이하이다.",
    "output": "소수 3 자리까지(4 번째 자리에서 반올림) 출력한다.",
    "sample": "입력\n\n7 \n100 95 90 80 70 60 50\n\n출력\n\n57.143%"
  },
  {
    "id": 243,
    "title": "baby_gin(open)",
    "time_limit": "1 초",
    "description": "Baby Gin 은 카드로 게임을 한다. 각 카드는 0 에서 9 까지의 수가 쓰여져 있다. 무늬는 없다. 게이머는 6 장의 카드를 받는다.",
    "input": "0 에서 9 사이의 6 개의 숫자가 입력으로 주어진다.",
    "output": "Baby Gin 이면 gin , 아니면 lose 를 출력한다.",
    "sample": "입력\n\n6 6 7 7 6 7\n\n출력\n\ngin\n\n입력\n\n0 5 4 0 6 0\n\n출력\n\ngin\n\n입력\n\n1 0 1 1 2 3\n\n출력\n\nlose"
  },
  {
    "id": 244,
    "title": "soccer_judgement",
    "time_limit": "1 초",
    "description": "지성이는 이번 일본과의 축구 시합에서 심판의 판정이 매우 불합리적이었다고 생각하고, 심판을 갈아치울 생각을 했다. 이번에는 여러 나라에서 투표를 하여 가장 신뢰가 가는 심판을 축구시합에 보내려고 한다.",
    "input": "첫번째 줄에는 나라의 수(1 <= n <= 20)와 심판의 수(1 <= m <= 100)가 주어지고\n나라수만큼 반복\n{\n두번째 줄에는 각 나라에서 투표에 참여한 전체 사람수와, 투표된 심판(1 <= k <= m)의 수가주어진다.\n세번째 줄부터는 심판의 번호와 그 심판이 얻은 표가 주어진다. (꼭 표의 합이 전체 투표사람수가 되지는 않는다. 기권도있으니..)\n}\n잘못된 데이터는 들어오지 않는다.",
    "output": "가장 신뢰가 가는 심판번호을 출력한다.",
    "sample": "첫번째 줄에는 나라의 수(1 <= n <= 20)와 심판의 수(1 <= m <= 100)가 주어지고\n나라수만큼 반복\n{\n두번째 줄에는 각 나라에서 투표에 참여한 전체 사람수와, 투표된 심판(1 <= k <= m)의 수가주어진다.\n세번째 줄부터는 심판의 번호와 그 심판이 얻은 표가 주어진다. (꼭 표의 합이 전체 투표사람수가 되지는 않는다. 기권도있으니..)\n}"
  },
  {
    "id": 245,
    "title": "dfact",
    "time_limit": "1 초",
    "description": "두 자리수 이상 1000000 이하인 수에서 이런 성질을 가지는 모든 수를 출력하는 것이 문제이다.",
    "input": "입력은 없다.",
    "output": "한 줄에 하나씩 출력한다.",
    "sample": "입력\n\n출력\n\n145\n..."
  },
  {
    "id": 246,
    "title": "big_clock",
    "time_limit": "1 초",
    "description": "성당의 종을 울리는 시계가 몇 주전 부터 고장이 나서 고쳤더니 이 시계가 종을 이상하게 울리네요. 1 시에 13 번 , 2 시에 14 번 , ... , 12 시에 24 번 , 13 시에 1 번,14 시에 2 번, ..., 0 시에 12 번",
    "input": "입력은 두 개의 정수 H,M 이 : 로 구분되어 입력된다.  (0 <= H < 24, 0 <= M < 60)",
    "output": "종의 횟수를 출력한다.",
    "sample": "입력\n\n1:00\n\n출력\n\n13\n\n입력\n\n01:01\n\n출력\n\n0\n\n입력\n\n00:00\n\n출력\n\n12"
  },
  {
    "id": 247,
    "title": "hay",
    "time_limit": "1 초",
    "description": "매일 농부 존은 기르고 있는 소에게 풍부한 영양이 듬뿍담긴 풍부한 양의 꼴을 준다.",
    "input": "첫 줄에는 두 개의 정수 N 과 Q 가 입력으로 주어진다.(1 <= N,Q <= 500)\n다음 N 줄에는 각 날의 경비 Hi( 1 <= Hi <= 1000)가 주어진후, 다음 Q 줄에는 정수 쌍 Sj 와 Ej ( 1 <= Sj <= Ej <= N )가 주어진다. Sj 는 시작 , Ej 는 끝 날이다.",
    "output": "시작날부터  끝날까지의  합을 출력한다.(시작과 끝 포함)",
    "sample": "입력\n\n4 2\n5\n8\n12\n6\n1 3\n2 4\n\n출력\n\n25\n26"
  },
  {
    "id": 248,
    "title": "distinct",
    "time_limit": "1 초",
    "description": "n 개의 수를 입력으로 받아 서로 다른 수의 개수를 구하는 프로그램을 구하는게 문제이다.",
    "input": "입력의 첫 줄에는 숫자의 개수 N(2 <= N <= 1000)이 입력되고, 다음 줄에는 N 개의 정수가 입력\n된다. 입력되는 수는 1 이상 10000 이하의 수이다.",
    "output": "서로 다른 수의 개수를 출력한다.",
    "sample": "입력 \n\n10\n1 2 3 4 5 4 3 2 1 2\n\n출력\n\n5"
  },
  {
    "id": 249,
    "title": "ma",
    "time_limit": "1 초",
    "description": "히스토그램을 출력하는 문제이다.",
    "input": "입력되는 수는  1 이상 9 이하의 자연수이다. 수의 개수는 최대 30 개이고  입력의 끝은 0 이다.",
    "output": "출력 예의 형식으로 출력한다.\n불 필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n6 2 9 8 3 4 7 0\n\n출력\n\n     *        \n     * *      \n     * *     *\n *   * *     *\n *   * *     *\n *   * *   * *\n *   * * * * *\n * * * * * * *\n * * * * * * *\n 6 2 9 8 3 4 7"
  },
  {
    "id": 250,
    "title": "rsq",
    "time_limit": "1 초",
    "description": "n 개의 수와 이 수열의 시작지점과 끝 지점이 주어질 때 이 구간의 합을 출력 하시오.",
    "input": "첫 줄에는 수열의 크기 n ( 1 <= n <= 100000) 이 주어지고\n다음 줄에는 수열이 .. 수열의 시작위치는 1 이다. 각 수는 -100 이상 100 이하이다.\n다음 줄에는 질의 수 q ( 1 <= q <= 100000) 가 주어지고\n다음 q 개의 줄에는 시작 구간과 끝 구간이 주어진다.",
    "output": "각 구간의 합을 출력한다.",
    "sample": "입력\n\n7\n6 2 9 8 3 4 7\n3\n1 1\n1 2\n3 7\n\n출력\n\n6\n8\n31"
  },
  {
    "id": 251,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 252,
    "title": "d_game",
    "time_limit": "1 초",
    "description": "예를 들어",
    "input": "첫째 줄에는 참여하는 사람 수 n 이 주어지고\n그 다음 n 줄에 사람들이 주사위를 던진 3개의 눈이 빈칸을 사이에 두고 각각 주어진다.",
    "output": "첫째 줄에 가장 많은 상금을 받은 사람의 상금을 출력한다.",
    "sample": "입력\n\n3\n3 3 6\n2 2 2\n6 2 5\n\n출력\n\n12000"
  },
  {
    "id": 253,
    "title": "when",
    "time_limit": "1 초",
    "description": "ICPC 위원회는 다음 대회 회의를 위하여 가능한 빨리 미팅을 가지려고 한다. 그런데 , 멤버회원들이 너무 바빠 회의날짜를 잡는 것이 쉽지 않다.",
    "input": "입력의 첫 줄은 두 개의 수가 주어진다.\n첫 수 N (50 이하의 양의 정수)은 위원회원 수이고,\n다음 Q 는 의사 정족수이다 , Q 는 N 보다 같거나 작은 양의 정수이다.\n다음 N 라인의 입력 형식은\n첫 수는 각 회원의 가능한 날 수 M ( 0 이상 양의 정수) 이 주어지고,\n다음 M ( 1 이상 100 이하의 양의 정수) 개의 가능한 일자가 주어진다.\nM Date1 Date2 ... DateM\n가능한 날의 1 은 내일 , 2 는 내일의 내일 , 3 은 내일의내일의내일 , .... 을 의미한다.\n날은 중복없이 오름차순으로 입력된다.",
    "output": "가장 많은 인원이 참가할 수 있는 날을 출력한다.\n단, 의사 정족수를 채울수 있는 날이 없다면 0 을 출력하고 , 답이 여러 개인 경우 빠른 날을 출력한다.",
    "sample": "입력\n\n3 2\n2 1 4\n0\n3 3 4 8\n\n출력\n\n4\n\n입력\n\n3 2\n4 1 5 8 9\n3 2 5 9\n5 2 4 5 7 9\n\n출력\n\n5\n\n입력\n\n3 3\n2 1 4\n3 2 5 9\n2 2 4\n\n출력\n\n0\n\n입력\n\n3 3\n2 1 2\n3 1 2 9\n2 2 4\n\n출력\n\n2"
  },
  {
    "id": 254,
    "title": "doubles",
    "time_limit": "1 초",
    "description": "일련의 수열이 주어질 때 각 원소의 2 배가 되는 값이 수열내에 존재하는가? 존재하면 몇개가 존재하는 가를 구하는 프로그램을 작성하시오.",
    "input": "수의 개수는 2 이상 15 이하이고 수열 내의 원소의 크기는 99 이하이고 같은 수는\n      입력되지 않는다.\n입력 끝은 0 이다.",
    "output": "",
    "sample": "1 4 3 2 9 7 18 22"
  },
  {
    "id": 255,
    "title": "coci_modulo",
    "time_limit": "1 초",
    "description": "두 정수 A,B 가 주어질 때 A modulo B 는 A 를 B 로 나눌 때의 나머지이다. 예를 들어 7,14,27,38 은 3으로 나눌 때 나머지가 각각 1,2,0,2 이다.",
    "input": "1000 보다 적은 10 개의 양의 정수가 입력으로 주어진다.",
    "output": "나올 수 있는 나머지의 서로다른 개수를 출력한다.",
    "sample": "입력\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n출력\n\n10\n\n입력\n\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n\n출력\n\n1\n\n입력\n\n39\n40\n41\n42\n43\n44\n82\n83\n84\n85\n\n출력\n\n6"
  },
  {
    "id": 256,
    "title": "coci_parking",
    "time_limit": "1 초",
    "description": "화학 때문에 자퇴를 한 Luka는 트럭기사로 취직했다. 어느날 밤 그는 세 대의 트럭을 주차비를 내는 휴게소 안에 주차시켰다. 그들은 (트럭의) 개수에 따라 할인을 해준다.",
    "input": "첫 줄은 세 개의 정수 A,B,C 가 주어진다. (1 ≤ C ≤ B ≤ A ≤ 100)\n다음 세 줄은 세 대의 트럭이 도착하고 떠난 시간이다. 1 과 100 사이 정수이다.",
    "output": "총 주차비를 출력한다.",
    "sample": "입력\n\n5 3 1\n1 6\n3 5\n2 8\n\n출력\n\n33\n\n입력\n\n10 8 6\n15 30\n25 50\n70 80\n\n출력\n\n480"
  },
  {
    "id": 257,
    "title": "shuffle",
    "time_limit": "1 초",
    "description": "카드를 섞는 방법은 여러가지가 있다. 일본 카드 게임 hahafuda 를 섞는 방법은 이 중 한가지 이다.",
    "input": "입력은 여러개의 테스트 데이터가 주어진다.\n각 테스트 데이터 별 첫 줄에는 n,r 이 주어진다. n 은 카드 수 이고 , r 은 섞는 동작 수이다. 1 <= n,r <= 50\n다음 r 줄에는 어떤 카드를 빼서 위로 올리는지의 정보로 두 개의 양의 정수 p 와 c 가 주어진다. (p + c ≤ n + 1) 카드의 꼭대기 부터 p 번째 카드에서 시작에서 c 장의 카드를 빼서 꼭대기로 올린다.\n입력의 끝은 0 0 이다.",
    "output": "각 테스트별 제일 위에 있는 카드 번호를 출력한다.\n아래부터 위로 카드번호가 1 , 2 , ... , n 으로 주어지는 것으로 간주한다.",
    "sample": "입력\n\n5 2\n3 1\n3 1\n10 3\n1 10\n10 1\n8 3\n0 0\n\n출력\n\n4\n4"
  },
  {
    "id": 258,
    "title": "dream_counting",
    "time_limit": "1 초",
    "description": "예를 들어 , 129 와 137 이 주어지면 , 129, 130, 131, 132, 133, 134, 135, 136, 137",
    "input": "두 정수 M , N 이 입력으로 주어진다.   (1 <= M <= N <= 2,000,000,000 , N-M <= 500,000)",
    "output": "0 부터 9 까지의 빈도 수를 출력한다.",
    "sample": "입력\n\n129 137\n\n출력\n\n1 10 2 9 1 1 1 1 0 1"
  },
  {
    "id": 259,
    "title": "linear",
    "time_limit": "1 초",
    "description": "예를 들어 , (1,2,3) , (2,4,6) , (14,21,28) 은 만족하는 순서쌍이다.",
    "input": "첫 수는 집합 S 의 원소의 개수 s 이다. 원소의 개수는 3 개이상 30 개 이하이다.\n다음 줄에는 s 개의 정수가 주어진다. 각 수는 1 이상 100 이하",
    "output": "개수를 출력한다. 개수는 정수 범위를 넘지 않는다.",
    "sample": "입력\n\n7\n1 2 3 4 6 8 9\n\n출력\n\n5"
  },
  {
    "id": 260,
    "title": "packet(open)",
    "time_limit": "1 초",
    "description": "<그림 1>과 같이 정사각형 모양을 한 여섯 종류의 색종이가 있다. ①번 색종이는 한 변의 길이가 1cm이고, 차례대로 그 길이가 1cm씩 커져, ⑥번 색종이의 한 변의 길이는 6cm가 된다.",
    "input": "첫째 줄부터 여섯째 줄까지 각 종류의 색종이의 장수가 ①번부터 ⑥번까지 차례로 주어진다. 각 종류의 색종이의 장수는 최대 100이다.",
    "output": "첫째 줄에 필요한 판의 최소 개수를 출력한다.",
    "sample": "입력\n\n5 3 0 1 1 0 \n\n출력\n\n2"
  },
  {
    "id": 261,
    "title": "vito",
    "time_limit": "1 초",
    "description": "vito 의 여러 명의 친척은 라마피아거리에 살고 있다. 이 거리에 있는 친척을 모두 방문하고자 하는 경우 어떤 집에 머무는 것이 모든 집을 방문하는데 합이 최소가 되는 지를 구하는 것이 문제이다.",
    "input": "입력의 첫 줄은 친척수(500 미만의 자연수) 다음 줄 부터는 친척들이 사는 거리번호가 입력으로 주어진다. 같은 거리에 \n친척이 사는 경우도 있을 수 있고 각 수의 범위는 30000 이하의 자연수이다.",
    "output": "합이 최소인 값을 출력한다.",
    "sample": "입력\n\n2 \n2 4\n\n출력\n\n2\n\n입력\n\n3 \n2 4 6\n\n출력\n\n4"
  },
  {
    "id": 262,
    "title": "gold_coin",
    "time_limit": "1 초",
    "description": "왕은 그의 충성스러운 기사에게 금화를 주기로 했다.",
    "input": "주어지는 날 수는 1 .. 10000 까지 주어진다.",
    "output": "총 날수를 출력 형식에 맞게 출력한다.",
    "sample": "입력\n\n10\n\n출력\n\n10 30\n\n입력\n\n100\n\n출력\n\n100 945"
  },
  {
    "id": 263,
    "title": "ccc_bridgetrans",
    "time_limit": "1 초",
    "description": "한 화물 운송 기차가 다리를 건너려고 합니다. 각 차량의 길이는 모두 10m지만 안에 들어있는 물건이 다르기 때문에 무게는 다를 수도 있습니다. 다리의 길이는 40m입니다. (따라서 한 번에 최대 4개의 차량이 다리 위에 있을 수 있습니다) 만약 어느 순간에라도 다리 위에 있는 차량들의 총 무게가 다리의 중량 제한보다 높다면 이 다리는 무너져버립니다. 각 차량은 앞에서부터 뒤로 각각 1부터 N번까지 번호가 주어지고, 이 순서대로 다리를 건넙니다. (1번 뒤에 2번이 따라오고 3번이 따라오고 등등…)",
    "input": "첫 번째 줄에 중량 제한 W (1 ≤ W ≤ 100000) 가 입력됩니다.\n두 번째 줄에 차량의 수 N (1 ≤ N ≤ 100000) 이 입력됩니다.\n다음 N 줄에 각 차량의 무게 wi (1 ≤ i ≤ N, 1 ≤ wi ≤ 100000) 가 입력됩니다.",
    "output": "첫 줄에 다리를 완전히 건널 수 있는 차량의 수를 출력하세요.",
    "sample": "입력\n\n100\n6\n50\n30\n10\n10\n40\n50\n\n출력\n\n5\n\n입력\n\n100\n3\n150\n1\n1\n\n출력\n\n0"
  },
  {
    "id": 264,
    "title": "snotes",
    "time_limit": "1 초",
    "description": "농부 존은 그의 소들에게 노래를 가르키고 있다.",
    "input": "첫 줄에는 두 개의 정수 N , Q 가 주어진다.\n다음 N 줄에는 Bi 가 주어지고 ,\n다음 Q 줄에는 Ti 가 주어진다.",
    "output": "Q 개의 질문에 대한 각 시각의 악보 번호를 출력한다.",
    "sample": "악보     1   1   2   3   3   3\n       +---+---+---+---+---+---+\n시각     0   1   2   3   4   5"
  },
  {
    "id": 265,
    "title": "tiger (special judge)",
    "time_limit": "1 초",
    "description": "하루에 한 번 산을 넘어가는 떡 장사 할머니는 호랑이에게 떡을 주어야 산을 넘어갈 수 있는데, 욕심 많은 호랑이는 어제 받은 떡의 개수와 그저께 받은 떡의 개수를 더한 만큼의 떡을 받아야만 할머니를 무사히 보내 준다고 한다.",
    "input": "첫째 줄에는 할머니가 넘어온 날 D (3≤D≤30)와 그 날 호랑이에게 준 떡의 개수 K (10≤K≤100,000)가 하나의 빈칸을 사이에 두고 주어진다.",
    "output": "첫줄에 첫 날에 준 떡의 개수 A를 출력하고\n둘째 줄에는 둘째 날에 준 떡의 개수 B를 출력한다.\n이 문제에서 주어진 D, K에 대해서는 항상 정수 A, B (1≤A≤B)가 존재한다.",
    "sample": "입력 \n\n6 41\n\n출력\n\n2\n7\n\n입력 \n\n7 218\n\n출력\n\n10\n21"
  },
  {
    "id": 266,
    "title": "lotto",
    "time_limit": "1 초",
    "description": "독일 로또에서는 1 에서 49 까지의 수 중 6 개를 고른다.",
    "input": "k 는 6 이상 13 이하의 정수이다. 다음으로 k 개의 수 S 가 주어진다.\nS 는 오름차순 순으로 입력된다.",
    "output": "사전식으로 먼저 나오는 순으로 출력한다.",
    "sample": "입력\n\n7 1 2 3 4 5 6 7\n\n출력\n\n1 2 3 4 5 6\n1 2 3 4 5 7\n1 2 3 4 6 7\n1 2 3 5 6 7\n1 2 4 5 6 7\n1 3 4 5 6 7\n2 3 4 5 6 7\n\n입력\n\n8 1 2 3 5 8 13 21 34\n\n출력\n\n1 2 3 5 8 13\n1 2 3 5 8 21\n1 2 3 5 8 34\n1 2 3 5 13 21\n1 2 3 5 13 34\n1 2 3 5 21 34\n1 2 3 8 13 21\n1 2 3 8 13 34\n1 2 3 8 21 34\n1 2 3 13 21 34\n1 2 5 8 13 21\n1 2 5 8 13 34\n1 2 5 8 21 34\n1 2 5 13 21 34\n1 2 8 13 21 34\n1 3 5 8 13 21\n1 3 5 8 13 34\n1 3 5 8 21 34\n1 3 5 13 21 34\n1 3 8 13 21 34\n1 5 8 13 21 34\n2 3 5 8 13 21\n2 3 5 8 13 34\n2 3 5 8 21 34\n2 3 5 13 21 34\n2 3 8 13 21 34\n2 5 8 13 21 34\n3 5 8 13 21 34"
  },
  {
    "id": 267,
    "title": "meat",
    "time_limit": "1 초",
    "description": "샘과 엘라는 출장요리 서비스업을 하고 있다.",
    "input": "첫 수는 손님의 수 N 이다. 다음 N 개의 수는 손님들이 요구하는 미트 볼의 수이다.",
    "output": "가능하면 Sam 과 Ella 가 멈추는 자리를 출력하고 , 그렇지 않으면 \"No equal partitioning.\" 을\n출력한다.",
    "sample": "입력\n\n5 9 4 2 8 3\n\n출력\n\nSam stops at position 2 and Ella stops at position 3.\n\n입력\n\n5 3 9 4 2 8\n\n출력\n\nNo equal partitioning."
  },
  {
    "id": 268,
    "title": "coci_higher(open)",
    "time_limit": "1 초",
    "description": "x 가 주어진다. 이 수의 자리로 이루어진 이 수보다 큰 최소 수를 구하는게 문제이다.",
    "input": "정수 x( 1 <= x <= 999999) 가 주어진다.  첫 자리는 0 이 아니다.",
    "output": "더 큰 최소 정수를 출력한다. 그러한 수가 없다면 0 을 출력한다.",
    "sample": "입력\n\n156\n\n출력\n\n165\n\n입력\n\n330\n\n출력\n\n0"
  },
  {
    "id": 269,
    "title": "prd(open)",
    "time_limit": "1 초",
    "description": "수열 an 은 다음과 같이 정의 된다.",
    "input": "n 이 입력으로 주어진다.  1 <= n <= 2000000000",
    "output": "10^5 으로 나눈 나머지를 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n5"
  },
  {
    "id": 270,
    "title": "bank1",
    "time_limit": "1 초",
    "description": "정보은행 올림피아드지점에는 창구가 하나 있다. 손님은 은행에 들어오면 번호표를 뽑은 후 대기석에서 자기 차례가 오기를 기다린다.",
    "input": "입력의 첫째 줄에는 1개의 정수 M이 입력된다. M (1<=M<=100)은 업무를 본 은행 고객의 수이다.\n다음 M개의 줄에는 번호표(1과 M사이의 수), 도착시각(0보다 큰 수, 단위: 초), 은행업무시간(0보다 큰 수, 단위: 초)이 입력된다(값들 사이에는 한 칸의 공백으로 구분된다). M개의 자료는 번호표에 따라 오름차순으로 정렬되어 있다.",
    "output": "전체 고객의 평균 대기시간을 공백없이 첫째 칸에 붙여 출력한다(반올림하여 소수 첫째 자리까지 구한다).",
    "sample": "입력 \n\n2\n1 4 20\n2 10 30\n\n출력\n\n7.0"
  },
  {
    "id": 271,
    "title": "penta(open)",
    "time_limit": "1 초",
    "description": "아래와 같은 다각형의 모양으로 배열되는 점의 수를 삼각수, 사각수, 오각수라 한다. 입력받은 숫자가 오각수 인지 여부를 판별하는 프로그램을 작성하시오.",
    "input": "첫 번째 줄의 숫자(n)는 입력할 자연수의 개수를 나타낸다.( 1 < n <= 10000)\n두 번째 줄부터 마지막 줄까지는 오각수인지 아닌지를 판별할 숫자들이다. 검사할 숫자는 10000 을 넘지 않는다.\n(오각수를 세어 보면 5, 12, 22, 35, ... 과 같이 증가한다.)",
    "output": "입력값을 출력하고 한 칸 띄우고 오각수인지 아닌지를 ‘Y’, ‘N’으로 출력한다.(단, 출력시 대문자로만 출력한다.)",
    "sample": "입력\n\n5\n5\n8\n22\n174\n590\n\n출력\n\n5 Y\n8 N\n22 Y\n174 N\n590 Y"
  },
  {
    "id": 272,
    "title": "ambiguous",
    "time_limit": "1 초",
    "description": "예를 들어 순열 2 , 3 , 4 , 5 , 1 이 주어지는 경우",
    "input": "수의 개수 n (1 <= n <= 100000)이 입력으로 주어진다.\n      다음 줄에는 1 에서 n 까지의 수가 입력으로 주어진다.",
    "output": "",
    "sample": "입력\n\n4\n1 4 3 2\n\n출력\n\nambiguous\n\n5 \n2 3 4 5 1 \n\n출력\n\nnot ambiguous\n\n입력\n\n1 \n1\n\n출력\n\nambiguous"
  },
  {
    "id": 273,
    "title": "candy",
    "time_limit": "1 초",
    "description": "학생들이 원탁에 주어진 수 만큼의 사탕을 가지고 앉아 있다. 선생님이 호루라기를 불면 동시에 모든 학생이 자기의 사탕의 반을 덜어 오른쪽 학생에게 넘긴다",
    "input": "입력의 첫 줄은 학생수 n (100 이하)  이고 , 다음 줄에는 n 명이 가진 사탕의 수( 짝수)가 입력으로 주어진다.",
    "output": "호루라기를 분 횟수와 사탕의 개수를 출력한다.",
    "sample": "입력\n\n4\n2 4 6 8\n\n출력\n\n4 8"
  },
  {
    "id": 274,
    "title": "roller_coaster",
    "time_limit": "1 초",
    "description": "롤러 코스트는 하루에 R 번 운행할 수 있다.",
    "input": "첫 번째 줄에는 테스트 케이스의 수 T 가 주어진다.\n\n다음줄 부터 T 가지 경우의 테스트 데이터가 주어진다.\n각 테스트 데이터는 두 줄로 이루어진다.\n첫 줄은 세 정수 R,k 그리고 N 이 주어진다.\n다음은 N 개의 정수 gi 가 주어진다. g0 는 첫 번째 그룹의 인원수이고, g1 은 두 번째 그룹의 인원수....",
    "output": "출력 예의 형식으로 벌어들인 금액을 출력한다.",
    "sample": "입력\n\n3\n4 6 4\n1 4 2 1\n100 10 1\n1\n5 5 10\n2 4 2 3 4 2 1 2 1 3\n\n출력\n\nCase #1: 21\nCase #2: 100\nCase #3: 20"
  },
  {
    "id": 275,
    "title": "inversion",
    "time_limit": "1 초",
    "description": "1 부터 n 까지의 수를 한 번씩만 사용하여 이루어진 수열이 있을 때, 1 부터 n 까지 각각의 수 앞에 있는 자신보다 큰 수들의 개수를 수열로 표현한 것을 inversion sequence 라 한다.",
    "input": "첫 번째 줄에는 1000 이하의 자연수 n 이 주어진다.\n두 번째 줄에는 inversion sequence 가 숫자 사이에 한 칸의 공백을 두고 주어진다.",
    "output": "원래의 수열을 출력한다.",
    "sample": "입력\n\n8\n5 3 4 0 2 1 1 0\n\n출력\n\n4 8 6 2 5 1 3 7"
  },
  {
    "id": 276,
    "title": "line",
    "time_limit": "1 초",
    "description": "점심 시간이 되면 반 학생 모두가 한 줄로 줄을 서 급식을 탄다. 그런데 매일 같이 앞자리에 앉은 학생들이 앞에 줄을 서 먼저 점심을 먹고, 뒷자리에 앉은 학생들은 뒤에 줄을 서 늦게 점심을 먹게 된다. 어떻게 하면 이러한 상황을 바꾸어 볼 수 있을까 고민하던 중 선생님이 한 가지 방법을 내 놓았다. 그 방법은 다음과 같다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n0 1 1 3 2\n\n출력\n\n4 2 5 3 1"
  },
  {
    "id": 277,
    "title": "ms",
    "time_limit": "1 초",
    "description": "0에서부터 9까지의 숫자로 이루어진 N개의 숫자가 나열된 수열이 있다.",
    "input": "첫째 줄에는 수열의 길이 N이 주어지고, 둘째 줄에는 N개의 숫자가 빈칸을 사이에 두고 주어진다.\nN은 1 이상 100,000 이하의 정수이다.",
    "output": "첫째 줄에 가장 긴 길이를 출력한다.",
    "sample": "입력\n\n9\n1 2 2 4 4 5 7 7 2\n\n출력\n\n8\n\n입력\n\n9\n4 1 3 3 2 2 9 2 3\n\n출력\n\n4\n\n입력\n\n11\n1 5 3 6 4 7 1 3 2 9 5 \n\n출력\n\n2"
  },
  {
    "id": 278,
    "title": "stump",
    "time_limit": "1 초",
    "description": "농부 존은 그의 목초지에 일렬로 서 있는 N (1 <= N <= 50,000) 그루의 나무 그루터기를 없애고자 한다. 각 나무는 순차적으로 1 , 2 , 3 .. , n 으로 번호가 부여되어 있고 , 각 높이 Hi (1 <= H_i <= 10,000)이다.",
    "input": "입력은 첫 수는 N 이고 , 다음 N 개의 수는 차례대로 나무의 높이이다.",
    "output": "폭약으로 쓰러뜨려야 하는 최소 나무의 번호를 출력한다.",
    "sample": "입력\n\n9\n1\n2\n5\n4\n3\n3\n6\n6\n2\n\n출력\n\n3\n7\n8"
  },
  {
    "id": 279,
    "title": "minterval",
    "time_limit": "1 초",
    "description": "예를 들어, 다음과 같은 값이 주어지면,",
    "input": "입력의 끝은 0 으로 인식한다.\n수의 개수는 2,000 개를 넘지 않는다.",
    "output": "최대 구간의 합을 출력한다.",
    "sample": "입력\n\n-2\n9\n2\n-6\n7\n-7\n5\n0\n\n출력 \n\n12"
  },
  {
    "id": 280,
    "title": "card_trick",
    "time_limit": "1 초",
    "description": "마술사는 다음과 같이 카드를 펼친다.",
    "input": "정수 n 이 입력으로 주어진다.  카드 수는 1 <= n <= 13 이다.",
    "output": "위에 있는 카드 번호순으로 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n2 1 4 3\n\n입력\n\n5\n\n출력\n\n3 1 4 5 2"
  },
  {
    "id": 281,
    "title": "digit_game",
    "time_limit": "1 초",
    "description": "N 명이 모여 숫자 게임을 하고자 한다.",
    "input": "입력의\n첫 줄에는 사람의 수를 나타내는 정수 N 이 주어진다. N은 2 이상 1,000 이하이다.\n그 다음 N 줄에는 1 번부터 N 번까지 각 사람이 가진 카드가 주어지는 데, 각 줄에는 1 부터 10 사이의 정수가 다섯 개씩 주어진다. 각 정수 사이에는 한 개의 빈칸이 있다.",
    "output": "게임에서 이긴 사람의 번호를 첫 번째 줄에 출력한다. 이긴 사람 이 두 명 이상일 경우에는 번호가 가장 큰 사람의 번호를 출력한다.",
    "sample": "입력\n\n3\n7 5 5 4 9\n1 1 1 1 1\n2 3 3 2 10\n\n출력\n\n1"
  },
  {
    "id": 282,
    "title": "print",
    "time_limit": "1 초",
    "description": "컴퓨터 학과의 학생회실에 있는 단 하나의 프린터가 부하가 많이 걸리고 있다.",
    "input": "입력의 첫 번째 수는 작업의 수 n ( n <= 100 ) 이고 , 다음 수는 구할 작업 번호 m ( 0 <= m <= n-1 ) 이\n      입력된다.\n다음 줄에는 n 개의 작업 우선순위가 0 번째 작업부터 순서대로 입력된다.",
    "output": "해당 작업을 마치는데 필요한 분을 출력한다.",
    "sample": "입력\n\n6 0\n1 1 9 1 1 1\n\n출력\n\n5\n\n입력\n\n4 2\n1 2 3 4\n\n출력\n\n2\n\n입력\n\n1 0\n5\n\n출력\n\n1"
  },
  {
    "id": 283,
    "title": "choice",
    "time_limit": "1 초",
    "description": "두 줄과 N 개의 칸으로 이루어진 표에, 첫 째줄의 각 칸에는 정수 1,2,..,N 이 들어 있다. 둘째 줄의 각 칸에는 1 이상이고 N 이하인 정수가 들어 있다. 첫째줄에서 숫자를 적절히 뽑으면, 그 뽑힌 정수들이 이루는 집합과,뽑힌 정수들의 바로 밑의 둘째줄에 들어 있는 정수들이 이루는 집합이 일치한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n7\n3\n1\n1\n5\n5\n4\n6\n\n출력\n\n3\n1\n3\n5"
  },
  {
    "id": 284,
    "title": "baseball",
    "time_limit": "1 초",
    "description": "정보문화진흥원 정보 영재 동아리에서 동아리 활동을 하던 영수와 민혁이는 쉬는 시간을 틈타 숫자야구 게임을 하기로 했다.",
    "input": "첫째 줄에는 민혁이가 영수에게 몇 번이나 질문을 했는지를 나타내는 1 이상 100 이하의 자연수 N이 주어진다.\n이어지는 N개의 줄에는 각 줄마다\n민혁이가 질문한 세 자리 수와\n영수가 답한 스트라이크 개수를 나타내는 정수와\n볼의 개수를 나타내는 정수,\n이렇게 총 세 개의 정수가 빈칸을 사이에 두고 주어진다.",
    "output": "첫 줄에 영수가 생각하고 있을 가능성이 있는 답의 총 개수를 출력한다.",
    "sample": "민혁: 123\n    영수: 1 스트라이크 1 볼.\n    민혁: 356\n    영수: 1 스트라이크 0 볼.\n    민혁: 327\n    영수: 2 스트라이크 0 볼.\n    민혁: 489\n    영수: 0 스트라이크 1 볼."
  },
  {
    "id": 285,
    "title": "switch",
    "time_limit": "1 초",
    "description": "1 부터 연속적으로 번호가 붙은있는 스위치들이 있다. 스위치는 켜져 있거나 꺼져 있는 상태이다.",
    "input": "첫째 줄에는 스위치 개수가 주어진다. 스위치 개수는 100 이하인 양의 정수이다.\n둘째 줄에는 각 스위치의 상태가 주어진다. 켜져 있으면 1 , 꺼져 있으면 0 이라고 표시하고 사이에 빈칸이 하나씩 있다.\n셋째 줄에는 학생수가 주어진다. 학생수는 100 이하인 양의 정수이다.\n넷째 줄부터 마지막 줄까지 한 주에 한 학생의 성별,학생이 받은 수가 주어진다.\n남학생은 1 로, 여학생은 2로 표시하고, 학생이 받은 수는 스위치 개수 이하인 양의\n정수이다. 학생의 성별과 받은 수 사이에 빈칸이 하나씩 있다.",
    "output": "스위치의 상태를 1 번 스위치에서 시작하여 마지막 스위치까지 한 줄에 20 개씩 출력한다.\n예를 들어 21 번 스위치가 있다면 이 스위치의 상태는 둘 째줄 맨 앞에 출력한다. 켜진 스위치는 1 , 꺼진 스위치는 0 으로 표시하고, 스위치 상태사이에 빈 칸을 하나씩 둔다.",
    "sample": "입력\n\n8\n0 1 0 1 0 0 0 1\n2\n1 3\n2 3\n\n출력\n\n1 0 0 0 1 1 0 1"
  },
  {
    "id": 286,
    "title": "wavelet",
    "time_limit": "1 초",
    "description": "합 s , 차 d 는 아래와 같이 정의된다.",
    "input": "입력의 첫 수는 데이터 수이다. 데이터 수는 2 의 거듭제곱 형태이고 256 을 넘지 않는다.",
    "output": "변형된 데이터가 주어질 때 원 데이터를 구하여 출력한다.",
    "sample": "s(i) = a(2*i-1) + a(2*i) // 인접한 수의 합\n  d(i) = a(2*i-1) - a(2*i) // 인접한 앞수 - 뒤수"
  },
  {
    "id": 287,
    "title": "poly",
    "time_limit": "1 초",
    "description": "모눈종이에 다각형을 그리려고 한다. 그리는 방법은 모양수열로 표시된다. 모양수열은 1 과 4 사이의 숫자가 연속되어 나열된 것으로",
    "input": "",
    "output": "",
    "sample": "입력\n \n10\n1 4 1 1 4 3 3 3 2 2\n3\n3 2 2 1 4 1 1 4 3 3\n1 4 4 3 3 3 2 1 1 2\n4 4 1 1 1 2 3 3 2 3\n\n출력\n\n2\n3 2 2 1 4 1 1 4 3 3\n4 4 1 1 1 2 3 3 2 3"
  },
  {
    "id": 288,
    "title": "parencoding",
    "time_limit": "1 초",
    "description": "짝이 맞는 괄호 S 가 주어질 때",
    "input": "첫 줄에는 P-sequence 의 개수 n ( 1 <= n <= 20) 이 주어지고\n다음 줄에는 P-sequence 가 주어진다.",
    "output": "각 입력마다 구한 W-sequence 를 출력한다.",
    "sample": "S     (((()()())))\nP-sequence   4 5 6666\nW-sequence   1 1 1456"
  },
  {
    "id": 289,
    "title": "count_sort",
    "time_limit": "1 초",
    "description": "입력 되는 수가 음이 아닌 정수일 때 수들을 정렬하는 count sort 에 대해 알아보자.",
    "input": "입력 데이터는 양의 정수이고 ,  데이터의 개수는 100000 을 넘지 않고 각 데이터의 크기는 10000 을 넘지 않는다고 하자.\n입력의 첫 줄은 데이터의 개수 이고 , 다음 줄 부터 데이터가 입력된다.",
    "output": "작은 수 부터 차례대로 출력한다.",
    "sample": "입력\n\n7\n6 2 9 8 3 4 7\n\n출력\n\n2 3 4 6 7 8 9"
  },
  {
    "id": 290,
    "title": "genes",
    "time_limit": "1 초",
    "description": "[문제 요약] 1 에서 N 순으로 나열된 유전자에서 연속적인 부분을 뒤집는 경우를 생각하자.",
    "input": "입력의\n첫 번째 라인은 N ( 1 <= N <= 50000 ) 이다. 즉 1,2,3, ...,N 유전자의 수열이 주어진다.\n두 번째 라인은 뒤집음 (i,j) 의 횟수 R ( 0 <= R <= 1000 ) 이 주어진다.\n다음 R 라인 은 i , j 가 ( 1 <= i <= j <= N ) 주어진다.\n다음으로 질의 수 Q ( 0 <= Q <= 100 ) 가 주어지고\n다음 Q 라인은 처음의 유전자 번호가 주어진다.",
    "output": "출력 형식과 같이 출력한다.",
    "sample": "입력\n\n9\n1\n3 6\n4\n1\n3\n5\n1\n\n출력\n\n1\n6\n4\n1\n\n입력\n\n5\n2\n1 2\n1 5\n2\n5\n2\n\n출력\n\n1\n5"
  },
  {
    "id": 291,
    "title": "sort_by_swaping(open)",
    "time_limit": "1 초",
    "description": "1 에서 n 까지의 수열이 주어질 때 , 두 수를 교환하여 크기 순으로 정렬하고자 하는 경우 최소 몇 번의 교환으로 가능한지를 알아내고자 한다.",
    "input": "첫 줄에는 n ( 1 <= n <= 10000 ) 이 주어진다.\n다음 줄에는 n 개의 수가 주어진다.",
    "output": "정렬하기 위한 최소 자리바꿈 횟수를 출력한다.",
    "sample": "2 3 5 4 1  \n\n1 3 5 4 2 \n\n1 3 2 4 5\n\n1 2 3 4 5"
  },
  {
    "id": 292,
    "title": "brainman(open)",
    "time_limit": "1 초",
    "description": "[문제 요약] 수열이 주어질 때 인접한 두 수를 교환함으로 이 수열을 정렬 시킬수가 있다.",
    "input": "첫 번째 수는 테스트 데이터의 수이다.\n\n      각 테스트 별 첫 수는 수열의 개수 N 이 주어진다.( 1 <= N <= 1000 ). 그리고 N 개의 수가 주어진다.\n      모든 수는 [-1000000, 1000000] 이다.",
    "output": "출력은\nScenario #i:\n최소 줄 바꿈 횟수 출력 후\n한 줄의 빈 라인을 준 후\n다음의 답을 출력한다.",
    "sample": "Start with: 2 8 0 3 \nswap (2 8) 8 2 0 3 \nswap (2 0) 8 0 2 3 \nswap (2 3) 8 0 3 2 \nswap (8 0) 0 8 3 2 \nswap (8 3) 0 3 8 2 \nswap (8 2) 0 3 2 8 \nswap (3 2) 0 2 3 8 \nswap (3 8) 0 2 8 3 \nswap (8 3) 0 2 3 8"
  },
  {
    "id": 293,
    "title": "sacrament",
    "time_limit": "1 초",
    "description": "입력",
    "input": "두 수열 A 와 B 가 차례대로  주어진다.\n각 수열의 첫 수는 수열의 개수 n ( 1 <= n <= 50 000) 이고 , 다음 n 줄에는 n 개의 수가 주어진다. 수열의 모든 수는 -32768 ~ 32767 이다.\nai 는 오름차순으로 , bi 는 내림차순으로 입력된다.",
    "output": "두 수열에서 각각 한 개의 수를 뽑아 더한 수가 10 000 을 만들 수 있으면 \"YES\" 아니면 \"NO\" 를 출력한다.",
    "sample": "입력\n4\n-175\n19\n19\n10424\n3\n8951\n-424\n-788\n\n출력\n\nYES"
  },
  {
    "id": 294,
    "title": "fibo",
    "time_limit": "1 초",
    "description": "n 자리로 이진수를 표현할 때 연속한 1 이 나오는 경우를 제외한 가짓수를 구하는 것이 문제이다.",
    "input": "입력 n 이 주어진다. n 은 44 이하의 자연수",
    "output": "가짓 수를 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n5"
  },
  {
    "id": 295,
    "title": "new_fibo",
    "time_limit": " 1 초",
    "description": "피보나치 수열은 1, 1, 2, 3, 5, 8, 13, 21, ... 과 같이 앞에 있는 두 수를 더하여 계속 이어 가는 수열이다.",
    "input": "1번째 줄에는 데이터의 개수 M이 주어진다.(1≤M≤1,000,000)\n2~M+1번째 줄에는 A, B, N이 공백으로 구분되어 주어진다. (1≤A,B,N≤35)",
    "output": "1~M번째 줄에 N번째에 있는 수를 차례대로 출력한다.",
    "sample": "입력\n\n4\n1 1 5\n1 1 6\n1 2 6\n3 6 9\n\n출력\n\n5\n8\n13\n165"
  },
  {
    "id": 296,
    "title": "interpreter",
    "time_limit": "1 초",
    "description": "명령은 3 개의 숫자로 구성되고 각 결과는 램에 저장된다.",
    "input": "3 개의 부호없는 수가 최대 1000 개 까지 입력된다. 차례대로 주소 0 부터 할당된다. \n주어지지 않는 램의 주소는 모두 000 으로 간주한다.",
    "output": "멈출 때 까지 실행된 명령의 개수를 출력한다. 반드시 멈춘다는 것은 보장된다.",
    "sample": "입력\n\n299\n492\n495\n399\n492\n495\n399\n283\n279\n689\n078\n100\n000\n000\n000\n\n출력\n\n16"
  },
  {
    "id": 297,
    "title": "locker(open,special judge)",
    "time_limit": "1 초",
    "description": "띠 모양의 자물쇠가 있다. 이 자물쇠는 한 줄로 늘어선 N 개의 칸으로 이루어져 있고, 각 칸에는 1부터 N 까지의 숫자가 하나씩 들어 있다.",
    "input": "첫째 줄에 자물쇠에 있는 칸의 수를 나타내는 정수 N 이 주어진다. N 은 10 이상 500 이하이다.\n둘째 줄에는 잠겨 있는 자물쇠의 1번째 칸부터 N 번째 칸까지 들어 있는 숫자들이 순서대로 빈칸을 사이에 두고 입력된다.",
    "output": "첫째 줄에 처음 k-왼쪽밀기의 k 를\n둘째 줄에 (p,q)-구간뒤집기의 p 와 q 를\n그리고 셋째 줄에 마지막 k-왼쪽밀기의 k 를 출력한다.\n만일 답이 여럿일 경우에는 그 중 하나만 출력하면 된다.",
    "sample": "입력\n\n10\n9 2 1 10 3 4 5 6 7 8\n\n출력\n\n3\n7 9\n5"
  },
  {
    "id": 298,
    "title": "jail",
    "time_limit": "1 초",
    "description": "",
    "input": "10000 이하의 자연수 n 이 주어진다.",
    "output": "주어진 n에 대하여 나간 사람의 수를 출력하시요.",
    "sample": "감옥이 n개가 있었습니다. 감옥 하나에 1명의 죄수가 들어있습니다.\n\n그런데, 어느날 간수랑 로비라도 했는지, 간수가 1번 방의 죄수에게 열쇠를 줘버립니다.\n\n그래서 죄수는 나오기로 결심을 했지요.\n\n그런데, 감옥 하나에 일일이 다른 열쇠 만들기도 귀찮았는지, 그 열쇠가 모든 감옥을 열 수 있게 되어있었던것이지요.\n\n그래서, 이 멋진놈은 나오면서 99개의 감옥을 다 풀어버렸습니다!\n\n근데 문제는 여기서 발생합니다.\n\n속좁은 죄수놈들이 중범죄를 가진게 아닌지라 나갈까 말까 고민을 합니다.\n\n그사이에, 2번째 죄수가 감옥에서 나오면서, 갑자기 짝수번 감옥을 다 닫아버립니다.\n\n그러자, 3번 죄수는 그게 재밌어 보였는지, 나오면서 3의 배수에 해당하는 감옥을 닫힌건 열고 열린건 닫습니다.\n\n그런식으로 더이상 나올 수 있는 죄수가 없을때까지 번호 순서대로 나와서 같은 행위를 계속 합니다.\n\n예를 들어\n\nn=10이면\n\n1 2 3 4 5 6 7 8 9 10\n\n첫번째 죄수는 나가면서 다엽니다. 나간걸 f, 닫힌건 c,  열린건 o라 합시다.\n\nf o o o o o o o o o\n\n그리고 두번째 죄수는, 짝수번을 닫습니다.\n\nf f o c o c o c o c\n\n세번째 죄수는, 3의 배수를 닫힌건 열고 열린건 닫습니다.\n\nf f f c o o o c c c\n\n네번째 죄수는, c라서 못나갑니다.\n\nf f f c o o o c c c\n\n다섯번째 죄수는, 5의 배수를 닫힌건 열고, 열린건 닫습니다.\n\nf f f c f o o c c o\n\n여섯번째 죄수도 마찬가지\n\nf f f c f f o c c o\n\n일곱번째는\n\nf f f c f f f c c o\n\n여덟번째는 못나가죠.\n\nf f f c f f f c c o\n\n아홉번째도 못나갑니다.\n\nf f f c f f f c c o\n\n열번째가 나가면!\n\nf f f c f f f c c f\n\n따라서, 나간사람이 일곱, 못나간사람이 셋이죠. 이게 10개일때입니다.\n\n문제는 주어진 n에 대하여 나간 사람의 수를 출력하는겁니다."
  },
  {
    "id": 299,
    "title": "recurring(open)",
    "time_limit": "1 초",
    "description": "모든 분수를 소수로 바꾸면 유한 소수 혹은 순환 무한 소수가 된다. 유한 소수란 나누어 가다 떨어지는 소수이고 , 순환 무한 소수란 한 없이 반복되는 소수이다.",
    "input": "입력으로 자연수 n 이  단위 분수의 분모로 주어진다.  n 은 2 이상 1 000 000 이하이다.",
    "output": "순환 마디의 크기를 출력한다. 유한 소수이면 0 을 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n1\n\n입력\n\n7\n\n출력\n\n6"
  },
  {
    "id": 300,
    "title": "field(open)",
    "time_limit": "1 초",
    "description": "시골에 있는 태양이의 삼촌 댁에는 커다란 참외밭이 있다. 문득 태양이는 이 밭에서 자라는 참외가 도대체 몇 개나 되는지 궁금해졌다. 어떻게 알아낼 수 있는지 골똘히 생각하다가 드디어 좋은 아이디어가 떠올랐다. 유레카! 1의 넓이에 자라는 참외 개수를 헤아린 다음, 참외밭의 넓이를 구하면 비례식을 이용하여 참외의 총개수를 구할 수 있다.",
    "input": "첫 번째 줄에 1의 넓이에 자라는 참외의 개수를 나타내는 양의 정수 K (1≤ K ≤20)가 주어진다.\n참외밭을 나타내는 육각형의 임의의 한 꼭지점에서 출발하여 반시계방향으로 둘레를 돌면서 지나는 변의 방향과 길이 (1 이상 500 이하의 정수) 가 둘째 줄부터 일곱 번째 줄까지 한 줄에 하나씩 순서대로 주어진다. 변의 방향에서 동쪽은 1, 서쪽은 2, 남쪽은 3, 북쪽은 4로 나타낸다.",
    "output": "첫째 줄에 입력으로 주어진 밭에서 자라는 참외의 수를 출력한다.",
    "sample": "입력\n\n7\n4 50\n2 160\n3 30\n1 60\n3 20\n1 100\n\n출력\n\n47600"
  },
  {
    "id": 301,
    "title": "ugly",
    "time_limit": "1 초",
    "description": "인수가 2 , 3 혹은 5 로 구성된 숫자를 어글리 넘버라 한다.",
    "input": "어글리 넘버를 순서대로(1,2,3,...) 번호를 붙였을 때 해당 번호가 입력으로 주어진다.\n최대 1500 번째이하의 순번이 주어진다.",
    "output": "해당 어글리 넘버를 아래 출력 예와 같은 형태로 출력한다.",
    "sample": "입력\n\n7\n\n출력\n\nThe 7'th ugly number is 8.\n\n입력\n\n11\n\n출력\n\nThe 11'th ugly number is 15."
  },
  {
    "id": 302,
    "title": "lineup",
    "time_limit": "1 초",
    "description": "농부 존은 N (1 <= N <= 100,000) 마리의 소를 줄을 세우고 있다. 각 소들은 혈통 별로 1 .. K( 1 <= K <= 10,000) 의 낙인이 찍혀있다.",
    "input": "첫 라인은 N , K 가 주어진다.\n다을 줄 부터 N 개의 수가 1..K 번호로 소들의 혈통 번호가 주어진다.",
    "output": "입력의 부분 문자열로 만들수 없는 최단 수열의 크기를 출력한다.",
    "sample": "입력\n\n14 5\n1\n5\n3\n2\n5\n1\n3\n4\n4\n2\n5\n1\n2\n3\n\n출력\n\n3"
  },
  {
    "id": 303,
    "title": "cskyline(open)",
    "time_limit": "1 초",
    "description": "존의 소들은 해 질때를 좋아한다. 그들은 저 멀리 보이는 도시의 지평선을 볼수 있다.",
    "input": "첫 라인에는 N , W 가 주어진다.\n다음 N 라인에는 x 와 y 점의 좌표가 지평선이 변하는 지점마다 주어진다. x 좌표는 증가하는 순으로 주어지고 입력의 첫 데이터의 x 좌표는 항상 1 이 될 것이다.",
    "output": "주어진 지평선을 만들수 있는 최소 빌딩수를 출력한다.",
    "sample": ".......................... \n.....XX.........XXX....... \n.XXX.XX.......XXXXXXX..... \nXXXXXXXXXX....XXXXXXXXXXXX"
  },
  {
    "id": 304,
    "title": "matti_block",
    "time_limit": "10 초",
    "description": "꼬마 매티는 블록놀이를 무척이나 좋아한다. 어느날 그는 아래 그림과 같은 모양으로 블록을 쌓았다.",
    "input": "입력의\n첫 행에는 블록 빌딩의 크기 K ( 1 <= K <= 1000 ) 가 주어진다. 블록 빌딩의 크기가 K 라는 것은 블록 빌딩의 가로, 세로, 높이의 길이가 블록을 K개 이어놓은 길이보다 같거나 작다는 것을 의미한다.\n다음 줄에는 정면에서 바라본 그림의 모양을 나타내는 K 개의 정수가 사이에 한 칸의 공백을 두고 주어진다.각각의 정수는 정면에서 바라봤을 경우 왼쪽부터 차례대로 블록들의 높이를 나타내는 숫자로 0 이상 K 이하 의 수이다.\n마찬가지로 다음 줄에는 오른쪽에서 바라본 그림의 모양을 나타내는 K개의 정수가 주어진다.",
    "output": "첫 행에 블록 빌딩을 재현하는데 필요한 블록의 최소 개수 N 과 최대 개수 M 을 사이에 한 칸의 공백을 두고 출력한다.",
    "sample": "입력\n\n4\n2 0 3 1\n1 1 2 3\n\n출력\n\n7 17"
  },
  {
    "id": 305,
    "title": "time",
    "time_limit": "1 초",
    "description": "시간 관련 함수중 1970 년 0 시 부터 1 초 단위로 현재까지 경과한 시간을 초 단위를 리턴하는 함수가 흔히 많이 보이는 함수이다. (unix,php 에서는 time , java에서는 ...,javascript 에서는... )",
    "input": "64 비트 이하 정수가 입력으로 주어진다.",
    "output": "출력 예의 형식으로 출력한다.년-월-일 시:분:초",
    "sample": "입력\n\n1\n\n출력\n\n1970-01-01 09:00:01\n\n입력\n\n475656\n\n출력\n\n1970-01-06 21:07:36"
  },
  {
    "id": 306,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 307,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 308,
    "title": "eratosthenes",
    "time_limit": "1 초",
    "description": "n 이 입력으로 주어진다. 2 부터 n 까지의 소수(prime number)를 출력하는 문제이다.",
    "input": "입력되는 수 n 은 2 이상 10000 이하의 자연수이다.",
    "output": "2 부터 n 까지( 2 와 n 포함 )의 모든 소수를 한 줄에 출력한다.",
    "sample": "입력\n\n10\n\n출력\n\n2 3 5 7"
  },
  {
    "id": 309,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 310,
    "title": "modulo(open)",
    "time_limit": "1 초",
    "description": "13 을 5 로 나누면",
    "input": "수 5 개가 입력으로 주어진다. 각 수는 -1000 ~ 1000 사이 정수이다.",
    "output": "완전 잉여계를 이루면 yes 아니면 no 를 출력한다.",
    "sample": "입력\n\n5 6 7 8 9\n\n출력\n\nyes\n\n입력\n\n0 6 7 9 13\n\n출력\n\nyes"
  },
  {
    "id": 311,
    "title": "jolly",
    "time_limit": "1 초",
    "description": "n 개의 수로 이루어진 수열이 주어질 때 인접한 수의 차이가 1 부터 n-1 까지의 수를 만들수 있을 때 이를 jolly jumper 라 한다. 단 차례대로 1 부터 만들어 질 필요는 없다.",
    "input": "입력의 첫줄은 3000 이하인 0 보다 큰 정수 n 이 입력되고 다음부터 n 개의 수가 입력된다.",
    "output": "jolly jumper 이면 Jolly를  아니면 Not jolly를 출력 한다.",
    "sample": "입력 \n\n4\n1 4 2 3\n\n출력 \n\nJolly\n\n입력 \n\n5 \n1 4 2 -1 6\n\n출력\n\nNot jolly"
  },
  {
    "id": 312,
    "title": "multiple(special judge)",
    "time_limit": "1 초",
    "description": "입력으로 N 개의 자연수가 주어진다( N <= 100000 ).",
    "input": "입력의 첫 수는 N 이다. 다음 N 개의 수가 한 줄에  하나씩 입력된다.",
    "output": "그러한 수가 없다면 0 을 출력한다.\n그렇지 않다면 첫 번째 라인에 뽑은 수의 개수를 출력한 후 다음 줄에 뽑힌 수들을 임의의 순서대로 출력한다. 여러개의 답이 나오는 경우 그 중 하나만 출력한다.",
    "sample": "입력\n\n5\n1\n2\n3\n4\n1\n\n출력\n\n2\n2\n3"
  },
  {
    "id": 313,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 314,
    "title": "bubble",
    "time_limit": "1 초",
    "description": "다음 애플릿은 버블 소트가 이루어지는 과정이다.",
    "input": "입력의\n첫 줄은 데이터의 개수 n, 스텝 수 s 가 주어진다. ( 1 <= s < n )\n다음 줄에는 n 개의 데이터가 입력으로 주어진다. 각 수는 -1000 에서 1000 사이 정수이다.\nn 은 1000 이하의 양의 정수이다.",
    "output": "s 스텝 후의 상태를 한 줄에 출력한다.",
    "sample": "6 2 9 8 3 4 7\n1 번째 스텝: 2 6 8 3 4 7 9\n2 번째 스텝: 2 6 3 4 7 8 9"
  },
  {
    "id": 315,
    "title": "shake",
    "time_limit": "1 초",
    "description": "bubble 정렬을 개선한 소트 방법으로 두개의 변수로 소트할 구역을 알아냅니다.",
    "input": "입력은 첫 줄은 데이터의 개수 n 이 주어진다.\n      다음 줄에는 n 개의 데이터가 입력으로 주어진다. 각 수는 -1000 에서 1000 사이 정수이다.\nn 은 1000 이하의 양의 정수이다.",
    "output": "최종 정렬이 이루어질 때 까지의 최종 스텝수를 출력한다.",
    "sample": "입력\n\n7 \n6 2 9 8 3 4 7\n\n출력\n\n3"
  },
  {
    "id": 316,
    "title": "selection1",
    "time_limit": "1 초",
    "description": "다음 애플릿은 선택 정렬이 이루어지는 과정이다.",
    "input": "입력은 첫 줄은 데이터의 개수 n, 스텝 수 s 가 주어진다.  ( 1 <= s < n )\n      다음 줄에는 n 개의 데이터가 입력으로 주어진다. 각 수는 -1000 에서 1000 사이 정수이다.\nn 은 1000 이하의 양의 정수이다.",
    "output": "한 줄에 출력한다.",
    "sample": "6 2 9 8 3 4 7\n1 번째 스텝: 2 6 9 8 3 4 7\n2 번째 스텝: 2 3 9 8 6 4 7"
  },
  {
    "id": 317,
    "title": "selection2",
    "time_limit": "1 초",
    "description": "다음 애플릿은 선택 정렬이 이루어지는 과정이다. ( 수를 교환 하는 횟수가 많지만 소스가 간단 )",
    "input": "첫 줄은 데이터의 개수 n, 스텝 수 s 가 주어진다. ( 1 <= s < n )\n다음 줄에는 n 개의 데이터가 입력으로 주어진다. 각 수는 -1000 에서 1000 사이 정수이다.\nn 은 1000 이하의 양의 정수이다.",
    "output": "한 줄에 출력한다.",
    "sample": "6 2 9 8 1 4 7\n1 번째 스텝: 1 6 9 8 2 4 7\n2 번째 스텝: 1 2 9 8 6 4 7\n3 번째 스텝: 1 2 4 9 8 6 7"
  },
  {
    "id": 318,
    "title": "insertion",
    "time_limit": "1 초",
    "description": "다음 애플릿은 삽입(insertion) 소트가 이루어지는 과정이다.",
    "input": "입력은 첫 줄은 데이터의 개수 n, 스텝 수 s 가 주어진다.  ( 1 <= s < n )\n      다음 줄에는 n 개의 데이터가 입력으로 주어진다. 각 수는 -1000 에서 1000 사이 정수이다.\nn 은 1000 이하의 양의 정수이다.",
    "output": "한 줄에 출력한다.",
    "sample": "6 2 9 8 3 4 7\n1 번째 스텝: 6 2 9 8 3 4 7 (원 데이터와 그대로)\n2 번째 스텝: 2 6 9 8 3 4 7\n3 번째 스텝: 2 6 9 8 3 4 7\n4 번째 스텝: 2 6 8 9 3 4 7"
  },
  {
    "id": 319,
    "title": "heapsort",
    "time_limit": "1 초",
    "description": "",
    "input": "첫 줄에는 데이터 수 n 이 주어진다. n 은 1000 이하.\n다음 줄에는 n 개의 수가 입력으로 주어진다. 각 수는 -1000 에서 1000 사이 정수이다.",
    "output": "초기 heap 의 상태를 출력 한 후 다음 줄 3 개의 데이터를 소트 한 후의 heap 의 상태를 출력하는게 문제이다.\nleft child 와 right child 가 동일할 경우 left child 가 우선한다.",
    "sample": "입력\n\n7\n6 2 9 8 3 4 7\n\n출력\n\n9 8 7 2 3 4 6\n6 3 4 2"
  },
  {
    "id": 320,
    "title": "radix_sort(open)",
    "time_limit": "1 초",
    "description": "",
    "input": "입력의 첫 줄은 수의 갯수 n 이 주어진다. ( n <= 10000)\n다음 줄에는 n 개의 자연수가 입력으로 주어진다. 각 수는 100000 이하",
    "output": "최고 자리 - 1 자리 까지 처리한 후의 상태를 출력한다.",
    "sample": "입력\n\n14\n10 42 12 235 875 16 6 7 77 38 8 88 29 129\n\n출력\n\n6 7 8 10 12 16 29 129 235 38 42 875 77 88"
  },
  {
    "id": 321,
    "title": "radixsort",
    "time_limit": "1 초",
    "description": "",
    "input": "입력으로 N가 K가 입력된다. (N<=5000, K<=100)\n이후 N줄에 걸쳐서 데이터가 하나씩 입력된다. 데이터의 자릿수가 100 이하임은 보장된다.",
    "output": "K번째 기수정렬을 마친 데이터를 출력한다.",
    "sample": "입력\n\n10 2\n35\n3\n66\n530\n1\n29\n601\n6\n984\n8\n\n출력\n\n1\n601\n3\n6\n8\n29\n530\n35\n66\n984"
  },
  {
    "id": 322,
    "title": "double_queue",
    "time_limit": "1 초",
    "description": "k 는 10^6 보다 작고 , p 는 10^7 보다 작다.",
    "input": "Each line of the input contains one of the possible requests; only the last line contains the stop-request (code 0). You may\nassume that when there is a request to include a new client in the list (code 1), there is no other request in the list of\nthe same client or with the same priority. An identifier K is always less than 10^6, and a priority P is less than 10^7. The client may arrive for being served multiple times, and each time may obtain a different priority.",
    "output": "For each request with code 2 or 3, the program has to print, in a separate line of the standard output, the identifier of the served client. If the request arrives when the waiting list is empty, then the program prints zero (0) to the output.",
    "sample": "입력\n\n2\n1 20 14\n1 30 3\n2\n1 10 99\n3\n2\n2\n0\n\n출력\n\n0\n20\n30\n10\n0"
  },
  {
    "id": 323,
    "title": "rocker1",
    "time_limit": "1 초",
    "description": "당신은 유명한 그룹 로커스 록 그룹에 대한 아직 발표되지 않은 n(1<=n<=200) 곡의 노래에 대한 권리를 상속 받았다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n10 5 \n5 5 5 5 5 5 5 5 5 5\n\n출력 \n\n1\n\n입력 \n\n5 6 \n4 3 4 4 5\n\n출력\n\n1\n\n입력 \n\n10 5\n3 5 1 2 3 5 4 1 1 5\n\n출력\n\n4\n\n*위 보기에서는 1 2 1 1 로 넣으면 4 곡"
  },
  {
    "id": 324,
    "title": "representative",
    "time_limit": "1 초",
    "description": "평균은 주어진 모든 수의 합을 수의 개수로 나눈 것이다.",
    "input": "첫 째 줄부터 다섯 번째 줄까지 한 줄에 하나씩 자연수가 주어진다. 주어지는 자연수는\n100보다 작은 10의 배수이다.",
    "output": "첫째 줄에는 평균을 출력한다. 둘째 줄에는 중앙값을 출력한다. 평균과 중앙값은 모두\n자연수이다.",
    "sample": "입력\n\n10\n40\n30\n60\n30\n\n출력\n\n34\n30"
  },
  {
    "id": 325,
    "title": "icpc",
    "time_limit": "1 초",
    "description": "ICPC(International Clown and Pierrot Competition) 는 쇼 비지니스 대회 중 가장 유명하고 알려진 대회이다.",
    "input": "각 입력의 첫 수는 심판의  수 n ( 3 <= n <= 100 ) 이고 , 다음 n 라인은 심판의 점수 s ( 0 <= s <= 1000)  이다.",
    "output": "최대 ,최소를 제외한 평균값을 소수 이하는 버리고 출력한다.",
    "sample": "입력\n\n3 \n1000 \n342 \n0  \n\n출력\n\n342\n\n입력\n\n5 \n2\n2\n9\n11\n932\n\n출력\n\n7\n\n입력\n\n5\n300\n1000\n0\n200\n400\n\n출력\n\n300\n\n입력\n\n8\n353\n242\n402\n274\n283\n132\n402\n523\n\n출력\n\n326"
  },
  {
    "id": 326,
    "title": "tour",
    "time_limit": "1 초",
    "description": "자전거는 앞 기어 뒷 기어로 구성되어 있다. 앞 기어는 보통 2 단 혹은 3 단으로 뒷 기어는 5 단에서 10 단으로 이루어져 있다. 달릴 때 앞 , 뒷기어의 하나가 조합을 이루어서 달린다.",
    "input": "f: 앞 단의 단수\nr: 뒷 단의 단수\nf 개의 정수 : 앞단의 단의 톱니 수\nr 개의 정수: 뒷단의 단의 톱니 수\n10 단을 넘지 않고 , 톱니 수는 10 보다 크고 100 보다 작은 것으로 간주한다.",
    "output": "최대 스프레드를 소수 이하 2 자리까지 출력한다.",
    "sample": "입력\n\n2 4\n40 50\n12 14 16 19\n\n출력\n\n1.19"
  },
  {
    "id": 327,
    "title": "jolly_sort(special judge)",
    "time_limit": "1 초",
    "description": "jolly sort 란 오름,내림이 반복되는 상태를 말한다.",
    "input": "입력의 첫 수는 수의 개수 n 이다. n 은 20 이하의 양의 정수이고 같은 수는 입력되지 않는다.\n입력되는 수는 100 이하의 양의 정수이다.",
    "output": "jolly sort 한 수열을 출력한다. 여러개의 답이 존재하는 경우 그 중 하나만을 출력한다.",
    "sample": "입력\n\n9\n1 5 6 8 9 2 3 4 7\n\n출력\n\n1 5 2 4 3 9 6 8 7"
  },
  {
    "id": 328,
    "title": "Festival_Maze(open,special judge)",
    "time_limit": "1 초",
    "description": "어느 한 마을에서는 1년에 한번씩 축제가 열린다.",
    "input": "첫번째 줄에는 미로의 입구 n이 주어진다. (1≤n≤1000)\n두번째 줄에는 입구의 왼쪽부터, 아이들의 번호가 n개 입력된다. 각 번호는 중복되지 않고, 100,000을 넘지 않는다. (반드시 아이들의 번호가 순서대로 입력되지는 않는다.)\n세번째 줄에는 출구의 왼쪽부터, 아이들의 번호가 n개 입력된다.",
    "output": "미로의 북쪽부터 \"옆길\"의 위치를 ( K K+1 ) 과 같은 형식으로 출력한다. K번째 길과 K+1번째 길 사이에 옆길이 있다는 뜻이다.",
    "sample": "입력\n\n5\n1 2 3 4 5\n4 1 3 5 2\n\n출력 \n\n1 2\n4 5\n2 3\n3 4\n2 3"
  },
  {
    "id": 329,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 330,
    "title": "rank_sort",
    "time_limit": "1 초",
    "description": "요즘은 공정성과 정확성을 위해 대부분 컴퓨터를 이용해 채점을 한다. 각 개인별로 채점이 끝나고, 마지막 작업으로 각 사람들의 순위를 정해주고자 한다. 물론 점수가 높은 사람이 순위가 더 높다.",
    "input": "첫째 줄에는 사람의 수 N(1000 이하 정수)이 주어진다.\n다음줄부터는 각 사람의 점수가 주어진다. 점수는 1000 이하의 정수이다.",
    "output": "입력된 순서대로 각 사람이 몇 등인지를 출력한다.",
    "sample": "입력\n\n5\n97\n65\n84\n84\n91\n\n출력 \n\n1\n5\n3\n3\n2"
  },
  {
    "id": 331,
    "title": "rank1",
    "time_limit": "1 초",
    "description": "요즘은 공정성과 정확성을 위해 대부분 컴퓨터를 이용해 채점을 한다. 각 개인별로 채점이 끝나고, 마지막 작업으로 점수가 높은 사람별로 순위를 정한후 출력하고자 한다.",
    "input": "첫째 줄에는 사람의 수 N(1000 이하 정수)이 주어진다. 다음줄부터는 각\n      사람의 점수가 주어진다.",
    "output": "점수가 높은 사람이 먼저 출력되고 각 줄에는 점수와 등수가 출력되도록 한다.",
    "sample": "입력\n\n5\n97\n65\n84\n84\n91\n\n출력 \n\n97 1\n91 2\n84 3\n84 3\n65 5"
  },
  {
    "id": 332,
    "title": "strategies(open)",
    "time_limit": "1 초",
    "description": "한 문제당 점수는 대회 시작에서 이 문제를 풀 때까지의 시간이고, 모든 문제의 점수는 당신이 푼 문제 점수의 합이다. 실수를 하는 일은 없기 때문에 벌점을 생각할 필요는 없다.",
    "input": "첫 줄에는 두 수가 주어진다. 한 수는 대회 시간(분으로 , 30 ~ 1440) 이고 다음 수는 문제 수(3~24)이다.\n다음 수는 각 문제당 난이도(1~600) 이다.",
    "output": "누가 승자인지 몇 문제를 풀었는지 점수가 얼마인지를 \n      출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n180 6\n23 42 170 33 7 19\n\n출력\n\nSteve wins with 5 solved problems and a score of 288.\n\n입력\n\n60 2\n43 17\n\n출력\n\nSteve wins with 2 solved problems and a score of 77."
  },
  {
    "id": 333,
    "title": "notaskwhy",
    "time_limit": "1 초",
    "description": "학생의 반과 번호가 입력으로 주어진다.",
    "input": "입력의 첫줄은 총 인원수 n 이 입력된다. n 은 1 이상 100 이하인 자연수이다.\n다음 줄 부터는 반 번호와 반 내에서의 학생번호가 입력된다.\n반 번호는 1 에서 4 까지이고 학생 번호는 1 에서 60 사이다. 물론 같은 반내에서는 같은 번호가 존재하지 않는다.",
    "output": "정렬된 순서대로 한 줄에 한 명씩 반 과 번호를 출력한다.",
    "sample": "입력\n\n9 \n1 2\n3 10\n1 30\n1 31\n4 1\n2 1\n4 2\n3 1\n2 30\n\n출력\n\n1 2\n1 30\n1 31\n4 2\n4 1\n2 30\n2 1\n3 1\n3 10"
  },
  {
    "id": 334,
    "title": "milking_cow(open)",
    "time_limit": "1 초",
    "description": "세 농부가 새벽 5시에 일어나서 젖을 짜러 소우리로 간다.",
    "input": "입력의\n첫째 줄에는 농부의 수 N(1 <= N <= 5000)이 입력된다.\n다음 줄에는 한 줄에 두 개의 수 즉 시작시간과 종료시간이 입력된다. 이 수는 1000000 를 넘지않는 양의 정수이다.",
    "output": "두 개의 정수가 출력된다. 첫 수는 적어도 한사람 이라도 젖을 짜는 가장 긴 시간이고\n다른 한 수는 아무일도 하지 않은 가장 긴 시간이다.",
    "sample": "|+++++++++++++++++++++++++| \n           |+++++++|++++++++++++++++++|      |        |+++++++|\n           |       |                  |      |        |       |                             \n----------------------------------------------------------------\n          300     700               1000    1200     1500    2100"
  },
  {
    "id": 335,
    "title": "fraction",
    "time_limit": "2 초",
    "description": "수 N 을 입력으로 받아 0 부터 N 까지의 수를 사용하여 0 과 1 사이(0,1 포함)에 있는 기약분수를 구하는게 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n\n출력 \n\n0/1\n1/5\n1/4\n1/3\n2/5\n1/2\n3/5\n2/3\n3/4\n4/5\n1/1"
  },
  {
    "id": 336,
    "title": "painter",
    "time_limit": "1 초",
    "description": "장난감 가게에서 조그만한 핑거페인팅(fingerpainting) 키트를 판다. 키트에는 3개 에서 12개까지의 병에 50 ml 씩 각기 다른 색으로 구비되어 있다.",
    "input": "각 테스트 데이터에서 5 개 이상의 정수가 주어진다.\n첫 수 N 은 다른 물감의 수 ( 3 <= N <= 12 ) 이다.\n다음으로 N 개의 음이 아닌 정수가 주어진다. 각각은 많아야 1,000 이다. 이는 필요한 각 색의 양이다.\n마지막 수는 G ( <= 1,000 ) 는 음이 아닌 정수로 필요한 회색의 양이다.\n모든 단위는 ml 이다.",
    "output": "필요한 모든 색 과 회색을 공급할수 있는 최소의 키트의 수를 출력한다\n모든 회색은 같은 것으로 간주하고 각 테스트 경우에 최소의 수를 찾기 위해서는 3 가지의 다른색을 조합을 이용해서 회색을 만들어야 한다.",
    "sample": "입력\n\n3 40 95 21 0\n\n출력\n\n2\n\n입력\n\n7 25 60 400 250 0 60 0 500\n \n출력\n\n8\n\n입력\n\n4 90 95 75 95 10\n\n출력\n\n2\n\n입력\n\n4 90 95 75 95 11\n\n출력\n\n3\n\n입력\n\n5 0 0 0 0 0 333\n\n출력\n\n4"
  },
  {
    "id": 337,
    "title": "paper",
    "time_limit": "1 초",
    "description": "점선을 따라 이 종이를 칼로 자르려고 한다. 가로 점선을 따라 자르는 경우는 종이의 왼쪽 끝에서 오른쪽 끝까지, 세로 점선인 경우는 위쪽 끝에서 아래쪽 끝까지 한번에 자른다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10 8\n3\n0 3\n1 4\n0 2\n\n출력\n\n30"
  },
  {
    "id": 338,
    "title": "ncross",
    "time_limit": "10 초",
    "description": "직사각형의 변 위에 여러 모양의 점들이 있고 같은 모양의 점들은 정확히 두 개씩 있다.단 직사각형의 꼭지점에 놓인 점은 없다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10\n3 5 4 7\n1 7 2 8\n2 4 2 7\n2 6 4 4\n1 5 3 3\n\n출력\n\n4\n3"
  },
  {
    "id": 339,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 340,
    "title": "two_dim(open)",
    "time_limit": "1 초",
    "description": "12 개의 수가 입력으로 주어진다.",
    "input": "-100 에서 100 사이의 수가 12 개 주어진다.",
    "output": "행 우선으로 출력 후  , 한 줄의 공백을 준 후 열 우선으로 출력한다.",
    "sample": "입력\n\n50 -2 47 14 18 93 -70 -73 88 -9 17 100\n\n출력\n\n50 -2 47 14 \n18 93 -70 -73 \n88 -9 17 100 \n\n50 18 88 \n-2 93 -9 \n47 -70 17 \n14 -73 100"
  },
  {
    "id": 341,
    "title": "ddm",
    "time_limit": "1 초",
    "description": "다음 성질을 만족할 때 대각선 지배 행렬(diagonally dominant matrix)이라 한다.",
    "input": "5x5 행렬의 원소 25 개가 행 우선으로  주어진다. 주어지는 수는 모두 정수이다.",
    "output": "diagonally dominant matrix 이면 yes , 아니면 no 를 출력한다.",
    "sample": "입력\n\n8 1 1 1 1\n1 8 1 1 1\n1 1 8 1 1\n1 1 1 8 1\n-9 1 1 1 8\n\n출력\n\nno"
  },
  {
    "id": 342,
    "title": "offset(open)",
    "time_limit": "1 초",
    "description": "2 차원 배열이 주어질 때 어떤 원소가 상하좌우에 있는 원소보다 작을 때 해당 위치에 * 을 표시하는 프로그램을 작성하시오. 경계선에 있는 수는 상하좌우 중 존재하는 원소만을 비교한다.",
    "input": "5x5 행렬의 정보가 25 개의 수로 주어진다. 각 수는 0 에서 9 사이 수이다.",
    "output": "* 를 포함한 행렬을 출력예의 형식으로 출력한다.",
    "sample": "입력\n\n3 4 1 4 9\n2 9 4 5 8\n9 0 8 2 1\n7 0 2 8 4\n2 7 2 1 4\n\n출력\n\n3 4 * 4 9 \n* 9 4 5 8 \n9 0 8 2 * \n7 0 2 8 4 \n* 7 2 * 4"
  },
  {
    "id": 343,
    "title": "sum_rule",
    "time_limit": "1 초",
    "description": "주희는 2 차원 배열을 배우고 있다.",
    "input": "행과 열이 주어진다. 20 이하의 자연수이다.",
    "output": "출력 예의 형식으로 출력한다. 출력은 64 비트 정수형이하이다.",
    "sample": "입력\n\n3 4\n\n출력\n\n1 1 1 1 \n1 2 3 4 \n1 3 6 10"
  },
  {
    "id": 344,
    "title": "top(open)",
    "time_limit": "1 초",
    "description": "그림과 바닥에 10 개의 정육면체를 깔고 1 에서 10 사이 중 하나의 수를 유일하게 할당한다.",
    "input": "1 에서 10 까지의 10 개의 수가  입력으로 주어진다.",
    "output": "제일 꼭대기에 있는 정육면체의 수를 구하는 것이 문제이다.",
    "sample": "입력\n\n2\n10 3\n8 6 1\n5 7 9 4\n\n출력\n\n161"
  },
  {
    "id": 345,
    "title": "lab",
    "time_limit": "1 초",
    "description": "PKU 에서 연구실 사이에 탁구 시합을 열려고 한다.",
    "input": "입력은 정확히 하나의 테스트 케이스만을 포함한다.\n테스트 케이스는 랩의 학생 수를 나타내는 값 n을 포함하는 하나의 줄(2≤n≤100)을 포함하고 있다. 그 뒤 n X n 행렬 A가 뒤따라 나온다. 행렬의 각 원소는 0,1,2,3중의 한 값이다. 행 i와 열 j의 원소(aij)는 i번째 학생이 j번째 학생과의 매치에서 이긴 게임의 수이다. aij와 aji(i != j) 중 하나가 3이면 다른 한 값은 3보다 작아야만 한다. 행렬의 모든 대각선 원소(i=j)의 값은 0이다.",
    "output": "가장 많은 게임을 이긴 학생의 번호를 출력한다. 점수가 동점일 경우, 번호가 작은 학생을 선택한다.",
    "sample": "입력\n\n4\n0 0 3 2\n3 0 3 1\n2 2 0 2\n3 3 3 0\n\n출력\n\n4"
  },
  {
    "id": 346,
    "title": "plibrary",
    "time_limit": "1 초",
    "description": "[문제 요약] 이차원 행렬이 주어진다. 열(column)중 모두 1 인 것이 하나라도 있으면 yes , 아니면 no 를 출력하는 프로그램을 작성.",
    "input": "입력의 첫 줄은 열 과 행의 수이다. 열은 최대 100 까지 , 행은 최대 500 까지이다.",
    "output": "",
    "sample": "입력\n\n3 3\n1 1 1\n0 1 1\n1 1 1\n\n출력\n\nyes\n\n입력\n\n7 2\n1 0 1 0 1 0 1\n0 1 0 1 0 1 0\n\n출력\n\nno"
  },
  {
    "id": 347,
    "title": "block",
    "time_limit": "1 초",
    "description": "9 행 9 열의 수가 입력으로 주어질 때 그림과 같이 3*3 짜리 9 개의 각 블록의 합을 구하는게 문제이다.",
    "input": "입력되는 수는 한 줄당 9 개씩 9 줄이 입력된다. 입력되는 수는 1 에서 9 사이 수이다.",
    "output": "행 우선으로 한 줄에 한 개씩 출력한다.",
    "sample": "8 1 8| 7 9 3| 8 4 8 \n6 9 8| 2 5 4| 7 6 2 \n3 4 2| 8 3 6| 9 2 5 \n-----|------|-------\n7 5 5| 9 4 1| 8 2 5 \n2 3 7| 5 3 8| 9 1 5 \n3 8 6| 1 6 3| 1 6 2 \n-----|------|-------\n5 2 4| 1 1 4| 6 9 2 \n7 8 2| 8 1 7| 4 7 9 \n7 6 9| 9 4 9| 6 3 8"
  },
  {
    "id": 348,
    "title": "block_max",
    "time_limit": "1 초",
    "description": "9 행 9 열의 수가 입력으로 주어질 때 그림과 같이 3*3 짜리 9 개의 각 블록에서 최대값을 구하는 문제이다.",
    "input": "입력되는 수는 한 줄당 9 개씩 9 줄이 입력된다. 입력되는 수는 1 에서 9 사이 수이다.",
    "output": "행 우선으로 한 줄에 한 개씩 출력한다.",
    "sample": "8 1 8| 7 9 3| 8 4 8 \n6 9 8| 2 5 4| 7 6 2 \n3 4 2| 8 3 6| 9 2 5 \n-----|------|-------\n7 5 5| 9 4 1| 8 2 5 \n2 3 7| 5 3 8| 9 1 5 \n3 8 6| 1 6 3| 1 6 2 \n-----|------|-------\n5 2 4| 1 1 4| 6 9 2 \n7 8 2| 8 1 7| 4 7 9 \n7 6 9| 9 4 9| 6 3 8"
  },
  {
    "id": 349,
    "title": "ball(open)",
    "time_limit": "1 초",
    "description": "다음과 같은 뒤집은 고깔의 통에 1~6kg 의 공이 들어 있다.",
    "input": "첫째 줄에 가장 위에 있는 공 3개의 무게가 공백으로 구분되어 입력된다.\n둘째 줄에 가운데에 있는 공 2개의 무게가 공백으로 구분되어 입력된다.\n셋째 줄에 맨 밑에 있는 공 1개의 무게가 공백으로 구분되어 입력된다.",
    "output": "공이 빠져나오는 순서를 공백으로 구분하여 출력한다.",
    "sample": "3 1 4 \n 2 6 \n  5 \n---\n3 1 \n 2 4 \n  6 \n---\n3 \n 2 1 \n  4 \n---\n3 1 \n 2 \n---\n  1 \n 3 \n---\n 1"
  },
  {
    "id": 350,
    "title": "aja(open)",
    "time_limit": "1 초",
    "description": "10 * 10 행렬이 주어지고 연속한 인접한 수의 5 개의 합의 최대값을 출력한다. 상,하,좌,우가 인접하면 인접하다고 한다.(대각선 제외)",
    "input": "100 개의 수가 한 줄에 10 개씩 주어진다.\n      각 수는 0 이상  9 이하 수이다.",
    "output": "최대 값을 출력한다.",
    "sample": "입력\n\n1 7 0 8 1 0 0 0 6 9 \n7 1 1 7 5 1 7 8 0 4 \n3 7 1 2 0 5 1 9 4 8 \n6 7 5 5 9 0 3 8 9 7 \n2 1 2 1 4 5 4 0 5 7 \n4 8 6 4 1 9 9 8 3 5 \n1 3 1 1 9 2 3 6 9 5 \n5 1 6 4 9 4 4 4 2 2 \n4 7 4 9 6 3 1 9 4 3 \n3 4 1 6 5 2 9 2 1 7 \n\n출력\n\n35"
  },
  {
    "id": 351,
    "title": "wrap(open)",
    "time_limit": "1 초",
    "description": "10 * 10 행렬이 주어지고 연속한 인접한 수의 5 개의 합의 최대값을 출력한다. 상,하,좌,우,대각선이 인접하면 인접하다고 하고, 이 행렬의 상하,좌우, 대각선은 붙어 있다.",
    "input": "100 개의 수가 한 줄에 10 개씩 주어진다.  각 수는 -100 에서 100 사이 수이다.",
    "output": "최대 값을 출력한다.",
    "sample": "입력\n\n1 7 0 8 1 0 0 0 6 9 \n7 1 1 7 5 1 7 8 0 4 \n3 7 1 2 0 5 1 9 4 8 \n6 7 5 5 9 0 3 8 9 7 \n2 1 2 1 4 5 4 0 5 7 \n4 8 6 4 1 9 9 8 3 5 \n1 3 1 1 9 2 3 6 9 5 \n5 1 6 4 9 4 4 4 2 2 \n4 7 4 9 6 3 1 9 4 3 \n3 4 1 6 5 2 9 2 1 7 \n\n출력\n\n37"
  },
  {
    "id": 352,
    "title": "magic",
    "time_limit": "1 초",
    "description": "마방진(magic square)이란 가로,세로, 대각선의 합이 같은 사각형을 말한다.",
    "input": "n 은 10 이하의 홀수이다.",
    "output": "각 수는 3 자리 확보후 오른쪽에 맞추어 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n  8  1  6\n  3  5  7\n  4  9  2"
  },
  {
    "id": 353,
    "title": "pascal_tri",
    "time_limit": "1 초",
    "description": "",
    "input": "이 파스칼 삼각형의 높이 n(1<=n<=30)이 주어진다.",
    "output": "n층까지의 파스칼 삼각형을 출력하여라.",
    "sample": "1\n  1 1\n 1 2 1\n1 3 3 1"
  },
  {
    "id": 354,
    "title": "parkside",
    "time_limit": "1 초",
    "description": "두 수가 입력으로 주어진다. R 은 행의 수이고 , S 는 종자(seed) 수 이다.",
    "input": "두 수 R , S 가 주어진다. ( 1 <= R <= 30 , 1 <= S <= 9)",
    "output": "출력 예의 형식으로 출력한다.불 필요한 공백을 출력해서는 안된다.",
    "sample": "입력\n\n5 3\n\n출력\n\n3 4 6 9 4\n  5 7 1 5\n    8 2 6\n      3 7\n        8"
  },
  {
    "id": 355,
    "title": "leeside",
    "time_limit": "1 초",
    "description": "두 수가 입력으로 주어진다. R 은 행의 수이고 , S 는 종자(seed) 수 이다.",
    "input": "두 수 R , S 가 주어진다. ( 1 <= R <= 30 , 1 <= S <= 9)",
    "output": "출력 예의 형식으로 출력한다.불 필요한 공백을 출력해서는 안된다.",
    "sample": "5 *\n  6"
  },
  {
    "id": 356,
    "title": "spiral",
    "time_limit": "1 초",
    "description": "n 의 크기는 20 이하의 자연수이다.",
    "input": "입력은 배열의 크기 n 이 주어진다.   n * n 행 배열이다.\nn 의 크기는 20 이하의 자연수이다.",
    "output": "각 숫자는 5 자리 확보 후 출력한다.",
    "sample": "입력\n\n3 \n\n출력\n\n    1    2    3\n    8    9    4\n    7    6    5"
  },
  {
    "id": 357,
    "title": "rect",
    "time_limit": "1 초",
    "description": "네 개의 직사각형이 평면에 있는데, 밑변이 모두 가로축에 평행하다. 이 직사각형들이 차지하는 면적을 구하는 프로그램을 작성하시오.",
    "input": "",
    "output": "",
    "sample": "다음의 예를 고려해 보자.\n이 경우의 입출력은 다음과 같다.\n\n입력\n\n1 2 4 4 \n2 3 5 7 \n3 1 6 5 \n7 3 8 6 \n\n출력\n\n26"
  },
  {
    "id": 358,
    "title": "bomb_game",
    "time_limit": "1 초",
    "description": "보스코와 수스코는 A 행 B 열의 사각형 판에서 게임을 하고 있다.",
    "input": "입력의 첫 줄은 A,B,K 가 주어진다.( 1 <= A,B,K <= 100)\nA 는 행의 수,\nB 는 열의 수 ,\nK 는 던진 폭탄의 수\n이다.\n다음 K 줄은 R , S , P , T 가 주어진다.\n폭탄을 던진 위치가 R 행 S 열 이고 , 영역 P (P 는 홀수이고 1 <= P <= 99), 필 박스가 폭탄의 영역에 있으면 T 는 1 , 아니면 0 이다.\nP 가 3 인 경우 폭탄이 미치는 영역이다.",
    "output": "필박스가 존재 가능한 위치 개수를 출력한다.",
    "sample": "입력\n\n5 5 3\n3 3 3 1\n3 4 1 0\n3 4 3 1\n\n출력\n\n5"
  },
  {
    "id": 359,
    "title": "corn_field",
    "time_limit": "1 초",
    "description": "농부 존은 양질의 우유를 만들게 하기 위해 옥수수를 기르기로 하였다. 이를 위해 , 그가 찾을 수 있는 가장 평평한 땅에 옥수수 밭을 짓고자 한다.",
    "input": "입력으로 N , B , K 가 주어지고 , 다음 줄에는 N*N 의 밭의 크기가 주어진 후 ,\n      다음 k 개의 질의가 주어진다.\n질의의 첫수는 가장 위의 행이고 , 두번째 수는 가장 왼쪽의 열이다. 각 수의 범위는 1 .. N-B+1 이다.",
    "output": "각 질의에 대해서 최대/최소의 차이를 한 줄에 하나씩 출력한다.",
    "sample": "5 3 1          ----- N , B , K \n5 1 2 6 3\n1 3 5 2 7\n7 2 4 6 1\n9 9 8 6 5\n0 6 9 3 9\n1 2           ---- 1 행 2 열에서 3*3 크기의 부행렬에서 최대/최소 차"
  },
  {
    "id": 360,
    "title": "parity",
    "time_limit": "1 초",
    "description": "0 과 1 로만 구성된 배열에서 각 행 과 열의 합이 짝수일 때 이를 패리티성질을 가진다고 한다.",
    "input": "행렬의 크기 n*n 을 나타내는 n (2 <= n <= 100) 이 주어지고 다음 n 라인에는 \n0 과 1 로 구성된 행 열이 주어진다.",
    "output": "행 열이 패리티 성질을 가진다면 ok 를 출력하고\n한 비트만을 바꾸어서 패리티 성질을 가지게 할 수 있다면 change bit (i,j) 단, i 는 행 , j 는 열 이다.\n그렇지 않다면 error 를 출력한다.",
    "sample": "1 0 1 0\n0 0 0 0\n1 1 1 1\n0 1 0 1"
  },
  {
    "id": 361,
    "title": "bingo",
    "time_limit": "1 초",
    "description": "빙고 게임은 다음과 같은 방식으로 이루어진다.",
    "input": "첫째 줄부터 다섯째 줄까지 빙고판에 쓰여진 수가 가장 위 가로줄부터 차례대로 한 줄에 다섯 개씩 빈 칸을 사이에 두고 주어진다.\n여섯째 줄부터 열째 줄까지 사회자가 부르는 수가 차례대로 한 줄에 다섯 개씩 빈 칸을 사이에 두고 주어진다.\n빙고판에 쓰여진 수와 사회자가 부르는 수는 각각 1부터 25까지의 수가 한 번씩 사용된다.",
    "output": "첫째 줄에 사회자가 몇 번째 수를 부른 후 철수가 ‘빙고’를 외치게 되는지 출력한다.",
    "sample": "입력\n\n11 12 2 24 10\n16 1 13 3 25\n6 20 5 21 17\n19 4 8 14 9\n22 15 7 23 18\n5 10 7 16 2\n4 22 8 17 13\n3 18 1 6 25\n12 19 23 14 21\n11 24 9 20 15\n\n출력\n\n15"
  },
  {
    "id": 362,
    "title": "fishing (special judge)",
    "time_limit": "1 초",
    "description": "어부가 바다에 어망을 투망하여 가장 많은 이익을 얻으려 한다. 주어진 지도를 보며 가장 많은 수확을 올릴 수 있는 위치를 찾아내는 프로그램을 작성하시오. 단 , 반드시 직사각형 모양으로 어망을 투망할 수 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n-34 39 16 40 18 \n46 20 49 -2 -47 \n-47 -5 -4 49 -33 \n-11 -14 45 42 -9 \n18 25 -27 48 39 \n\n출력\n\n321\n1 2 5 4"
  },
  {
    "id": 363,
    "title": "tableII(open)",
    "time_limit": "1 초",
    "description": "2006 년도 월드컵 4 강에 한국 , 독일 , 프랑스 , 영국 팀이 진출하였다. FIFA 는 이들의 4 강 진출을 축하하기 위하여 저녁 만찬자리를 마련하였다. 각 팀의 선수와 가족들이 모두 참석한 만찬이 열리는 식당엔 4 개의 테이블이 있다. 참석자들은 소속 팀에 관계없이 4 개의 테이블에 섞여서 식사를 하고 있다.",
    "input": "16 개의 입력이 주어진다. 처음 4 개의 숫자는 1 번 테이블에 앉은 한국 , 독일 , 프랑스 , 영국 팀 소속 인원\n팀의 숫자이며 , 이하 12 개의 숫자도 각각 2,3,4 번 테이블에 앉아 있는 각 국가별 인원수를 나타낸다.\n단, 16 개의 숫자의 합은 10,000 을 초과하지 않는다.",
    "output": "각 테이블에 단일 국가의 소속팀 선수와 가족만을 포함시키기 위한 이동 인원의 최소값을 의미한다.",
    "sample": "입력 \n\n2 1 3 5 0 2 7 3 1 1 5 6 2 3 3 1\n\n출력\n\n27\n\n입력 \n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n\n출력\n\n102\n\n입력\n\n10 49 22 33 24 54 67 56 9 43 5 65 71 11 21 32\n\n출력\n\n320"
  },
  {
    "id": 364,
    "title": "wireless",
    "time_limit": "1 초",
    "description": "M (1<=M<=30,000) 개의 동-서 도로와 N (1<=N<=1,000) 개의 북-남 도로가 있는 도시가 있다. 각 두개의 인접한 도로 사이의 거리는 1m 다. 그리고 이 도시의 각 교차로에는 커피숍이 하나씩 있다.",
    "input": "첫번째 줄에는 동-서 도로의 개수인 정수 M이 주어진다.\n두번째 줄에는 북-남 도로의 개수인 정수 N이 주어진다.\n세번째 줄에는 무선 인터넷을 지원하는 커피숍 개수인 정수 K가 주어진다.\n다음 K줄마다 정수 xi(1<=xi<=N), yi(1<=yi<=M), Ri, Bi가 주어진다.\n여기서 xi는 i 번째 커피숍이 몇번째 북-남 도로에 위치했는지, yi는 몇번째 동-서 도로에 위치했는지를 알려준다. 맨 아래에 있는 도로나 맨 왼쪽에 있는 도로를 첫번째 도로라고 한다.",
    "output": "첫번째 줄에는 가장 강한 신호 세기를,\n두번째 줄에는 그 신호를 받을수 있는 커피숍 개수를 출력한다.",
    "sample": "입력\n\n3\n5\n3\n1 3 2 5\n3 1 2 7\n5 1 1 5\n\n출력 \n\n12\n5"
  },
  {
    "id": 365,
    "title": "meteorite",
    "time_limit": "1 초",
    "description": "땅부자 피에로는 운석이 많이 떨어지는 혹성 피에로에서 거주한다.",
    "input": "첫번째 줄에는 N이 입력된다. ( 1 < N <= 1,500 )\n두번째 줄부터 N줄에 걸쳐 각각 N개의 Wij가 공백으로 구분되어 입력된다. 이 값은 운석의 무게이다. (0 < Wij <= 1,000)",
    "output": "운석을 모두 치우는데 드는 최소비용을 출력한다. 답은 32비트 정수형을 넘을 수도 있다.",
    "sample": "3 1 2 4\n4 7 6 2\n5 2 3 1\n9 6 4 8"
  },
  {
    "id": 366,
    "title": "rcq",
    "time_limit": "1 초",
    "description": "n 개의 수와 이 수열의 시작지점과 끝 지점이 주어질 때 해당 구간을 정렬 후 중앙값을 찾는게 문제이다.",
    "input": "첫 줄에는 수열의 크기 n ( 1 <= n <= 100,000) 이 주어지고\n다음 줄에는 수열이 .. 수열의 시작위치는 1 이다. 각 수는 -100 이상 100 이하이다.\n다음 줄에는 질의 수 q ( 1 <= q <= 100,000) 가 주어지고\n다음 q 개의 줄에는 시작 구간과 끝 구간이 주어진다.",
    "output": "각 구간의 중간 값을 출력한다.\n** n개의 수일 때, [n/2]번째 위치의 수를 출력한다. ( [a] = a보다 작거나 같은 최대 정수 )",
    "sample": "입력\n\n7\n6 2 9 8 3 4 7\n3\n1 1\n1 2\n3 7\n\n출력\n\n6\n2\n7"
  },
  {
    "id": 367,
    "title": "hap",
    "time_limit": "1 초",
    "description": "네 정수를 입력받아 합을 구하는 프로그램을 작성하려고 한다.",
    "input": "1 에서 100000 이하의 네 정수가 입력으로 주어진다.",
    "output": "네 정수의 합을 출력한다.",
    "sample": "입력\n\n1 2 3 4\n\n출력\n\n10"
  },
  {
    "id": 368,
    "title": "radd",
    "time_limit": "1 초",
    "description": "두 수를 입력으로 받아",
    "input": "",
    "output": "",
    "sample": "입력\n\n12 345\n\n출력\n\n465"
  },
  {
    "id": 369,
    "title": "rev",
    "time_limit": "1 초",
    "description": "수 124 를 뒤집으면 421 이 되고 이 두 수를 합하면 545 가 된다. 124 와 같이 원래 수와 뒤 집은 수를 합한 수가 좌우 대칭이 되는 수를 10 에서 100000 까지 모두 출력하는게 문제이다.",
    "input": "입력은 없다.",
    "output": "크기 순으로 한 줄에 하나씩 출력한다.",
    "sample": "출력\n\n10\n11\n12\n..."
  },
  {
    "id": 370,
    "title": "mgcd",
    "time_limit": "1 초",
    "description": "여러개의 수를 입력으로 받아 이 수들의 최대 공약수를 구하는 문제이다.",
    "input": "첫 줄에는 수의 개수 n ( 1 <= n <= 100) 이 입력으로 주어진다.\n      다음 줄 에는 n 개의 수가 입력으로 주어진다. 주어지는 수는 1000 이하의 자연수이다.",
    "output": "최대 공약수를 출력한다.",
    "sample": "입력\n\n4\n8 16 80 20\n\n출력\n\n4"
  },
  {
    "id": 371,
    "title": "goldbach",
    "time_limit": "1 초",
    "description": "1742 년 독일 수학자 골드바하는 오일러에게 다음과 같은 추측을 했다.",
    "input": "6 이상 1000000 미만의 짝수 n 이 입력으로 주어진다.",
    "output": "두 소수 a , b 의 합으로 표시될 수 있으면 n = a + b 형식으로 출력한다. 그런 쌍이 없으면 \n      \"Goldbach's conjecture is wrong.\" 으로 표시한다.\n답이 여러가지 인 경우 b - a 가 최대인 값을 출력한다.",
    "sample": "8 = 3 + 5. Both 3 and 5 are odd prime numbers. \n20 = 3 + 17 = 7 + 13. \n42 = 5 + 37 = 11 + 31 = 13 + 29 = 19 + 23."
  },
  {
    "id": 372,
    "title": "tencard(open)",
    "time_limit": "1 초",
    "description": "그림 1 과 같은 십자모양의 한 장의 카드의 네 모서리에 1 이상 9 이하의 숫자가 하나씩 쓰여있다.이 네 개의 숫자 중에는 같은 숫자도 있을 수 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n2 1 1 2\n\n출력\n\n10"
  },
  {
    "id": 373,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 374,
    "title": "self_num",
    "time_limit": "1 초",
    "description": "d(x) 는",
    "input": "입력은 없다.",
    "output": "1 에서 10000 사이의 self number 를 모두 출력하는게 문제이다.",
    "sample": "출력\n\n1\n3\n5\n7\n9\n20\n31\n42\n53\n64\n |\n |  \n |\n9903\n9914\n9925\n9927\n9938\n9949\n9960\n9971\n9982\n9993"
  },
  {
    "id": 375,
    "title": "friday",
    "time_limit": "1 초",
    "description": "13 일의 금요일은 서양에서는 좋지 않은 날로 여겼다.",
    "input": "400 을 넘지않는 양의 정수 N 이  입력된다.",
    "output": "1900 년 1 월 1 일 부터 1900+N-1 년 12 월 31 일 까지 13 일의 요일의 회수를 \n토요일,일요일,월요일,...,금요일의 순으로 출력한다.",
    "sample": "입력\n\n20\n\n출력\n\n36 33 34 33 35 35 34"
  },
  {
    "id": 376,
    "title": "cryption",
    "time_limit": "1 초",
    "description": "세 자리수와 두 자리수를 곱하여 아래 형식처럼 되는 가능한 경우의 수를 알고자 한다. 사용되어 질 수는 1 에서 9 사이에서 주어진다.",
    "input": "입력의 첫 줄은 사용될 수 의 수 N 이 입력되고, 다음 줄에서 1 에서 9 중 N 개의 수가 입력된다.",
    "output": "가능한 방법의 수 를 출력한다.",
    "sample": "* * * ( 세 자리 수)\n   x    * * ( 두 자리 수)\n    -------\n      * * * ( 세 자리 수)\n    * * *   ( 세 자리 수)\n    -------\n    * * * * ( 네 자리 수)"
  },
  {
    "id": 377,
    "title": "chinese(open)",
    "time_limit": "1 초",
    "description": "어떤 수 N 을",
    "input": "첫 줄에 a,b,c 가 주어지고 a,b,c 는 100 000 이하의 자연수이다.\n다음 줄에 r1,r2,r3 가 주어진다.",
    "output": "최소 자연수 N 을 출력한다. 답이 존재한다는 것은 보장된다.",
    "sample": "입력\n\n3 4 5 \n1 2 3\n\n출력\n\n58"
  },
  {
    "id": 378,
    "title": "dual_palindrome",
    "time_limit": "1 초",
    "description": "오른쪽으로 읽으나 왼쪽으로 읽으나 같은 수를 회귀(palindrome)수 라고 한다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n3 25\n\n출력\n\n26\n27\n28"
  },
  {
    "id": 379,
    "title": "bpalin(open)",
    "time_limit": "1 초",
    "description": "21 은 10 진수로 회귀수가 아니지만 , 2 진수로는 회귀수이다.(10101)",
    "input": "입력은 없다.",
    "output": "이진 회귀수를 크기 순으로 한 줄에 하나씩 출력한다.",
    "sample": "입력\n\n출력\n\n1\n3\n..."
  },
  {
    "id": 380,
    "title": "prime_palin",
    "time_limit": "5 초",
    "description": "소수 회귀문자란 두 가지를 모두 만족하는 수이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5 500\n\n출력\n\n5\n7\n11\n101\n131\n151\n181\n191\n313\n353\n373\n383"
  },
  {
    "id": 381,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 382,
    "title": "powerofx",
    "time_limit": "1 초",
    "description": "x 의 y 거듭제곱을 구하는 문제이다.",
    "input": "두 정수 x , y 가 입력된다.",
    "output": "x 의 y 거듭제곱된 결과값을 출력한다.\n출력 결과는 정수 범위( 2^31 - 1)를 넘지 않는다.",
    "sample": "입력\n\n2 10\n\n출력\n\n1024"
  },
  {
    "id": 383,
    "title": "euclid",
    "time_limit": "1 초",
    "description": "두 수를 입력받아 최대공약수,최소 공배수를 구하는 프로그램을 작성하시오.",
    "input": "두 양의 정수 a , b 가 입력으로 주어진다. (1 <= a , b <= 100 000)",
    "output": "최대공약수,최소공배수를 한 줄에 출력한다.\n      두 수의 최대공약수 와 최소 공배수는 정수 범위(2^31 - 1)를  넘지 않는다.",
    "sample": "입력\n\n8 12\n\n출력\n\n4 24"
  },
  {
    "id": 384,
    "title": "upstair",
    "time_limit": "1 초",
    "description": "최대 2 칸 까지 오를 수 있을 때 오르는 방법의 가짓수를 출력 하는 문제이다.",
    "input": "n 은 30 이하의 양의 정수이다.",
    "output": "오를 수 있는 가짓 수를 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n5"
  },
  {
    "id": 385,
    "title": "sfn",
    "time_limit": "1 초",
    "description": "10 진수로 4 자리 수 중 이를 16 진법 , 12 진법으로 나타내었을 때 합이 같은 4 자리 정수를 모두 구하는 것이다.",
    "input": "입력 값은 없다.",
    "output": "4 자리 수를 크기 순으로 한 줄에 하나씩 출력한다. 입출력 예에서 처음 몇가지를 보여준다.",
    "sample": "출력\n\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n..."
  },
  {
    "id": 386,
    "title": "tobin",
    "time_limit": "1 초",
    "description": "10 진수를 입력으로 받아 이진수로 변경하는 프로그램을 작성하시오.",
    "input": "입력으로 1000 이하의 자연수가 주어진다.",
    "output": "",
    "sample": "입력\n\n10\n\n출력\n\n1010\n\n입력\n\n11\n\n출력\n\n1011"
  },
  {
    "id": 387,
    "title": "mt(open)",
    "time_limit": "1 초",
    "description": "수 n 을 입력으로 받아 1 부터 n 까지 출력후 다시 1 씩 감소하면서 마지막 1 까지 출력하는 프로그램을 작성하시오.",
    "input": "2 이상 20 이하의 양의 정수가 입력으로 주어진다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n12321"
  },
  {
    "id": 388,
    "title": "pTp(open)",
    "time_limit": "1 초",
    "description": "봉우리가 여러개인 산 모양을 출력한다. 산 모양은 그림과 같고 좌우 대칭이다.",
    "input": "입력은 20 이하의 자연수이다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n1\n\n출력\n\n1\n\n입력 \n\n2 \n\n출력 \n\n121 \n\n입력 \n\n3 \n\n출력 \n\n1213121 \n\n입력\n\n4\n\n출력\n\n121312141213121\n\n입력 \n\n5 \n\n출력 \n\n1213121412131215121312141213121"
  },
  {
    "id": 389,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 390,
    "title": "athletic",
    "time_limit": "1 초",
    "description": "철수네 학교에서는 육상대회만 있던 가을 운동회에 팔씨름 대회를 추가 시켰다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n3\n\n출력\n\nooo\nooxo\nooxxo\noxoo\noxoxo\noxxoo\nxooo\nxooxo\nxoxoo\nxxooo\ntotal 10 case(s)"
  },
  {
    "id": 391,
    "title": "point(open)",
    "time_limit": "1 초",
    "description": "두 점이 (-1,-2) 이고 (3,4) 이면 답은 3",
    "input": "두 쌍의 서로 다른 점의 좌표가 입력으로 주어진다. 주어지는 수는 -100 000 000 ~ 100 000 000 사이의 정수이다.",
    "output": "정수 점의 개수를 출력한다.",
    "sample": "입력\n\n-1 -2\n3 4\n\n출력\n\n3"
  },
  {
    "id": 392,
    "title": "ccc_chances",
    "time_limit": "1 초",
    "description": "지금 나는 작은 토너먼트에서 내가 제일 좋아하는 팀이 우승할 확률이 얼마나 될지 알고 싶어합니다.",
    "input": "첫 번째 줄에 내가 응원하는 팀의 번호 T (1 ≤ T ≤ 4) 가 입력됩니다.\n두 번째 줄에 이미 끝난 게임의 수 G (0 ≤ G ≤ 5) 가 입력됩니다.\n다음 G 줄에 팀 번호 A, B, 두 팀의 점수 Sa, Sb (1 ≤ A < B ≤ 4, Sa, Sb ≥ 0) 가 공백으로 구분돼 입력됩니다. A가 이긴 게임이면 Sa > Sb, B가 이긴 게임이면 Sa < Sb, 무승부인 게임이면 Sa = Sb입니다.",
    "output": "첫 줄에 T번 팀이 우승하는 방법의 가짓수를 출력하세요.",
    "sample": "입력\n\n3\n3\n1 3 7 5\n3 4 0 8\n2 4 2 2\n\n출력\n\n0\n\n입력\n\n3\n4\n1 3 5 7\n3 4 8 0\n2 4 2 2\n1 2 5 5\n\n출력\n\n9"
  },
  {
    "id": 393,
    "title": "dance",
    "time_limit": "1 초",
    "description": "베시(암소)와 N ( 1 <= N <= 2,200) 마리의 암소무리들은 ( 편의상 1,2,...,N ) 황소 무리가 있는 댄스 파티에 가려고 한다.",
    "input": "정수 N 이 주어진다.",
    "output": "총 합을 출력한다.",
    "sample": "1   2   3   4   5   6  |  7   8   9   10   11 ... 이 경우 반을 나눌수 없으므로 앞무리 6마리 뒷무리 5마리\n\n1   2   3 | 4   5   6\n\n1   2 | 3\n\n1   2        => 1*2=2  총합 2\n       3     => 3 번 집으로  \n\n            4   5 |  6\n            4  5        => 4*5=20  총합 22\n                     6  => 6 번 집으로 \n\n                           7   8   9  | 10  11\n\n                           7   8 | 9\n                           7   8        => 7*8=56  총합 78\n                                   9    => 9 번 집으로 \n\n                                        10  11   => 10*11=110 총합 188"
  },
  {
    "id": 394,
    "title": "secure",
    "time_limit": "1 초",
    "description": "농부 존은 축사에 새로운 보안 시스템을 설치 후 소들에게 가능한 모든 유효한 번호를 알려 주어야 한다.",
    "input": "첫 줄은 L , C 가 입력으로 주어진다. L 은 만들고자 하는 패스워드의 크기이고 C 는 사용할 수 있는 소문자의 개수이다. 다음 줄에는 C 개의 소문자가 입력으로 주어진다.",
    "output": "스페이스 없이 가능한 패스워드를 사전식 오름차순 순으로 출력한다.",
    "sample": "입력\n\n4 6\na t c i s w\n\n출력\n\nacis\nacit\naciw\nacst\nacsw\nactw\naist\naisw\naitw\nastw\ncist\ncisw\ncitw\nistw"
  },
  {
    "id": 395,
    "title": "order",
    "time_limit": "1 초",
    "description": "n,r, 그리고 p ,q 를 입력받아 n 개의 문자 중 r 개를 택하는 순열을 사전 순서로 배열했을 때 p 번째 위치한 순열과 n 개의 문자 중 r 개를 택하는 조합을 사전 순서로 배열했을 때 q 번째 위치한 조합을 출력하는 프로그램을 작성하시오. n 개의 문자는 A부터 시작하는 알파벳 대문자이 다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4 2\n5 5\n\n출력\n\nBC\nBD"
  },
  {
    "id": 396,
    "title": "omok",
    "time_limit": "1 초",
    "description": "오목은 바둑판에 검은 바둑알과 흰 바둑알을 교대로 놓아서 겨루는 게임이다. 바둑판에는 19개의 가로줄과 19개의 세로줄이 그려져 있는데 가로줄은 위에서부터 아래로 1번, 2번, …, 19번의 번호가 붙고 세로줄은 왼쪽에서부터 오른쪽으로 1번, 2번, …, 19번의 번호가 붙는다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 1 2 0 0 2 2 2 1 0 0 0 0 0 0 0 0 0 0 \n0 0 1 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 \n0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\n출력\n\n1\n3 2"
  },
  {
    "id": 397,
    "title": "robot",
    "time_limit": "1 초",
    "description": "r 행 c 열의 지도 정보가주어지고 , 1 행 s 열의 시작 위치가 주어질 때 이 맵을 빠져나가는 경우 , 아니면 꼬리를 무는 경우의 정보를 출력하는 문제이다.",
    "input": "r 과 c 는 10 이하의 정수이다.",
    "output": "",
    "sample": "입력\n\n3 6 5\nNEESWE\nWWWESS\nSNWWWW\n\n출력\n\n10 step(s) to exit\n\n입력\n\n4 5 1\nSESWE\nEESNW\nNWEEN\nEWSEN\n\n출력\n\n3 step(s) before a loop of 8 step(s)"
  },
  {
    "id": 398,
    "title": "necklace",
    "time_limit": "1 초",
    "description": "총 N(3 <= N <= 350)-- 빨간 , 흰 , 파란색의 구슬--개의 구슬을 가진 목걸이를 가지고 있다. 이 구슬들은 여러가지 색이 섞여 있다.",
    "input": "",
    "output": "",
    "sample": "1 2                               1 2\n          r b b r                           b r r b\n        r         b                       b         b\n       r           r                     b           r\n      r             r                   w             r\n     b               r                 w               w\n    b                 b               r                 r\n    b                 b               b                 b\n    b                 b               r                 b\n     r               r                 b               r\n      b             r                   r             r\n       b           r                     r           r\n         r       r                         r       b\n           r b r                             r r w\n          그림. A                           그림. B\n                      r 빨간 구슬\n                      b 파란 구슬 \n                      w 흰 구슬"
  },
  {
    "id": 399,
    "title": "agent(open)",
    "time_limit": "1 초",
    "description": "머나 먼 차원의 우주 어딘가에 있는 S국은 최근 N국으로 비밀 요원을 파견했다. 보안을 지키기 위해 한 비밀 요원은 반드시 정해진 한 사람에게만 연락을 취할수 있다.",
    "input": "첫 줄에는 비밀요원이 몇 명인지 나타내는 n이 입력된다. (1≤n≤100)\n\n두번째 줄에는 n개의 정수가 입력된다. i번째 정수는 i번 요원이 누구에게 메세지를 보내는지 나타내는 것이다.",
    "output": "모든 요원에 대해 조건을 만족하는 t가 있다면 그중 가장 작은 t를 출력한다.\n\n만약 불가능 하다면 -1을 출력한다.",
    "sample": "입력\n\n4\n2 3 1 4\n\n출력\n\n3\n\n\n입력\n\n4\n4 4 4 4\n\n출력\n\n-1\n\n\n입력\n\n4\n2 1 4 3\n\n출력\n\n1"
  },
  {
    "id": 400,
    "title": "permutation",
    "time_limit": "1 초",
    "description": "집합 {1,2,3,4,5} 의 순열(permutation) 을 다음과 같이 정의 한다.",
    "input": "자연수 N ( 1 <= N <= 1000 ) 이 입력으로 주어진다.\n다음 줄에는 1 .. N 개의 순열이 주어진다. 차례대로 P(1) , P(2) , ...",
    "output": "순열의 차수를 출력한다. 답은 10\n9\n을 넘지 않는다.",
    "sample": "요약하면 ,\n\np1: 주어진 순열 \n\n1 2 3 4 5\n----------\n4 1 5 2 3\n\np2: 2 번을 접근 후의 순열\n\n1 2 3 4 5\n---------\n2 4 3 1 5\n\np3: 3 번을 접근 후의 순열\n\n1 2 3 4 5\n---------\n1 2 5 4 3\n\n...\npn: n 번 접근 후의 순열 \n\n1 2 3 4 5\n---------\n1 2 3 4 5\n\n최소  n 을  구하는 게 문제"
  },
  {
    "id": 401,
    "title": "hanoi",
    "time_limit": "1 초",
    "description": "세 개의 탑(1,2,3 번 탑) 있고 첫번 째 탑에 접시가 쌓여져 있다. 단 접시는 작은 접시 위에 큰 접시가 쌓일수는 없다.",
    "input": "입력의 첫째 줄에는 1 번 탑에 싸여져 있는 접시수가 입력된다. 접시수는 10 을 넘지 않는다.",
    "output": "최소 이동 방법을 출력예의 형식으로  출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n1 -> 3\n1 -> 2\n3 -> 2\n1 -> 3\n2 -> 1\n2 -> 3\n1 -> 3"
  },
  {
    "id": 402,
    "title": "dna",
    "time_limit": "1 초",
    "description": "농부존은 젖이 잘나오는 소들에 대한 DNA 나열을 해 보았다.",
    "input": "문자열의 개수 N 이 주어진다.\n      다음 N 라인에는 DNA 나열이 주어진다.",
    "output": "주어진 나열을 하나로 합칠 때 만들수 있는 최소 크기를 출력한다.",
    "sample": "GATTA + TACA -> GATTACA\n   TACA + GATTA -> TACAGATTA\n   TACA + ACA -> TACA\n   TAC + TACA -> TACA\n   ATAC + TACA -> ATACA\n   TACA + ACAT -> TACAT"
  },
  {
    "id": 403,
    "title": "fractal",
    "time_limit": "1 초",
    "description": "정삼각형의 면적을 높이가 반인 4개의 똑 같은 삼각형으로 나눈 다음 가운데 있는 하나를 제거한 면적을 생각해 보자. 같은 연산을 남은 3개의 삼각형에도 재귀적으로 적용하자. 이 과정을 무한정 반복한다면, 언젠가는 0의 면적을 가진 무언가를 얻게 될 것이다. 이런 식으로 성장하는 프랙탈을 셔핀스키(Sierpinsky) 삼각형이라고 한다. 이것의 위상적인 차원은 2이지만, 하우스도르프 차원은 log(3)/log(2)~1.58, 분수값이다. (프랙탈이라고 불리는 이유이다.) 그러나, 노르웨이 피오르드 해안의 하우스도르프 차원은 대략 1.52이고, 그것의 위상적 차원은 1이다.",
    "input": "각각은 정수 n으로 정해져 있다.  1 <= n <=10 의 경우 재귀적 깊이를 나타낸다.",
    "output": "각 테스트 케이스에서는 셔핀스키 삼각형의 윤곽을 각 사이드의 총 길이가 2\nn\ncharacter가 되도록 그려야 한다. 당신의 출력을 왼쪽에 나란히 하여, 바닥의 맨 왼쪽의 슬래시가 첫 열에 들어가도록 한다. 출력은 쓸데없는 공백이 있어서는 안 된다. 테스트 케이스 뒤에는 빈 줄을 출력하도록 한다.",
    "sample": "/\\ \n/__\\"
  },
  {
    "id": 404,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nvoid quick(int low,int high)\n{\n    int pivotindex;\n     if (low < high){\n        partition(low,high,&pivotindex);\n        quick(low,pivotindex-1);\n        quick(pivotindex+1,high);\n    }\n}",
    "time_limit": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n#include <stdio.h>\n#include <stdlib.h>\n int cmp(const void *va,const void *vb)\n{\n   int *a,*b;\n    a=(int *)va;\n   b=(int *)vb;\n    return *a - *b;\n}\n int main()\n{\n   int ia[]={6,2,9,8,3,4,7}; // 원소 7 개를 가진 정수형 배열. 오름차순 정렬하기\n   int i;\n    qsort(ia,7,sizeof(ia[0]),cmp);\n    for(i = 0;i < 7;i++){\n      printf(\"%d \",ia[i]);\n   }\n   printf(\"\\n\");\n    }",
    "description": "",
    "input": "",
    "output": "",
    "sample": "차례\n\n      1. partition 방법\n      2. quick sort 구현\n      3. 왜 quick 인가?\n      4. library 로 구현하기 \n      5. 분석"
  },
  {
    "id": 405,
    "title": "guessing_game",
    "time_limit": "1 초",
    "description": "스탄과 올리는 숫자를 추측하는 게임을 하고 있다.",
    "input": "올리가 부른 숫자(1 과 10 사이)와 다음 줄에는 이 숫자에 대한 스탄의 판정이 기록된다. \nright on 이 입력되면 게임이 끝나는 것이다.\n스탄의 판정은 아래 세 가지 중 하나이다. too high , too low , right on",
    "output": "스탄의 판정이 왔다리 갔다리 하는 경우 Stan is dishonest  를 출력하고 아니면 Stan may be honest 를 출력한다.",
    "sample": "입력\n\n10\ntoo high\n3\ntoo low\n4\ntoo high\n2\nright on\n\n출력\n\nStan is dishonest\n\n입력\n\n5\ntoo low\n7\ntoo high\n6\nright on\n\n출력\n\nStan may be honest"
  },
  {
    "id": 406,
    "title": "sort",
    "time_limit": "1 초",
    "description": "정렬은 컴퓨터에서 가장 자주 일어나는 것 중의 하나이다. 이 문제에서는 세 개의 값을 가지는 특수한 정렬 프로그램을 알아보자.",
    "input": "첫 라인은 정렬할 수의 개수 N (1 <= N <= 1000) 이 입력되고 ,\n다음 줄부터 N 개의 수가 한 줄에 하나씩 1 ,2 ,3 중 하나가 입력된다.",
    "output": "최소 이동횟수를 출력한다.",
    "sample": "입력\n\n9\n2\n2\n1\n3\n3\n3\n2\n3\n1\n\n출력\n\n4"
  },
  {
    "id": 407,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n#include <stdio.h>\n#include <stdlib.h>\n#include <search.h>\n int cmp(const void *va,const void *vb)\n{\n   int *p,*q;\n    p = (int*)va;\n   q = (int*)vb;\n    return *p - *q;\n}\n int main()\n{\n   int ia[]={2,4,6,8,10};\n   int key=8;\n   int *p;\n    //bsearch(찾을데이터, 배열의시작주소,배열개수,한배열의바이트수,함수포인터)\n   //찾고자 하는 데이터가 존재하면 해당데이터의 실제 주소 \n   //없으면 NULL\n    p =(int*) bsearch(&key,ia,5,sizeof(int),cmp );\n    if ( p ) {\n      printf(\"found in %dth\\n\", p - ia);\n   }else {\n      printf(\"not found...\\n\");\n   }\n    return 0;\n}",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "",
    "input": "",
    "output": "",
    "sample": "출처:dovelet"
  },
  {
    "id": 408,
    "title": "bsearch",
    "time_limit": "1 초",
    "description": "정렬된 수열을 입력으로 받아 이 수열내에 찾고자 하는 수가 있는지 없는지를 구하는 프로그램을 작성하시오.",
    "input": "입력의 첫 수는 검색 대상이 되는 수의 개수 n ( 1 <= n <= 500,000 ) 이고 , 다음 n 개의 수 와 검색대상 수가  입력으로 주어진다.\n      주어지는 수열의 수와 검색되상의 수는 정수 범위를 넘지 않고 , 입력되는 첫 수가 첫번째 수이다.",
    "output": "찾으면 몇 번째 있는 수인지를 출력하고 찾고자 하는 데이터가 없으면 \"not found\" 를 출력한다.",
    "sample": "입력\n\n5\n2 4 6 8 10\n4\n\n출력\n\n2\n\n입력\n\n5\n2 4 6 8 10\n5\n\n출력\n\nnot found"
  },
  {
    "id": 409,
    "title": "notes",
    "time_limit": "1 초",
    "description": "농부 존은 그의 소들에게 노래를 가르치고 있다.",
    "input": "첫 줄에는 두 개의 정수 N , Q 가 주어진다.\n다음 N 줄에는 Bi 가 주어지고 ,\n다음 Q 줄에는 Ti 가 주어진다.",
    "output": "Q 개의 질문에 대한 각 시각의 악보 번호를 출력한다.",
    "sample": "악보     1   1   2   3   3   3\n       +---+---+---+---+---+---+\n시각     0   1   2   3   4   5"
  },
  {
    "id": 410,
    "title": "measure",
    "time_limit": "1 초",
    "description": "준성이는 1 cm 간격으로 눈금이 매겨져 있는 줄자를 가지고 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10\n2 7\n5 4\n10 3\n\n출력\n\n3.5"
  },
  {
    "id": 411,
    "title": "binary_search",
    "time_limit": "1 초",
    "description": "당신이 할 일은 주어진 i 와 L 이 나오는 것이 가능한 N 값을 모두 찾는 것이다. 하지만 가능한 N 값의 개수가 너무 많을 수 있기 때문에 가능한 N 값들을 연속한 구간들로 나누어서 각각의 구간들에 대해 첫 수와 끝 수를 출력한다.",
    "input": "두 개의 정수 i (0 <= i < 10000) 와 L (1 <= L <= 14) 가 공백으로 구분되어 한 줄로 입력된다.",
    "output": "첫 번째 줄에는 가능한 정수 N 들의 구간 개수 K 를 출력한다.\n그리고 K 줄에 걸쳐서 증가하는 순서로 N 값의 구간을 출력한다. (각 줄에는 각 구간의 첫 수와 끝 수 A 와 B 가 (A <= B) 공백으로 구분되어 출력된다.)",
    "sample": "입력\n\n10 3\n\n출력\n\n4\n12 12\n17 18\n29 30\n87 94"
  },
  {
    "id": 412,
    "title": "fact_pow",
    "time_limit": "1 초",
    "description": "a > 1 보다 클때 n 이 얼마 이상이면 f(n)>g(n) 이 항상 성립한다.",
    "input": "입력은 여러개의 데이터로 구성되있다.\n첫번째 줄에는 데이터 개수 T (1<=T<=100000) 가 주어진다.\n다음 T줄에는 정수 a가 주어진다.",
    "output": "f(n)>g(n) 이 성립하는 가장 작은 정수 n을 각 데이터마다 출력한다.",
    "sample": "입력\n\n3\n2\n3\n4\n\n출력 \n\n4\n7\n9"
  },
  {
    "id": 413,
    "title": "이 방법은 초등 수학에 나오는 문제 푸는 방법 찾기에서 거꾸로 생각하기와 비슷한 것 같습니다.",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "(예시 문제)아래 부등식의 해를 구하시오. 1 에서 20 사이의 정수값에서 해가 나오는다는 것은 보장된다.",
    "input": "",
    "output": "",
    "sample": "10 을 이항하면 \n2*x <= 16\n x <= 8"
  },
  {
    "id": 414,
    "title": "subsequence",
    "time_limit": "1 초",
    "description": "N 개의 수열, 양의 정수 S 가 주어지는 경우 수열의 연속적인 합이 S 보다 같거나 큰 최소 구간을 출력하는게 문제이다.",
    "input": "첫 줄에는 양의 정수 N , S 가 주어진다. ( 10 < N < 100 000, S < 100 100 1000 )\n다음 줄에는 N 개의 수가 입력으로 주어진다. 각 수는 10000 이하인 양의 정수이다.",
    "output": "S 이상인 구간이 없는 경우는 0 을 출력한다.",
    "sample": "입력\n\n10 15 \n5 1 3 5 10 7 4 9 2 8 \n\n출력\n\n2\n\n입력\n\n5 11\n1 2 3 4 5\n\n출력\n\n3"
  },
  {
    "id": 415,
    "title": "drying",
    "time_limit": "1 초",
    "description": "겨울에 빨래 한 후 옷을 말리는 것은 힘든 작업이다.",
    "input": "첫 라인은 정수 n 이 주어진다. (1 ≤ n ≤ 100 000).\n두 번째 줄에는 ai 가 주어진다.(1 ≤ ai ≤ 109)\n세 번째 라인은 k 가 주어진다.(1 ≤ k ≤ 109).",
    "output": "모든 옷을 말리는 데 필요한 최소 시간을 출력한다.",
    "sample": "입력\n\n3\n2 3 9\n5\n\n출력\n\n3\n\n입력\n\n3\n2 3 6\n5\n\n출력\n\n2"
  },
  {
    "id": 416,
    "title": "aggressive",
    "time_limit": "1 초",
    "description": "농부 존은 N (2 <= N <= 100,000)개의 우리(stall)를 가진 긴 축사(barn)를 지으려고 한다. 우리(stall)는 직선 형태로 각각은 x1 ,x2 , .. , xn 에 위치하고 있다.(0 <= xi <= 1,000,000,000).",
    "input": "첫 줄에는 두 정수 N , C 가 주어진다.\n다음 N 줄에는 xi 가 주어진다.",
    "output": "가장 큰 최소 거리를 출력한다.",
    "sample": "입력\n\n5 3\n1\n2\n8\n4\n9\n\n출력\n\n3"
  },
  {
    "id": 417,
    "title": "k_best",
    "time_limit": "2 초",
    "description": "Demy 는 n 개의 보석을 가지고 있다. 각각의 보석은 vi 의 값어치와 wi 의 무게를 가지고 있다.",
    "input": "입력의 첫 줄은 n - Demy 가 가진 보석의 수 - 과 k - 간직하기로 한 보석의 수가 주어진다.\n(1 ≤ k ≤ n ≤ 100 000).\n다음 n 줄에는 각 줄당 vi 와 wi 가 주어진다. (0 ≤ vi ≤ 10^6, 1 ≤ wi ≤ 10^6, vi + wi <= 10^7)",
    "output": "데미가 간지해야할 보석 k 개의 번호를 출력한다. 답이 여럿이면 이 중 만족하는 하나만 출력한다.",
    "sample": "입력\n\n3 2\n1 1\n1 2\n1 3\n\n출력\n\n1 2"
  },
  {
    "id": 418,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 419,
    "title": "crossed_ladder(open)",
    "time_limit": "1 초",
    "description": "좁은 골목길에 높은 빌딩들이 줄지어 있다.",
    "input": "세 양의 실수 x , y , 그리고 c 가 주어진다.",
    "output": "각 입력에 대해 도로의 폭을 세자리까지 출력한다.",
    "sample": "입력\n\n30 40 10\n\n출력\n\n26.033\n\n입력\n\n12.619429 8.163332 3\n\n출력\n\n7.000\n\n입력\n\n10 10 3\n\n출력\n\n8.000\n\n입력\n\n10 10 1\n\n출력\n\n9.798"
  },
  {
    "id": 420,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 421,
    "title": "josephus",
    "time_limit": "1 초",
    "description": "카메롯 성에서는 회의가 열리고 있다. 밤마다 용이 나타나서 백성들을 괴롭히기 때문 이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8 2 3\n\n출력\n\n2 5 8 4 1 7 3 6"
  },
  {
    "id": 422,
    "title": "long_sub",
    "time_limit": "1 초",
    "description": "매우 큰 길이의 두 개의 수가 입력되었을때 뺄셈을 구하는 프로그램을 작성하시오.",
    "input": "100 자리 이하의 양의 정수 2 개가 주어진다.",
    "output": "두 정수값에 대한 뺄셈의 결과를 출력한다.",
    "sample": "입력\n\n521732147023\n218072345632843258023\n\n출력\n\n-218072345111111111000"
  },
  {
    "id": 423,
    "title": "long_mul",
    "time_limit": "1 초",
    "description": "두 개의 큰 수를 입력으로 받아 두 수의 곱한 결과를 출력하는 프로그램을 작성하시오.",
    "input": "입력은 두 줄로 하며 , 각 각의 줄에는 200 자리 이하의 0 혹은 양의 정수가 주어진다.",
    "output": "긴 자릿수의 계산 결과를 한 줄에 출력한다.",
    "sample": "입력\n\n123456789\n3456789012345\n\n출력\n\n426764071714595060205"
  },
  {
    "id": 424,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n#include < stdio.h >\n  int fact[100000]={1};\n int main()\n{\n   int i,f,last = 1;\n   int mok,n;\n       scanf(\"%d\",&n);\n    for( f = 1 ; f <= n; f++){\n      mok = 0;\n      for( i = 0 ; i < last ;i++){\n         fact[i] = fact[i]*f + mok;\n         mok = fact[i] / 10;\n         fact[i] = fact[i] % 10;\n      }\n             for( ; mok != 0 ; last++ ){\n         fact[last] = mok % 10;\n         mok /= 10;\n      }\n   }\n     for( i = last -1 ; i >= 0 ; i--){\n      printf(\"%d\",fact[i]);\n   }\n    printf(\"\\n\");\n    }",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "n ! 소스",
    "input": "",
    "output": "",
    "sample": ""
  },
  {
    "id": 425,
    "title": "two",
    "time_limit": "1 초",
    "description": "2 의 N 거듭 제곱을 구하는 문제이다.",
    "input": "N 이 주어진다. ( 0 <= N <= 265)",
    "output": "2^N 을 출력한다.",
    "sample": "입력\n\n100\n\n출력\n\n1267650600228229401496703205376"
  },
  {
    "id": 426,
    "title": "factorial(open)",
    "time_limit": "1 초",
    "description": "n! 를 구하는 프로그램을 작성하시오.",
    "input": "n 은 1000 을 넘지 않는다.",
    "output": "n! 의 결과를 출력한다.",
    "sample": "입력\n\n10\n\n출력\n\n3628800\n\n입력\n\n30\n\n출력\n\n265252859812191058636308480000000\n\n입력\n\n50\n\n출력\n\n30414093201713378043612608166064768844377641568960512000000000000\n\n입력\n\n100\n\n출력\n\n93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000"
  },
  {
    "id": 427,
    "title": "frequency",
    "time_limit": "1 초",
    "description": "수 N (0 <= N <= 366) 을 입력으로 받아 N ! 의 빈도수를 출력하는게 문제이다.",
    "input": "수 N 이 입력으로 주어진다.",
    "output": "각 자리의 빈도수가 출력 예의 형식으로 출력 된다.",
    "sample": "입력\n\n1\n\n출력\n\n1! --\n   (0)    0    (1)    1    (2)    0    (3)    0    (4)    0 \n   (5)    0    (6)    0    (7)    0    (8)    0    (9)    0 \n\n입력\n\n5\n\n출력\n\n5! --\n   (0)    1    (1)    1    (2)    1    (3)    0    (4)    0 \n   (5)    0    (6)    0    (7)    0    (8)    0    (9)    0 \n\n입력\n\n10\n\n출력\n\n10! --\n   (0)    2    (1)    0    (2)    1    (3)    1    (4)    0 \n   (5)    0    (6)    1    (7)    0    (8)    2    (9)    0"
  },
  {
    "id": 428,
    "title": "nummobile",
    "time_limit": "1 초",
    "description": "암비둘기 릿은, 최근 숫자회전 모빌 사업을 시작했다.",
    "input": "첫줄에는 데이터의 개수 N개가 주어지고, 그 다음줄 부터 끝줄\n까지 확인할 숫자모빌이 주어진다. (최대 60자리)\n(단 0142857과 142857 은 다른 수임을 명심하라)",
    "output": "숫자회전모빌이라면 YES, 아니면 NO 를 출력한다. 그리고 각\n숫자모빌에 대해서는 개행(\"\\n\") 으로 구분한다.",
    "sample": "입력\n\n2\n142857\n142856\n\n출력\n\nYES\nNO"
  },
  {
    "id": 429,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 430,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 431,
    "title": "HQ9(open)",
    "time_limit": "1 초",
    "description": "HQ9+ 라는 프로그래밍 언어는 세상에서 가장 간단한 언어이다.",
    "input": "h,q,k 문자가  한 줄에  입력으로 주어진다.  대소문자는 구별하지 않는다.\n문자열의 크기는 25 이하이다.",
    "output": "출력  예의 형식으로 출력한다.",
    "sample": "입력\n\nqQqQqQqQ \n\n출력\n\nqQqQqQqQ \nqQqQqQqQ \nqQqQqQqQ \nqQqQqQqQ \nqQqQqQqQ \nqQqQqQqQ \nqQqQqQqQ \nqQqQqQqQ \n\n입력\n\n9hhq \n\n출력\n\n99 Bottles of Beer on the Wall \nHello, world! \nHello, world! \n9hhq"
  },
  {
    "id": 432,
    "title": "differential",
    "time_limit": "1 초",
    "description": "민민이는 심심해서 좌표 평면위에 y = k/(px) 함수를 그리고 점 c를 잡고 점 a는 x축위에 점 b는 y축위에 잡은 다음 a,b,c를 연결하여 삼각형을 만들었다.(a_x,y>=0,b_x,y>=0)",
    "input": "k,p가 주어진다(5000자리 이하의 자연수)",
    "output": "삼각형 넓이의 최댓값에 p값을 곱해 출력한다.",
    "sample": "입력\n\n1 1\n\n출력\n\n1"
  },
  {
    "id": 433,
    "title": "chemi(open)",
    "time_limit": "1 초",
    "description": "[요약] 루카는 화학 수업 시간에 지루해서 문단에 있는 모음(a,e,i,o,u) 을 모음p모음 으로 바꾸었다. 이 바뀐 문장을 원래대로 돌리는 것이 문제이다.",
    "input": "",
    "output": "",
    "sample": "input\n\nzepelepenapa papapripikapa\n\noutput\n\nzelena paprika\n\ninput\n\nbapas jepe doposapadnapa opovapa kepemipijapa\n\noutput\n\nbas je dosadna ova kemija"
  },
  {
    "id": 434,
    "title": "coci_trik",
    "time_limit": "1 초",
    "description": "[문제요약] 3 개의 컵 중에 하나의 공을 넣은 후 두 개의 컵을 이리저리 바꾼 후 최후에 공이 들어간 컵을 알아내는 문제.",
    "input": "The first and only line contains a string of at most 50 characters, Borko's moves. \nEach of the characters is 'A', 'B' or 'C' (without quote marks).",
    "output": "Output the index of the cup under which the ball is: 1 if it is under the left cup, 2 if it is under the \nmiddle cup or 3 if it is under the right cup.",
    "sample": "input \n\nAB \n\noutput \n\n3 \n\ninput \n\nCBABCACCC \n\noutput \n\n1"
  },
  {
    "id": 435,
    "title": "comma(open)",
    "time_limit": "1 초",
    "description": "세 자리 마다 콤마를 찍는 프로그램을 작성하세요.",
    "input": "공백없이 100 자리이하의 수가 입력으로 주어진다. 무효의 0 은 입력되지 않는다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n1234\n\n출력\n\n1,234"
  },
  {
    "id": 436,
    "title": "coci_abc(open)",
    "time_limit": "1 초",
    "description": "3 개의 정수 A,B,C 가 주어진다. 정해진 순서로 입력되지는 않지만 A < B < C 라는 것은 안다.",
    "input": "첫 줄에는 A,B,C 세 수가 임의로 순서로 입력된다. 세 수는 100 이하인 정수이다.\n다음 줄에는 재 배치를 원하는 A,B,C 문자를 포함한 문자열이 입력으로 주어진다.",
    "output": "입력의 두 번째 줄에서 요구하는 순서로 수를 재 배치하여 출력한다.",
    "sample": "입력\n\n1 5 3\nABC\n\n출력\n\n1 3 5\n\n입력\n\n6 4 2\nCAB\n\n출력\n\n6 2 4"
  },
  {
    "id": 437,
    "title": "mulofele",
    "time_limit": "1 초",
    "description": "주희는 배수 판정법에 대해 공부 중이다. 그런데 유독 11 의 배수 판정법이 잘 외워지지 않았다.",
    "input": "300 자 이하의 자연수가 입력으로 주어진다.",
    "output": "입력으로 주어진 수가 11 의 배수이면 yes  , 아니면 no 를 출력한다.",
    "sample": "입력\n\n121\n\n출력\n\nyes"
  },
  {
    "id": 438,
    "title": "octal(open)",
    "time_limit": "1 초",
    "description": "슬바브코는 다른 진법에 대해서 배우고 있다. 그런데 그는 이쪽 관련해서는 머리가 빠르게 돌아가지 않는다. 그래서 다음과 같은 알고리즘을 사용해서 이진법을 8 진법으로 변환하는 프로그램을 작성 하려고 한다.",
    "input": "100 자리를 넘지 않고 첫 수는 1 로 시작한다.",
    "output": "대응되는  8 진수를 출력한다.",
    "sample": "입력\n\n1010\n\n출력\n\n12\n\n입력\n\n11001100\n\n출력\n\n314"
  },
  {
    "id": 439,
    "title": "worldcup(open)",
    "time_limit": "1 초",
    "description": "월드컵이 세계 각지의 팀으로 열린다.",
    "input": "첫 줄에 두 개의 정수  T 와 N 이 주어진다.\nT 는 팀의 수 이고 , N 은 경기 수 이다. ( 0 <= T <= 200 , 0 <= N <= 10000 )\n다음 T 라인은 팀 이름 한 칸의 공백 현재 까지 이 팀이 얻은 포인터가 주어진다.",
    "output": "비긴 경기 수를 출력한다.",
    "sample": "입력\n\n3 3\nBrasil 3\nAustralia 3\nCroacia 3\n\n출력\n\n0\n\n입력\n\n3 3\nBrasil 5\nJapao 1\nAustralia 1\n\n출력\n\n2"
  },
  {
    "id": 440,
    "title": "pandigital(open)",
    "time_limit": "1 초",
    "description": "54123 은 5 자리 수이고 각 자리는 1 에서 5 까지의 수가 오직 한 번 나타난다. 이런 수를 5-pandigital 수 라고 한다.",
    "input": "10 자리 이하의 수가 입력으로 주어진다.",
    "output": "",
    "sample": "입력\n\n4123\n\n출력\n\nyes"
  },
  {
    "id": 441,
    "title": "counting_black",
    "time_limit": "1 초",
    "description": "아래 그림과 같은 100*100 보드가 있다. 왼쪽 위가 (1,1) 이고 오른쪽 아래가 (100,100) 이다.",
    "input": "입력의 첫 수는 정수 t ( 1 <= t <= 100 ) 이 입력으로 주어진다. 이는 명령의 수를 나타낸다.\n      다음 줄 부터는 명령이 주어진다.\n모든 명령은 주어진 범위에 들어간다는 것은 보장된다.",
    "output": "TEST 명령에서 주어진 영역의 검은색 격자 수를 출력한다.",
    "sample": "1. WHITE  x, y, L     // 보드판의 격자에 흰색을 칠한다.\n                            // x,y 는 왼쪽 위이고  \n                            // 오른쪽 아래는  (x+L-1, y+L-1)\n\n      2. BLACK  x, y, L     // 보드판의 격자에 검은색을 칠한다.\n                            // x,y 는 왼쪽 위이고  \n                            // 오른쪽 아래는  (x+L-1, y+L-1)\n\n      3. TEST     x, y, L   // 검은색의 격자의 수를 출력한다.\n                            // 범위는  (x, y) - (x+L-1, y+L-1)"
  },
  {
    "id": 442,
    "title": "blur",
    "time_limit": "1 초",
    "description": "Aliasing 은 유한한 수의 픽셀을 이용해서 부드러운 곡선을 나타내고 자 할 때 생긱는 계단 효과다.",
    "input": "입력은 3 부분으로 구성된다.\n시작 라인 - 한 줄\nSTART R C R 과 C 는 이미지의 행과 열이다.( 2 <= R,C <= 9)\n원본 이미지 - R 라인\n\n각 라인은 C (0..9) 개의 정수를 포함한다. 이 정수는 원본 이미지에서 픽셀의 회색스케일의 값을 나타낸다. 수 사이에는 공백이 없다.\n\nEnd line - 한 줄",
    "output": "출력은 anti-aliased 이미지이다. R-1 행에 각 행당 C - 1 개의 정수 픽셀 값이다.\n\n\n      출력의 각 픽셀은 4 픽셀을 평균(버림)을 해서 만들 수 있다.",
    "sample": "입력\n\nSTART 2 2\n00\n00\nEND\n\n출력\n\n0\n\n입력\n\nSTART 2 9\n012345678\n012345678\nEND\n\n출력\n\n01234567\n\n입력\n\nSTART 4 4\n4440\n4400\n4000\n0000\nEND\n\n출력\n\n431\n310\n100\n\n입력\n\nSTART 9 9\n900000009\n090000090\n009000900\n000909000\n000090000\n000909000\n009000900\n090000090\n900000009\nEND\n\n출력\n\n42000024\n24200242\n02422420\n00244200\n00244200\n02422420\n24200242\n42000024"
  },
  {
    "id": 443,
    "title": "treasure_hunt(open)",
    "time_limit": "1 초",
    "description": "3 월 안개낀 아침에 언덕에서 놀다가 바위 아래에 있는 보물 지도를 우연히 발견했다. 지도에는 보물의 위치와 거기에 어떻게 가는지의 정보가 있다.",
    "input": "입력으로\n첫 줄은 두 수가 주어진다. 도달해야 할 목적지를 나타낸다.\n쌍의 첫수는 걸어야할 수이다. 양수이면 동 , 음수이면 서\n두 번째 수는 양수이면 북 , 음수이면 남 .\n두 번째 수는 방향 정보의 개수를 나타내는 정수 n 이 주어지고 다음 n 줄에는 걸어야 할 수 와 한 칸의 공백 , 그리고 방향이다.\n\n방향은 N , S , E , W 중 한 문자이다. 예를 들어 , \"3 W\" 이면 왼쪽으로 3 칸 간다는 것을 의미한다.\n모든 수는 양의 정수이다.",
    "output": "당신의 프로그램은 방향 세그먼트로 지도에 주어진 방향으로 갈 시에 보물이 있는지점으로 갈수 있는지 아닌지를\n      출력해야 한다.\n보물의 위치로 인도한다면 , \"Treasure Found\" 를 출력해야 한다.\n보물의 위치로 인도하지 않는다면 , \"Bad Map\" 을 출력한다.",
    "sample": "입력\n\n5 5\n3\n5 E\n2 N\n3 N\n\n출력\n\nTreasure Found"
  },
  {
    "id": 444,
    "title": "ride(open)",
    "time_limit": "1 초",
    "description": "알파벳으로 이루어진 두 개의 문자열을 입력으로 받아",
    "input": "",
    "output": "",
    "sample": "입력 \n\nCOMETQ\nHVNGAT\n\n출력\n\nGO\n\n입력\n\nABSTAR\nUSACO\n\n출력\n\nSTAY"
  },
  {
    "id": 445,
    "title": "bouncy",
    "time_limit": "1 초",
    "description": "12335 혹은 98881 와 같이 증가하면 증가상태로 혹은 감소하면 감소 상태인 수가 아닌 수를 bouncy 수 라고 하자.",
    "input": "입력으로 여러개의 테스트 데이터가 입력으로 주어진다. 입력의 끝은 0 이다.\n수의 최대 자리수는 9 자리 이하이고 , 무효의 0 은 입력되지 않는다.",
    "output": "각 테스트 데이터의 결과를 한 줄에 하나씩 출력한다.",
    "sample": "입력\n\n12333\n3333\n54392\n0\n\n출력\n\nno bouncy\nno bouncy\nbouncy"
  },
  {
    "id": 446,
    "title": "radix",
    "time_limit": "1 초",
    "description": "10 진수를 입력으로 받아 이 수를 해당 진법으로 변환하는 프로그램를 작성하시오.",
    "input": "첫 수는 10 진수 d , 두 번째 수는 바꿀 진법 r 이다. \n      d 는 10000 이하의 자연수이고 , r 은  2 이상 24 이하의 자연수이다.\n수는 0 , 1 , 2 , ... , 9 , A , B , C ....",
    "output": "공백없이 한줄에 출력한다.",
    "sample": "입력\n\n32 16 \n\n출력\n\n20"
  },
  {
    "id": 447,
    "title": "foo",
    "time_limit": "1 초",
    "description": "깨끗한 언어만들기 위원회는 FOO 란 단어가 산뜻한 단어가 아니라고 선언했다. 그래서 그들은 이 것을 OOF 로 바꾸기로 하였다.",
    "input": "여러개의 테스트 데이터가 입력으로 주어진다.\n각 테스트 데이터는 한 줄에 공백없이 최대 256 개의 대문자가 주어진다.\n입력의 끝은 EOF 이다.",
    "output": "FOO 를 OOF 로 바꾸어 출력한다. 즉 문자열에서 FOO 가 나타나면 안된다.",
    "sample": "입력\n\nFOOK\nFOOOOOPLE\n\n출력\n\nOOFK\nOOOOFOPLE"
  },
  {
    "id": 448,
    "title": "todec(open)",
    "time_limit": "1 초",
    "description": "0 , 1 로 이루어진 문자열을 입력으로 받아 이를 10 진수로 출력하는 프로그램을 작성하라.",
    "input": "공백없이 0,1로 이루어진 문자열이 입력으로 주어진다. 최대 30 자리를 넘지 않는다.",
    "output": "바뀐 10 진수를 출력한다.",
    "sample": "입력\n\n0011\n\n출력\n\n3\n\n입력\n\n1100\n\n출력\n\n12"
  },
  {
    "id": 449,
    "title": "n_to_k_system",
    "time_limit": "1 초",
    "description": "n진수를 입력받아 이 수를 k진수로 변환하는 프로그램을 작성하시오.",
    "input": "첫 줄에는 0, 1, 2, ... , 9, A, B, ...로 표현된 n진수가 들어온다.\n다음 줄에는 정수 n과 k가 들어온다.(n,k는 2 이상 32 이하의 자연수)\n데이터는 64bit 정수 범위를 벗어나지 않는다. 0이나 음수일 수도 있다.",
    "output": "공백 없이 한 줄에 k진수를 출력한다.",
    "sample": "입력\n\n10010\n2 10\n\n출력\n\n18\n\n입력\n\n17A8BEHP4\n28 17\n\n출력\n\n406GB9BB0C"
  },
  {
    "id": 450,
    "title": "keyboard(open)",
    "time_limit": "1 초",
    "description": "과학자들이 이상한 방법으로 작동하는 옛날 장치를 찾았다.",
    "input": "입력의\n첫 번째 줄은 정수 n 이 주어진다.(0 <= n <= 26).\n다음 n 줄에는 각 줄마다 대문자 알파벳과 두 개의 정수 a,b 가 주어진다.(0 <= a < b <= 1000).\n이 대문자는 눌려진 키를 의미한다.\na 는 이 키가 눌려진 첫 타입 스텝이고 , b 는 두 번째 타입 스텝이다. a , a + 1 , ... , b-1 동안 이 키의 LED 는 on 된다.\n각 테스트 경우에 이 문자는 유일하다고 가정한다.",
    "output": "테이프에 쓰여진 출력 문자열을 출력한다.",
    "sample": "입력\n\n2\nX 2 6\nY 4 9\n\n출력\n\nAABBAAA\n\n입력\n\n3\nA 1 5\nB 4 8\nC 9 10\n\n출력\n\nAAABAAAA"
  },
  {
    "id": 451,
    "title": "allinall(open)",
    "time_limit": "1 초",
    "description": "당신은 새로운 암호화 테크닉을 창안했다. 그 테크닉은 메시지 사이에 문자를 랜덤하게 집어넣는 방식으로 인코딩하여 스트링을 적절히 생성하는 방법이다.",
    "input": "입력은 몇 개의 테스트 케이스로 이루어진다. 각각은 두 개의 문자열 s와 t로 이루어지고(문자열은 알파벳+숫자로 이루어짐), 공백으로 구분된다. S와 t의 길이는 100000을 넘지 않는다.\n입력의 끝은 EOF 이다.",
    "output": "각 케이스에 대해 S가 t의 원본 문자열이면 “Yes”를 출력하고, 아니면”No”를 출력한다.",
    "sample": "입력\n\nsequence subsequence\nperson compression\nVERDI vivaVittorioEmanueleReDiItalia\ncaseDoesMatter CaseDoesMatter\n\n출력\n\nYes\nNo\nYes\nNo"
  },
  {
    "id": 452,
    "title": "ladder",
    "time_limit": "1 초",
    "description": "제비뽑기로 쓰는 방법 중에는 사다리타기가 있다. 사다리의 중간 부분을 가리고 , 각 자 윗 부분을 선택한 뒤 사다리를 따라 내려가면 사다리의 윗 부분과 아랫부분은 일대일로 만나게 된다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4 5\n1 \n2\n3\n1\n2\n\n출력\n\n1 D\n2 C\n3 A\n4 B"
  },
  {
    "id": 453,
    "title": "sumofline(open)",
    "time_limit": "1 초",
    "description": "첫 줄에는 줄 수가 주어지고 한 줄 당 합을 구하는 문제다.",
    "input": "첫줄에는 줄 수 n 이 주어진다.\n다음 n 줄에는 공백 하나를 사이에 두고 수가 주어진다.",
    "output": "각 줄당 수의 합을 한줄에 하나씩 출력한다.",
    "sample": "입력\n\n3 \n1 2 3 10\n100 99 1\n8\n\n출력\n\n16\n200\n8"
  },
  {
    "id": 454,
    "title": "lookandsay",
    "time_limit": "1 초",
    "description": "예를 들어 , 11123333 인 경우 311243 ... 3 번의 1 , 1 번의 2 , 4 번의 3 이므로 311243 을 출력한다. 즉",
    "input": "0 - 9 사이 숫자가 입력으로 최대 1000 자리까지 주어진다.",
    "output": "",
    "sample": "입력\n\n122344111\n\n출력\n\n1122132431\n\n입력\n\n1111111111\n\n출력\n\n101\n\n입력\n\n12345\n\n출력\n\n1112131415"
  },
  {
    "id": 455,
    "title": "clay",
    "time_limit": "1 초",
    "description": "미시즈 테리 선생님은 찰흙으로 수업을 하시는 선생님이다. 그녀의 과제 중의 하나는 한 덩이의 찰흙을 만들어 준 후 블록을 만들어 블록의 가로,세로,높이를 측정하는 것이다.",
    "input": "입력의 첫수는 학생수 n 이다.\n다음 n 줄에는 가로,세로,높이와 이름이 주어진다. 학생수는 2 이상 9 이하이고 , 이름은 최대 8 자리이고 선생님이 나누어주는 최대 점토양은 부피 250 을 넘지 않는다.\n반드시 한 학생이 뺏는 학생이고 다른 학생은 뺏기는 학생이다.",
    "output": "\"Bill : 나쁜 학생 , Will : 어리석은 학생\"  인 경우의 출력\nBill took clay from Will.",
    "sample": "Bill took clay from Will."
  },
  {
    "id": 456,
    "title": "gift_giver",
    "time_limit": "1 초",
    "description": "어떤 이가 자기가 가진 최초 금액으로 주어진 사람에게 균등하게 가장 많이 나누어 줄려고 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\ndave\nlaura\nowen\nvick\namr\ndave \n200 3\nlaura\nowen\nvick\nowen\n500 1\ndave\namr\n150 2\nvick\nowen\nlaura\n0 2\namr\nvick\nvick\n0 0\n\n출력\n\ndave 302\nlaura 66\nowen -359\nvick 141\namr -150\n참고\ndave 가 가진 최초 돈이 200 이고 , 3 명에게 최대로 균등하게 나누어 줄 수 있는 금액은 66 이고 남는 돈은 2\n  dave laura owen vick amr\n최초 금액 200\n최종 금액 2 66 66 66\nowen 이 최초 가진 돈이 500 이고 , dave 에게 주는 경우 가진 돈 500 을 모두 주는 경우이므로\n  dave laura owen vick amr\n최초 금액 200   500\n최종 금액 2\n+ 500 66 66 66\namr 이 150 으로 2 사람 owen 과 vick 에게 75 만큼 나누어주면 되므로 \n  dave laura owen vick amr\n최초 금액 200   500   150\n최종 금액 2\n+ 500 66 66\n+75 66\n+75\n...."
  },
  {
    "id": 457,
    "title": "hard_to_believe(open)",
    "time_limit": "1 초",
    "description": "",
    "input": "각 숫자는 최대 7 자리까지이고 , 입력사이에 공백은 없다.",
    "output": "True 혹은 False 를 출력한다.",
    "sample": "입력\n\n73+42=16\n\n출력\n\nTrue\n\n입력\n\n5+8=13\n\n출력\n\nFalse\n\n입력\n\n10+20=30\n\n출력\n\nTrue\n\n입력\n\n0001000+000200=00030\n\n출력\n\nTrue\n\n입력\n\n1234+5=1239\n\n출력\n\nFalse\n\n입력\n\n1+0=0\n\n출력\n\nFalse\n\n입력\n\n7000+8000=51\n\n출력\n\nTrue"
  },
  {
    "id": 458,
    "title": "unreliable_msg(open)",
    "time_limit": "1 초",
    "description": "태평양에 있는 자그만한 소왕국의 왕은 가끔 유치한 생각을 한다.",
    "input": "입력데이터는 두 줄로 주어진다.\n첫 줄은 메시지를 전달한 메신저의 순서이고 이는 1 이상 6 이하이고 같은 메신저가 두 번 이상 나타나지 않는다.\n다음 줄은 왕에게 전달된 메시지이다. 크기는 1 이상 25 이하 이다.",
    "output": "원 메시지를 한 줄에 출력한다.",
    "sample": "입력\n\nAJMP\naB23d\n\n출력\n\n32Bad\n\n입력\n\nCP\nrTurnAGundam1isdefferentf\n\n출력\n\nTurnAGundam0isdefferentfr"
  },
  {
    "id": 459,
    "title": "secret",
    "time_limit": "1 초",
    "description": "홍진이는 지현이에게 문자 A, B, C, D, E, F, G, H 로 쓰여진 편지를 날마다 보내는데, 컴퓨터로 보내는 비밀편지로, 한 문자마다 0 또는 1인 숫자 여섯 개를 사용하여 보낸다. 둘 사이의 약속은 다음과 같다.",
    "input": "",
    "output": "",
    "sample": "A    000000\n    B    001111\n    C    010011\n    D    011100\n    E    100110\n    F    101001\n    G    110101\n    H    111010"
  },
  {
    "id": 460,
    "title": "to_and_fro",
    "time_limit": "1 초",
    "description": "모와 래리는 문서를 암호화하는 방법을 생각했다. 그들은 처음 컬럼의 수를 비밀리에 결정 한 후 컬럼을 따라 메시지를 쓰내려 간다. 사각형을 만들기 위해 임의의 문자를 채운다.",
    "input": "입력의 첫 줄에는 컬럼의 수를 나타내는 정수 가 주어진다. 2 이상 20 이하.\n다음 라인은 소문자 메시지가 주어진다. 최대 200 개.",
    "output": "공백없이 원문을 한 줄에 출력한다.",
    "sample": "t o i o y\nh p k n n\ne l e a i\nr a h s g\ne c o n h\ns e m o t\nn l e w x"
  },
  {
    "id": 461,
    "title": "crypt",
    "time_limit": "1 초",
    "description": "소들은 요즘 신이난다. 왜냐하면 최근 메시지를 암호화(encryption)에 대해서 배웠기 때문이다. 그들은 다른 농장의 소들과 미팅을 할 때 은밀한 메시지를 사용할 경우 이 방법을 사용할 수 있을 것이라고 생각했다. 소들이 사용하는 암호화 방법은 복잡한 DES 혹은 BlowFish 와 같은 좋은 방법이 아니고 단순히 치환 하는 암호화 기법이다.",
    "input": "첫 줄에는 복호화 키로 26 개의 소문자가 주어지고  , 다음 줄에는 암호화 된 문자가 최대 80 문자로 입력된다.",
    "output": "원문(plain text)을 출력한다.",
    "sample": "입력\n\neydbkmiqugjxlvtzpnwohracsf\nKifq oua zarxa suar bti yaagrj fa xtfgrj\n\n출력\n\nJump the fence when you seeing me coming"
  },
  {
    "id": 462,
    "title": "pstring",
    "time_limit": "3 초",
    "description": "문자열이 주어질 때 최소로 반복되는 주기의 반복 횟수를 구하는 것이 문제이다.",
    "input": "문자열의 크기는 최대 1000000 이다.",
    "output": "최소 주기의 반복횟수를 출력한다.",
    "sample": "입력\n\nabcd\n\n출력\n\n1\n\n입력\n\naaaa\n\n출력\n\n4\n\n입력\n\nababab\n\n출력\n\n3"
  },
  {
    "id": 463,
    "title": "fa",
    "time_limit": "1 초",
    "description": "한 줄에 일련의 소문자가 주어진다. 이 문자들의 빈도수를 출력하는 문제이다.",
    "input": "입력되는 모든 문자는 소문자로 공백없이 입력된다.\n      소문자의 개수는 최대 100 개까지 이다.",
    "output": "빈도 수를 입출력 예의 형식으로 출력한다.",
    "sample": "입력\n\naabzza\n\n출력\n\na:3\nb:1\nc:0\nd:0\n.\n.\n.\nz:2"
  },
  {
    "id": 464,
    "title": "ip_address",
    "time_limit": "1 초",
    "description": "32 bit ( 이진수 32 자리 ) ip 주소를 입력으로 받아 8 자리씩 끊어 10 진수로 바꾸어 출력하는 문제이다.",
    "input": "공백없이 2 진수 32 자리숫자가 입력으로 주어진다.",
    "output": "8 자리씩 끊어 10 진수.10진수.10진수.10진수 형태로 출력한다.",
    "sample": "입력\n\n00000000000000000000000000000000 \n\n출력\n\n0.0.0.0\n\n입력\n\n00000011100000001111111111111111 \n\n출력\n\n3.128.255.255\n\n입력\n\n11001011100001001110010110000000 \n\n출력\n\n203.132.229.128\n\n입력\n\n01010000000100000000000000000001 \n\n출력\n\n80.16.0.1"
  },
  {
    "id": 465,
    "title": "histogram",
    "time_limit": "1 초",
    "description": "네 줄(한 줄당 72 자이내)을 입력으로 받아 각 문자의 빈도수를 구하여 출력하는 문자 히스토그램을 출력하는 문제이다.",
    "input": "각 줄은 72 자이내의 문자(대문자,특수문자)로 이루어진다.",
    "output": "불필요한 공백과 빈줄을 출력해서는 안된다.",
    "sample": "입력\n\nTHE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.\nTHIS IS AN EXAMPLE TO TEST FOR YOUR\nHISTOGRAM PROGRAM.\nHELLO!\n\n출력\n                            *\n                            *\n        *                   *\n        *                   *     *   *\n        *                   *     *   *\n*       *     *             *     *   *\n*       *     * *     * *   *     * * *\n*       *   * * *     * *   * *   * * * *\n*     * * * * * *     * * * * *   * * * *     * *\n* * * * * * * * * * * * * * * * * * * * * * * * * *\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
  },
  {
    "id": 466,
    "title": "reverse(open)",
    "time_limit": "1 초",
    "description": "공백을 포함한 문자열을 입력으로 받아 공백을 없앤 후 이 문자열을 뒤집어 출력하는 프로그램을 작성하시오.",
    "input": "1000 개 이하의 문자열이 한 줄에 입력된다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\na   bc  d\n\n출력\n\ndcba"
  },
  {
    "id": 467,
    "title": "esrever(open)",
    "time_limit": "1 초",
    "description": "공백을 기준으로 단어 별 역순으로 출력하는 프로그램을 작성하시오.",
    "input": "입력되는 수의 첫 수는 공백이 아니고 각 단어 사이에는 공백이 하나씩만 존재 한다.\n한 줄에 최대 80 자까지 입력될 수 있고 , 단어는 하나 이상이다.",
    "output": "단어별 역순으로 출력한 값을 공백 하나를 사이에 두고 출력한다.",
    "sample": "입력\n\nI like spring.\n\n출력\n\nI ekil .gnirps"
  },
  {
    "id": 468,
    "title": "number_guessing",
    "time_limit": "1 초",
    "description": "2 인용 게임이다. X 가 추측한 숫자를 Y 가 맞추는 게임이다.",
    "input": "각 자리수가 다른 4 자리수가 입력으로 주어진다.",
    "output": "*A*B 형식으로 공백없이 출력한다.",
    "sample": "입력\n\n5204 4902\n\n출력\n\n1A2B\n\n입력\n\n0123 3210\n\n출력\n\n0A4B"
  },
  {
    "id": 469,
    "title": "mine",
    "time_limit": "1 초",
    "description": "",
    "input": "n 이 주어지고 , 다음  n*n 의 지도 정보 , 다음 n*n 의 클릭 정보가 주어진다.",
    "output": "숫자는 x 위치와 인접한 지뢰의 개수이다.",
    "sample": "입력\n\n3\n..*\n*..\n.*.\nxx.\n.x.\nx..\n\n출력\n\n12.\n.3.\n2..\n\n입력\n\n3\n..*\n*..\n.*.\nxxx\n.x.\nx..\n\n출력\n\n12*\n*3.\n2*."
  },
  {
    "id": 470,
    "title": "birth(open)",
    "time_limit": "1 초",
    "description": "암소 베시는 그가 태어난 날이 무슨 요일인지를 가르쳐 달라고 친구에게 부탁했다. 태어난 날이 2003 May 25 일 인지는 알지만 이 날이 무슨 요일인지를 모른다. 이를 도와주어야 한다.",
    "input": "입력의 첫 줄은 년 , 달(1..12) , 일 이다.",
    "output": "입력으로 주어진 날의 요일을 출력한다.(from the lower-case list: monday, tuesday, wednesday, thursday, friday, saturday, sunday).",
    "sample": "입력\n\n2003 5 25\n\n출력\n\nsunday"
  },
  {
    "id": 471,
    "title": "fractodec",
    "time_limit": "1 초",
    "description": "분수를 받아 소수로 변환하는 프로그램을 작성하는게 문제이다. 소수부분이 반복된다면 반복되는 부분을 괄호로 사용하여 묶는다.",
    "input": "분자 , 분모 두개의 정수가 입력된다. 두 수는 1 보다 크거나 같고 100000 보다 작거나 같다.",
    "output": "한 줄에 76 자리가 넘는다면 다음 줄에 출력한다.",
    "sample": "입력 \n\n45 56\n\n출력\n\n0.803(571428)"
  },
  {
    "id": 472,
    "title": "isbn",
    "time_limit": "1 초",
    "description": "농부 존의 소들은 독서를 좋아한다. 소들이 지적인 내용의 책을 읽을 때 더 많은 우유를 생산한다는 것을 알았다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n15688?111X\n\n출력\n\n1"
  },
  {
    "id": 473,
    "title": "surface",
    "time_limit": "1 초",
    "description": "[문제 요약] 입력으로",
    "input": "행의 수  n 이 입력으로 주어지고 , 다음 n 줄에는 25 열의 데이터(X 와 공백으로 이루어짐)\n가 주어진다.",
    "output": "공백의 수를 출력한다.",
    "sample": "4  행  ... 각 25 열 \nXXXX                XXXXX\nXXX               XXXXXXX\nXXXXX                XXXX\nXX                 XXXXXX"
  },
  {
    "id": 474,
    "title": "namenum",
    "time_limit": "1 초",
    "description": "목장에서는 소들에게 시리얼 넘버를 붙이는 것이 관례화 되어있다.",
    "input": "시리얼 넘버를 입력으로 받는다. 이 수는 1 자리 에서 12 자리 수이다.",
    "output": "가능한 경우를 알파벳 오름 차순 순으로  출력하고 , 존재하지 않는 경우는 NONE 을 출력한다.",
    "sample": "2: A,B,C     5: J,K,L    8: T,U,V\n          3: D,E,F     6: M,N,O    9: W,X,Y\n          4: G,H,I     7: P,R,S"
  },
  {
    "id": 475,
    "title": "contest",
    "time_limit": "1 초",
    "description": "각 팀의 점수는 두 개의 요소로 결정된다.",
    "input": "문제는 4 문제이고 감점을 고려한 후에도 답이 두가지 인 경우는 없다.\n첫 번째 줄은 팀 수( 10 팀 이하 )이고 다음 줄 부터는 첫번째는 팀 이름이고 문제가 4 문제이므로 8 개의 정수가 입력으로 주어진다. 각 문제당 첫 수는 제출 횟수이고 두번 째수는 경과시간이다. 경과시간이 0 이면 이 문제를 못 푼 경우이다.",
    "output": "승자의 이름과 푼 문제 수와 감점을 출력한다.",
    "sample": "입력\n\n4\nStars 2 20 5 0 4 190 3 220\nRockets 5 180 1 0 2 0 3 100\nPenguins 1 15 3 120 1 300 4 0\nMarsupials 9 0 3 100 2 220 3 80\n\n출력\n\nPenguins 3 475"
  },
  {
    "id": 476,
    "title": "numeral_system(open)",
    "time_limit": "1 초",
    "description": "하치오치 교수가 새로운 수 시스템을 개발했다. 이 는 4 개의 소문자 m,c,x,i 와 8 개의 숫자 2,3,4,5,6,7,8,9 로 수를 표현한다. 0 과 1 은 사용하지 않는다.",
    "input": "입력의 첫 수는 줄 수 n( <= 500) 이다. 다음 n 줄에는 MCXI 문자열이 주어진다.\n합은 9999 을 넘지 않는 것은 보장이 된다.",
    "output": "각 입력에 대해서 한 줄에 대응되는 MCXI 문자열을 출력한다.",
    "sample": "입력\n\n10\nxi x9i\ni 9i\nc2x2i 4c8x8i\nm2ci 4m7c9x8i\n9c9x9i i\ni 9m9c9x8i\nm i\ni m\nm9i i\n9m8c7xi c2x8i\n\n출력\n\n3x\nx\n6cx\n5m9c9x9i\nm\n9m9c9x9i\nmi\nmi\nmx\n9m9c9x9i"
  },
  {
    "id": 477,
    "title": "mass",
    "time_limit": "1 초",
    "description": "[문제 요약] 분자식을 입력으로 받아 이 분자식의 질량을 구하는 문제.",
    "input": "The chemical symbol is given by a capital letter and the length of the string is greater than\n0 and less than 80. The quantity number n which is represented after the chemical symbol would be omitted\nwhen the number is 1 ( 2 <= n <= 99 ).",
    "output": "The line should contain the molar mass of the given molecular formula.",
    "sample": "입력\n\nC\n\n출력\n\n12.010\n\n입력\n\nC6H5OH\n\n출력\n\n94.108\n\n입력\n\nNH2CH2COOH\n\n출력\n\n75.070\n\n입력\n\nC12H22O11\n\n출력\n\n342.296"
  },
  {
    "id": 478,
    "title": "similar",
    "time_limit": "1 초",
    "description": "영문 알파벳 대문자로 이루어진 두 단어가 다음의 두 가지 조건을 만족하면 같은 구성을 갖는다고 말한다.",
    "input": "입력 파일의 첫째 줄에는 단어의 개수가 주어지고 둘째 줄부터는 한 줄에 하나씩 단어가 주어진다. 모든 단어는 영문 알파벳 대문자로 이루어져 있다. 단어의 개수는 100개 이하이며, 각 단어의 길이는 10이하이다.",
    "output": "첫째 줄에 입력으로 주어진 첫 번째 단어와 비슷한 단어가 몇 개인지 출력한다.",
    "sample": "입력\n\n4\nDOG\nGOD\nGOOD\nDOLL\n\n출력\n\n2"
  },
  {
    "id": 479,
    "title": "equations",
    "time_limit": "1 초",
    "description": "x와 y에 대한 두 방정식이 주어질 때, x와 y를 구하여라.",
    "input": "첫 번째 줄에는 풀 연립방정식의 수 N 이 주어지고, \n2 번째 줄부터는 2개씩 한 줄에 방정식이 하나씩 주어진다. \n비어있는 줄은 각 경우(Case)를 구분한다. \n각 줄에는 두개 또는 여러 개의 항과 덧셈, 뺄셈, 등호들로 이루어진다. \n각 항은 상수항이거나, 앞에 음수 기호 또는 정수 계수가 붙어있는 1차 이상의 항으로 이루어진다. \n그리고 각 식에는 등호가 하나만 들어간다. \n각 항 사이에는 항상 공백이 들어가며, 항이 없을시 공백이 없다.",
    "output": "출력할 때는 가장 간단한 유리수 x 값과 y 값을 두 줄에 연달아 출력한다. \n만약 x 값 또는 y 값이 없거나 구할 수 없을 때에는, \"don't know\"를 출력한다. \n각 경우 사이에는 빈 줄을 출력하라.",
    "sample": "입력\n\n7\n2x + 3y = x\n5 = x + y + 3\n\n2x + 3y = 0\n10x = -15y\n\n2x + 3y = 0\n10x = -15y + 1\n\nx = 1\n3x = 6y\n\n2x = 3x + -x + y\nx + y = x + y\n\n2x = -3\n-2y = 3\n\n1 = 2\nx = 3\n\n출력\n\n3\n-1\n\ndon't know\ndon't know\n\ndon't know\ndon't know\n\n1\n1/2\n\ndon't know\n0\n\n-3/2\n-3/2\n\ndon't know\ndon't know"
  },
  {
    "id": 480,
    "title": "rdigit",
    "time_limit": "1 초",
    "description": "로마 숫자는 13 세기 ( 이 후에 지금의 수 체제으로 바꿨다)에 유럽 전역에서 광범위하게 사용되어진 고대 수 시스템이다. 로마 숫자의 수 체계는 오늘날 시계 , 빌딩의 초석 , 슈퍼 볼 등등에서 자취가 남아 있다.",
    "input": "입력은 다수의 테스트 데이터가 입력으로 주어진다.\n\n각 테스트 데이터 별 양의 정수 n 이 주어진다. n 은 더할 숫자들의 개수이다.\n다음으로 n 개의 숫자가 주어진다. 여러 줄에 걸쳐서 입력될 수 있다. 공백으로 구분되어진 유효한 로마 숫자가 주어진다.\nn 이 0 이면 입력의 끝이다. 모든 합은 5000 보다 작다.",
    "output": "테스트 케이스 마다 케이스 번호와 합을 출력한다. 둘 모두 로마 숫자로 표현해야 한다.\n자세한 사항은 출력 예를 참조 한다.",
    "sample": "입력\n\n2\nXII MDL\n4\nI I I\nI\n0\n\n출력\n\nCase I: MDLXII\nCase II: IV"
  },
  {
    "id": 481,
    "title": "fibos(open)",
    "time_limit": "1 초",
    "description": "수학 파트에서 피보나치 수열은 가장 유명한 것 중이 하나이다.",
    "input": "첫 수 m 은 최대 확장할 수이다.\n      다음 두 줄은 최초로 주어지는 두 개항이다.",
    "output": "첫 항부터 m 항까지 m 줄에 공백없이 출력한다. 출력되는 문자열은 10000 자리 이하이다.\nm 은 20 이하이다.",
    "sample": "입력\n\n6\na\nba\n\n출력\n\na\nba\naba\nbaaba\nababaaba\nbaabaababaaba\n\n입력\n\n7\nspock\nkirk\n\n출력\n\nspock\nkirk\nspockkirk\nkirkspockkirk\nspockkirkkirkspockkirk\nkirkspockkirkspockkirkkirkspockkirk\nspockkirkkirkspockkirkkirkspockkirkspockkirkkirkspockkirk"
  },
  {
    "id": 482,
    "title": "scramble(open)",
    "time_limit": "1 초",
    "description": "단어와 숫자가 뒤 섞인 일련의 리스트를 입력으로 주어진다. 단어들은 알파벳 순서로 숫자들은 크기 순으로 정렬하는 것이 문제이다.",
    "input": "입력은 한 줄에 하나의 입력(100 문자이하)이 주어진다.\n리스트의 각 원소는 콤마 와 공백으로 구분된다.\n리스트의 끝은 . 이다.\n입력의 끝은 줄 처음 . 이다.",
    "output": "각 줄당 스크램블 소트한 결과를 콤마와 공백으로 구분해서 출력 후 마지막에 . 를 출력한다.",
    "sample": "입력\n\n0.\nbanana, strawberry, OrAnGe.\nBanana, StRaWbErRy, orange.\n10, 8, 6, 4, 2, 0.\nx, 30, -20, z, 1000, 1, Y.\n50, 7, kitten, puppy, 2, orangutan, 52, -100, bird, worm, 7, beetle.\n.\n\n출력\n\n0.\nbanana, OrAnGe, strawberry.\nBanana, orange, StRaWbErRy.\n0, 2, 4, 6, 8, 10.\nx, -20, 1, Y, 30, 1000, z.\n-100, 2, beetle, bird, 7, kitten, 7, 50, orangutan, puppy, 52, worm."
  },
  {
    "id": 483,
    "title": "word",
    "time_limit": "1 초",
    "description": "암호화 하는 방법이 종종 암호학 이나 자료 저장 분야에서 사용되어진다.",
    "input": "입력은 소문자로 한 줄에 하나씩 주어진다. 각 단어의 크기는 1 이상 5 이하이다.\n입력의 끝은 EOF 이다.",
    "output": "유효하지 않는 단어이면 0 을 아니면 할당된 번호를 출력한다.",
    "sample": "abc aep gwz"
  },
  {
    "id": 484,
    "title": "calfflac",
    "time_limit": "1 초",
    "description": "문장 속에 포함된 가장 큰 palindrome 을 찾는 문제이다.",
    "input": "입력은 20,000 문자를 넘지 않는다. 여러 줄에 걸쳐서 입력될 수도 있다.",
    "output": "출력은 첫 째줄에는 palindrome 을 이루는 문자의 크기를 출력하고 다음 줄에는 \npalindrome 을 이루는 특수문자나 숫자등을 제거하지 않은 원 문장을 출력한다.",
    "sample": "입력\n\nConfucius say: Madam, I'm Adam.\n\n출력\n\n11\nMadam, I'm Adam"
  },
  {
    "id": 485,
    "title": "moslea(open)",
    "time_limit": "1 초",
    "description": "문자열 S에서 가장 많이 나타나는 문자 개수를 most 라고 하고 가장 적게 나타나는 문 자 개수를 least 라고 하자.",
    "input": "첫줄에는 정수 N, 그 다음 줄에는 소문자열 S가 주어진다. (S의 길이는 100을 넘지 않는다)",
    "output": "가능한 최소 R(S)를 출력.",
    "sample": "입력\n1\naabccc\n\n출력\n1"
  },
  {
    "id": 486,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 487,
    "title": "hashing(open)",
    "time_limit": "1 초",
    "description": "Folding 은 해싱(hashing) 기법에서 키 값을 가지고 주소를 결정하는 방법중의 한가지 이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n12$34567$890\n\n출력\n\n34686\n\n입력\n\n513$27658$13\n\n출력\n\n28004"
  },
  {
    "id": 488,
    "title": "suffix_array(open)",
    "time_limit": "1 초",
    "description": "문자열 dovelet 이 주어질 때",
    "input": "입력은 2000 이하의 문자열이 주어진다.",
    "output": "정렬한 접미사 배열을 출력한다. 문자열과 수 사이에는 한 칸의 공백을 둔다.",
    "sample": ""
  },
  {
    "id": 489,
    "title": "dovelet",
    "time_limit": "1 초",
    "description": "더블릿에서 열심히 문제를 풀던 광민은, 문득 더블릿을 홍보하고 싶은 생각이 들었다. 더블릿을 홍보하기 위해 전광판에 DOVELET 이라는 글씨를 쓰려는데, 글씨가 너무 작다는 생각이 들었다.",
    "input": "확대할 배수 N이 주어진다. (1<=n<=200)",
    "output": "확대된 문자를 출력한다.\n단, 필요없는 공백(특히 줄 끝 공백)은 출력하지 않는다.",
    "sample": "입력\n\n1\n\n출력\n\n\n\n입력\n\n3\n\n출력"
  },
  {
    "id": 490,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 491,
    "title": "strcmp(open,special judge)",
    "time_limit": "1 초",
    "description": "포인터 연습 문제이다.",
    "input": "두 개의 문자열이 한 줄에 하나씩 공백없이 주어진다. 각 문자열의 크기는 500 이하이다.",
    "output": "얌수 , 음수 ,  0 중 하나를 출력한다.",
    "sample": "입력\n\nabc\nad\n\n출력\n\n-3\n\n입력\n\nabc\nabc\n\n출력\n\n0\n\n\n입력\n\nabc\nabcd\n\n출력\n\n-5"
  },
  {
    "id": 492,
    "title": "strchr(open)",
    "time_limit": "1 초",
    "description": "포인터 연습 문제이다.",
    "input": "첫 줄에 공백을 포함한 문자열이 한 줄에 주어집니다. 문자열의 크기는 1000 이하.\n다음 줄에 찾고자 하는 문자가 주어집니다.",
    "output": "찾고자 하는 문자가 존재하는 최초의 위치를 출력합니다. 문자열의 시작 위치는 0 으로 간주하고\n\n존재하지 않는 문자이면 'Not found' 를 출력",
    "sample": "실주소\n\n   't'   100\n   'u'   101\n   'r'   102\n   'b'   103\n   'o'   104\n   '\\0'  105"
  },
  {
    "id": 493,
    "title": "delspace(open)",
    "time_limit": "1 초",
    "description": "포인터 연습 문제이다.",
    "input": "한 줄에 1000 개 이하의 문자열이 공백을 포함해서 주어진다.",
    "output": "공백을 제거한 문자열을 출력한다.",
    "sample": "입력\n\ntur   b o\n\n출력\n\nturbo"
  },
  {
    "id": 494,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 495,
    "title": "match",
    "time_limit": "1 초",
    "description": "수식이 주어질 때 같은 짝의 괄호의 위치를 찾는 문제이다.",
    "input": "입력은 공백없이 입력된다. 입력되는 문자는 소문자,소괄호,(+,-,*,/)이다.\n문자열의 길이는 최대 50 까지이다.",
    "output": "왼쪽에서 오른쪽을 가면서 먼저 짝이 맞는 (여는 괄호 위치, 닫는 괄호 위치) 순으로  출력하고,\n짝이 맞지 않는 수식은 not match 를 출력한다.",
    "sample": "입력\n\n(a*(b+c)+d)\n\n출력\n\n3 7\n0 10"
  },
  {
    "id": 496,
    "title": "dish(open)",
    "time_limit": "1 초",
    "description": "접시가 a,b,c,d 순으로 한쪽이 막혀 있는 세척기에 들어간다고 할 때, b a c d 순으로 꺼내기 위해서는 push,push,pop,pop,push,pop,push,pop 하면 됩니다. d,a,b,c 순으로는 꺼낼수 없습니다.",
    "input": "접시수는 30 개를 넘지 않고 차례대로 a,b,c,.... 로 소문자 알파벳으로 주어진다.",
    "output": "가능한 경우 push , pop 의 순서를 아니면 impossible 을 출력한다.",
    "sample": "입력\n\nbacd\n\n출력\n\npush\npush\npop\npop\npush\npop\npush\npop\n\n입력 \n\ndabc\n\n출력\n\nimpossible"
  },
  {
    "id": 497,
    "title": "rails",
    "time_limit": "1 초",
    "description": "차량이 따로 움직일 수 있는 기차가 레일위로 들어갔다 나오는 구조.",
    "input": "입력의 첫 수는 객차 수 n (최대 1000 ) 이고 , 각 줄에는 1 ~ n 까지의 수 n 개 주어진다. 이 수는 출력되는 객차 번호이다.",
    "output": "가능하면 Yes , 아니면 No 를 출력한다.",
    "sample": "입력\n\n3\n1 2 3\n3 2 1\n3 1 2\n1 3 2\n0\n\n출력\n\nYes\nYes\nNo\nYes"
  },
  {
    "id": 498,
    "title": "catalan",
    "time_limit": "1 초",
    "description": "1부터 n 까지의 정수가 차례로 스택에 push 된다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4\n2 1 4 3\n\n출력\n\nYES"
  },
  {
    "id": 499,
    "title": "bhd",
    "time_limit": "2 초",
    "description": "소들은 자기 앞 쪽의 소들만을 볼수 있는 경우 각 소가 다른 소들의 머리 정수리를 볼 수 있는 소(cow) 수의 총합을 구하는 문제이다.",
    "input": "소의 수 N(1 ≤ N ≤ 80,000 ) 이 주어지고 , N 개의 키 hi  (1 ≤ hi ≤ 1,000,000,000 )  가 주어진다.",
    "output": "가능한 소들의 총 합을 출력한다.",
    "sample": "입력\n\n6\n10\n3\n7\n4\n12\n2\n\n출력\n\n5"
  },
  {
    "id": 500,
    "title": "paren",
    "time_limit": "1 초",
    "description": "4개의 기호 ‘(’, ‘)’, ‘[’, ‘]’를 이용해서 만들어지는 괄호열 중에서 올바른 괄호열이란 다음과 같이 정의된다.",
    "input": "첫 째 줄에 괄호열을 나타내는 문자열(스트링)이 주어진다. 단 그 길이는 1 이상, 30 이하이다.",
    "output": "첫째 줄에 그 괄호열의 값을 나타내는 정수를 출력한다.\n만일 입력이 올바르지 못한 괄호열이면 반드시 0을 출력해야 한다.",
    "sample": "입력\n\n(()[[]])([])\n\n출력\n\n28\n\n입력\n\n[][]((])\n\n출력\n\n0"
  },
  {
    "id": 501,
    "title": "tw",
    "time_limit": "1 초",
    "description": "KOI 통신연구소는 레이저를 이용한 새로운 비밀 통신 시스템 개발을 위한 실험을 하고 있다.",
    "input": "입력의\n첫째 줄에 탑의 수를 나타내는 정수 N 이 주어진다. N 은 1 이상 500,000 이하이다.\n둘째 줄에는 N개의 탑들의 높이가 직선상에 놓인 순서대로 하나의 빈칸을 사이에 두고 주어진다. 탑들의 높이는 1 이상 100,000,000 이하의 정수이다.",
    "output": "첫째 줄에 주어진 탑들의 순서대로 각각의 탑들에서 발사한 레이저 신호를 수신한 탑들의 번호를 하나의 빈칸을 사이에 두고 출력한다.\n만약 레이저 신호를 수신하는 탑이 존재하지 않으면 0 을 출력한다.",
    "sample": "입력\n\n5\n6 9 5 7 4\n\n출력\n\n0 0 2 2 4"
  },
  {
    "id": 502,
    "title": "rectangle",
    "time_limit": "1 초",
    "description": "히스토그램은 통계치를 연속적인 사각형 형태로 나타내어 보기 좋게 만든 다각형이다. 모든 사각형의 폭은 동일하고 높이는 다르다.",
    "input": "입력의 첫 수는 사각형의 개수 n 이고 다음 n 개의 정수는 높이 h1 , h2 , ... ,hn 을 나타낸다.\n      1<=n<=100000 , 0<=hi<=1000000000 이다.",
    "output": "최대 넓이를 출력한다.",
    "sample": "입력\n\n7 2 1 4 5 1 3 3\n\n출력\n\n8\n\n입력\n\n4 1000 1000 1000 1000\n\n출력\n\n4000"
  },
  {
    "id": 503,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 504,
    "title": "prefix_calc",
    "time_limit": "1 초",
    "description": "전위표현식이 입력으로 주어질 때 이 를 계산하는 프로그램을 작성하는 것이 문제이다.",
    "input": "공백 없이 한 줄에 하나의 데이터가 입력으로 주어진다.",
    "output": "연산한 결과를 출력한다.",
    "sample": "입력\n\n+42\n\n출력\n\n6"
  },
  {
    "id": 505,
    "title": "calc",
    "time_limit": "1 초",
    "description": "한 자리의 정수들과 사칙연산 및 괄호로 이루어진 수식을 입력받아 그 수 (+, -, *, /) 식을 후위 표기법으로 바꾼 뒤 계산하는 프로그램을 작성하시오.",
    "input": "첫째 줄에 한 자리의 정수와 사칙 연산자(+,-,*,/),\n괄호로 이루어진 수식이 입력된다.  수식은 사이에 공백은 없다.",
    "output": "첫째 줄에 수식을 계산하여 나온 결과를 출력한다\n만일 수식 계산 도중 0 으로 나누는 일이 발생할 경우는 대신‘Divide by zero’ 라고 출력한다.",
    "sample": "입력\n\n(3+5)*(5-2)\n\n출력\n\n24"
  },
  {
    "id": 506,
    "title": "calc2",
    "time_limit": "1 초",
    "description": "한 자리 수 이상의 자연수와 사칙연산으로 이루어진 식을 계산하여 결과를 출력하는 프로그램을 작성하라. 단, 나눗셈은 몫만 계산하며, 0 으로 나눠졌을 경우 \"Divide by zero\"를 출력한다.",
    "input": "계산해야 할 식이 한 줄에 입력된다.",
    "output": "결과값을 출력한다.",
    "sample": "입력\n\n15*(6/2) \n\n출력\n\n45"
  },
  {
    "id": 507,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 508,
    "title": "catch_cow",
    "time_limit": "2 초",
    "description": "농부 존의 소 중에서 한 마리가 집이 싫어 도망갔다. 그는 이 소를 즉시 잡아들이고 싶어한다.",
    "input": "N , K 가 입력으로 주어진다.",
    "output": "소들을 잡는데 걸리는 최소 시간(분)을 출력한다.",
    "sample": "입력\n\n5 17\n\n출력\n\n4"
  },
  {
    "id": 509,
    "title": "prime_path",
    "time_limit": "1 초",
    "description": "4 자리 수 두 개가 입력으로 주어진다. 두 수는 모두 소수(prime number)이다.",
    "input": "4 자리 도착수 , 목적수가 주어진다.",
    "output": "최단거리를 출력한다.",
    "sample": "입력\n\n1033 8179\n\n출력\n\n6\n\n입력\n\n1373 8017\n\n출력\n\n7\n\n입력\n\n1033 1033\n\n출력\n\n0"
  },
  {
    "id": 510,
    "title": "dam(open)",
    "time_limit": "1 초",
    "description": "어느 마을 안에는 큰 호수가 있고, 그것을 막는 댐이 있었다. 그런데 어느날 그 댐이 무너져내려 호수에 있는 물이 마을을 모두 뒤덮으려한다. 호수에 있는 물은 다음 1시간에 한 블럭으로 이동하며, 물의 양은 무한하다 가정하자. 물은 상 하 좌 우로 퍼져나가며 마을을 뒤덮는다.",
    "input": "첫 줄에는 배열의 크기인 T(1 ≤ T ≤100)가 주어지고\n다음 줄부터 배열의 값이 주어진다. 0은 텅 빈 길, 1은 건물이다. (물은 건물을 뒤덮지 못한다고 가정한다.)\n그리고 그 다음 줄에는 호수의 좌표 x, y가 주어지고,\n다음 줄에는 댐이 지어지는 시간인 K가 주어진다.",
    "output": "지어야 하는 댐의 숫자를 출력한다. 만약, 마을이 전부 잠길 때까지 댐을 지을 수 없거나 건물에 둘러쌓여 물이 더이상 진행을 못할 경우엔 \"OH, MY GOD\"을 출력한다. (좋은 의미로든, 나쁜 의미로든....)",
    "sample": "입력\n\n5\n0 1 0 0 1\n0 0 0 0 0\n1 1 1 0 1\n0 0 0 0 0\n1 0 1 0 1\n1 1\n5\n\n출력\n\n3\n\n입력\n\n5\n0 0 1 0 0\n0 0 0 0 0\n1 1 1 0 0\n0 0 1 1 0\n0 0 0 0 0\n5 2\n3\n\n출력\n\n2"
  },
  {
    "id": 511,
    "title": "ccc_taller",
    "time_limit": "1 초",
    "description": "몇 분 뒤 수업이 시작합니다. 그런데 갑자기 반 친구들의 키를 비교하기로 했습니다. 교실에 정확히 키를 잴 수 있는 방법은 없는 관계로 두 명을 나란히 등을 맞대고 서 누가 더 큰지를 재는 고전적인 방법으로 키를 재기로 했습니다. 다행이도 반 친구들 중 키가 같은 사람은 한 명도 없고 키를 잴 때 실수를 한 적이 없습니다.",
    "input": "첫 줄에 N과 M이 공백으로 구분되어 입력됩니다. N은 이 반 친구들의 수 (1 ≤ N ≤ 1000000), M은 비교 횟수 (1 ≤ M ≤ 1000000)입니다.\n이후 M 줄에 x, y (1 ≤ x,y ≤ N) 가 공백으로 구분되어 입력됩니다. x번 학생이 y번 학생보다 더 키가 크다는 뜻입니다.\n마지막 줄에 p, q (1 ≤ p,q ≤ N) 가 공백으로 구분되어 입력됩니다. p번 학생이 q번학생보다 더 큰지 작은지를 비교해야합니다.",
    "output": "첫 줄에 다음 중 하나를 출력하세요.\nyes (p가 q보다 더 큰 경우)\nno (p가 q보다 더 작은 경우)\nunknown (알 수 없는 경우)",
    "sample": "입력\n\n10 3\n8 4\n3 8\n4 2\n3 2\n\n출력\n\nyes\n\n입력\n\n10 3\n3 8\n2 8\n3 4\n3 2\n\n출력\n\nunknown"
  },
  {
    "id": 512,
    "title": "horse_knight",
    "time_limit": "1 초",
    "description": "장기에서 마(말)와 체스에서 나이트는 상하좌우 한 칸 앞으로 전진한 후에 대각선 방향으로 한 칸 전진한 곳으로만 이동할 수 있다.",
    "input": "첫 줄에는 정수 n과 k가 주어진다. n은 1000이하의 자연수이고, k는 900000이하의 자연수이다.\n다음 n개의 줄에는 체스판의 정보가 주어진다. 각 줄에는 n개의 0 또는 1인 정수가 주어진다. 1은 장애물이 있는 위치를 나타낸다.\n다음으로 나이트(마)가 출발하는 위치 x, y가 주어진다. x는 행, y는 열 번호이다. 각 정수는 1이상 n이하이다.",
    "output": "나이트가 마보다 빨리 갈 수 있는 칸의 개수를 첫째 줄에 출력한다.",
    "sample": "입력\n\n4 2\n1 0 0 0\n0 0 0 0\n0 0 1 0\n0 0 0 0\n2 3\n\n출력\n\n9"
  },
  {
    "id": 513,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 514,
    "title": "binary_tree",
    "time_limit": "1 초",
    "description": "이진 트리는 컴퓨터 사이언스에 자주 사용하는 자료 구조이다.",
    "input": "첫 줄은 테스트 데이터의 수 이다.\n각 테스트 데이터는 두 개의 정수 i , j ( 1 <= i , j <= 2*10^9) 가 주어진다. 이는 노드(i,j) 를 의미한다. i,j 값은 위에서 정의한 트리에서 유효한 값이 입력으로 주어진다.",
    "output": "각 입력데이터의 대해서 출력 예의 형식으로 출력한다.\n출력의 첫 수는 왼쪽 자식으로 가는 횟수이고 다음 수는 오른쪽으로 가는 길의 횟수이다. 각 출력 후 한 줄의 빈줄을 준 후 다음 데이터의 결과를 출력한다.",
    "sample": "입력\n\n3\n42 1\n3 4\n17 73\n\n출력\n\nScenario #1:\n41 0\n\nScenario #2:\n2 1\n\nScenario #3:\n4 6"
  },
  {
    "id": 515,
    "title": "nca",
    "time_limit": "1 초",
    "description": "트리는 컴퓨터 공학에서 유명한 자료구조이다.",
    "input": "첫 수는 노드 수 n  이 입력으로 주어진다.노드 번호는 1 부터 n ,까지 순차적\n 으로 주어지고 다음 줄 부터 n-1 개의 브랜치정보가 주어진다.\n노드수는 2 이상 10,000 이하이고 , 노드는 1 에서 n 까지 번호가 부여된다.\ntree 구조에서는 n 개의 node 를 가지는 경우 n-1 개 branch 를 가지는 구조라는 것을 명심하라.parents 와 child 정보가 주어진다. 마지막 번호는 2 개의 노드 번호가 주어지고 , 이 두 노드의 nca 를 구하는 것이다.",
    "output": "",
    "sample": "입력\n\n16\n1 14\n8 5\n10 16\n5 9\n4 6\n8 4\n4 10\n1 13\n6 15\n10 11\n6 7\n10 2\n16 3\n8 1\n16 12\n16 7\n\n출력\n\n4\n\n입력\n\n5\n2 3\n3 4\n3 1\n1 5\n3 5\n\n출력\n\n3"
  },
  {
    "id": 516,
    "title": "treeornot",
    "time_limit": "1 초",
    "description": "트리는 공집합이거나 혹은 하나 이상의 노드로 노드 사이에는 방향성이 있고 연결된 다음 특정을 가진다.",
    "input": "쌍으로 두 개의 수의 집합이 주어진다. 쌍의 첫 수는 시작노드이고 다음 수는  끝 노드이다.\n      즉 시작노드에서 끝 노드로의 에지가 존재한다는 것이고 입력의 끝은 0 0 이다.\n노드의 번호는 0 보다 큰 정수이다.",
    "output": "두 가지 중 하나를 출력한다.\n트리이면 \"tree\"\n아니면 \"not a tree\"",
    "sample": "입력\n\n6 8  5 3  5 2  6 4\n5 6  0 0\n\n출력\n\ntree\n\n입력\n\n8 1  7 3  6 2  8 9  7 5\n7 4  7 8  7 6  0 0\n\n출력\n\ntree\n\n입력\n\n3 8  6 8  6 4\n5 3  5 6  5 2  0 0\n\n출력\n\nnot a tree"
  },
  {
    "id": 517,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 518,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 519,
    "title": "postorder",
    "time_limit": "1 초",
    "description": "이진 트리를 postorder 로 방문 해보자.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n5 3 11 7 -1 -1 2 -1 -1 -1 8 13 -1 -1 4 -1 1 -1 -1\n\n출력\n\n7 2 11 3 13 1 4 8 5"
  },
  {
    "id": 520,
    "title": "traverse",
    "time_limit": "1 초",
    "description": "이진 트리를 순회하는 방법은 크게 세 가지가 있을 수 있다.",
    "input": "각 트리의 노드는 알파벳 대문자로 표현된다. \n첫줄에 이진 트리의 inorder가, 둘째 줄에 preorder가 주어진다.",
    "output": "구한 트리의 postorder를 출력한다.",
    "sample": "입력\n\nDBHEIAFCJGK\nABDEHICFGJK\n\n\n출력\n\nDHIEBFJKGCA"
  },
  {
    "id": 521,
    "title": "depth",
    "time_limit": "1 초",
    "description": "tree 에서 노드의 child 수가 k 일 때 , 그 노드의 degree(차수)를 k 라 한다.\n모든 노드의 degree 가 k 이하 이면 tree 의 degree 를 k 라 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n1 2 4 7 -1 -1 8 -1 -1 -1 3 5 -1 -1 6 -1 -1\n\n출력\n\n3 \n4"
  },
  {
    "id": 522,
    "title": "width",
    "time_limit": "1 초",
    "description": "이진트리를 다음의 규칙에 따라 행과 열에 번호가 붙여진 격자 모양의 틀 속에 그리려고 한다.",
    "input": "첫째 줄에 노드의 개수를 나타내는 정수 N (1 <= N <= 1000) 이 주어진다.\n다음 N개의 줄에는 각 줄마다 노드 번호와 해당 노드의 왼쪽 자식 노드와 오른쪽 자식 노드의 번호가 순서대로 주어진다. 노드들의 번호는 1부터 N까지로 주어진다. 자식이 없는 경우에는 자식 노드의 번호가 -1로 주어진다. 루트 노드의 번호는 1이다.",
    "output": "첫째 줄에 너비가 가장 넓은 레벨과 그 레벨의 너비를 순서대로 출력한다. 단, 너비가 가장\n      넓은 레벨이 두 개 이상 있을 때는 번호가 작은 레벨을 출력한다.",
    "sample": "입력\n\n19 \n1 2 3 \n2 4 5 \n3 6 7 \n4 8 -1 \n5 9 10 \n6 11 12 \n7 13 -1 \n8 -1 -1 \n9 14 15 \n10 -1 -1 \n11 16 -1 \n12 -1 -1 \n13 17 -1 \n14 -1 -1 \n15 18 -1 \n16 -1 -1 \n17 -1 19 \n18 -1 -1 \n19 -1 -1\n\n출력\n\n3 18"
  },
  {
    "id": 523,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 524,
    "title": "max_heap",
    "time_limit": "1 초",
    "description": "N 이 입력으로 들어올 때 , 1 ~ N 까지의 자연수를 가지고 만들 수 있는 Max-Heap 의 개수를 출력하는 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4\n\n출력\n\n3"
  },
  {
    "id": 525,
    "title": "labyrinth",
    "time_limit": "1 초",
    "description": "[문제 요약] 큰 피라미드내부에 # 은 벽이고 . 은 길이다. 길은 트리형태를 가진다.(두 지점간의 길은 유일하다)",
    "input": "입력은 두 개의 정수 C , R ( 3 <= C,R <= 1000 ) 이 주어진다. C , R 은 각각 열과 행의 수이다.\n다음 R 줄에는 C 개의 . 혹은 # 이 공백없이 주어진다.",
    "output": "출력예의 형식으로 출력한다.\n\"Maximum rope length is X.\"",
    "sample": "입력\n\n3 3\n###\n#.#\n###\n\n출력\n\nMaximum rope length is 0.\n\n입력\n\n7 6\n#######\n#.#.###\n#.#.###\n#.#.#.#\n#.....#\n#######\n\n출력\n\nMaximum rope length is 8."
  },
  {
    "id": 526,
    "title": "optimal_bst",
    "time_limit": "1 초",
    "description": "이진 탐색 트리란 숫자들을 노드에 저장해서 탐색에 이용할 수 있게 만든 이진 트리를 말한다.",
    "input": "",
    "output": "",
    "sample": "0.12 * 2 + 0.2 * 1 + 0.47 *  3 + 0.18 * 2 + 0.03 * 3 = 2.3"
  },
  {
    "id": 527,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 528,
    "title": "huffman",
    "time_limit": "1 초",
    "description": "데이터를 압축하는 상대적을 쉬운 방법은 일종의 허프만 트리를 생성해서 할수 있고 그리고 이를 이용해서 압축과 복원을 할수 있다.",
    "input": "입력은 정수 T 가 주어진다.\n      \n      테스트 케이스의 수를 나타낸다.\n각 테스트 경우에 , 3 개의 라인이 주어진다.\n파일에 있는 다를 파일의 수 Z ( 2 <= Z <= 20 )\n허프만 트리의 airty 라 불리는 수 N ( 2 <= N <= 10 )\n수신된 메시지의 헤드를 나타내는 문자열 ; 각 문자는 0 , (N-1) 의 범위에 있는 숫자이고 이 문자열의 크기는 200 문자보다 작다.\n더문 경우이지만 , 헤더가 이중으로 해석되는 경우가 있다. (즉 , 헤더가 '010011101100' with Z = 5 and N = 2 )\n\n모든 테스트 경우에서 유일한 답이 나온다는 보장이 된다.",
    "output": "T 개의 테스트 경우에 , \n     \n\n      Z 라인을 출력한다.. 각 테스트 경웨 오름차순 으로 Z 문자의 각각의 엔코드된 ...\n\n     \n\n      형식 origianl->encoding 을 사용하여, \n     \n\n      원값은 0 .. (Z-1) 의 범위에있는 10 진 값이다.\n      \n\n      그리고 엔코딩은 이 심볼에 대한 에코드된 수들의 심벌이다. 각 수는 0 이상이고 < N 이다.",
    "sample": "입력\n\n3\n3\n2\n10011\n4\n2\n000111010\n19\n10\n01234678950515253545556575859\n\n출력\n\n0->10\n1->0\n2->11\n0->00\n1->011\n2->1\n3->010\n0->0\n1->1\n2->2\n3->3\n4->4\n5->6\n6->7\n7->8\n8->9\n9->50\n10->51\n11->52\n12->53\n13->54\n14->55\n15->56\n16->57\n17->58\n18->59"
  },
  {
    "id": 529,
    "title": "이진 트라이 라 읽고 , retrieval(검색)의 reTRIEval",
    "time_limit": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\nstruct node\n{\n    struct node *lchild,*rchild;\n    int data;\n};\n struct node *root;\nFILE *fp1,*fp2;\nint last_state;// 답 \n //binary trie 구축 \n//패턴은 table.txt 파일에 저장되어 있다고 함.\n void init()\n{\n    char buffer[35];\n    int n = 1,i;\n    struct node *p,*q;\n         fp1 = fopen(\"table.txt\",\"r\");\n         root = (struct node*)calloc(1,sizeof(struct node));\n    while (fgets(buffer,131,fp1)! =  NULL) {\n        q = root;\n        for(i = 0;buffer[i]!='\\n';i++){\n            p = q;\n            if (buffer[i] = ='1') q = q->rchild; \n            else q = q->lchild;\n            if (q == NULL){\n                q = (struct node*)calloc(1,sizeof(struct node));\n                if (buffer[i] == '1') p->rchild = q;\n                else p->lchild = q;\n            }\n        }\n        q->data = n;\n        n++;\n    }\n    fclose(fp1);\n}\n //구축된 binary trie 사용해서 막힌 곳이 나올때 까지 따라감.\nvoid process()\n{\n    char buffer[2001];\n    int i;\n    struct node *p;\n         fp2 = fopen(\"input.txt\",\"r\");\n    fgets(buffer,10001,fp2);\n         p = root;\n    for(i = 0;buffer[i]!='\\n';i++){\n        if(buffer[i] == '1') p = p->rchild;\n        else p = p->lchild;\n        if (p  == NULL) break;\n        if (p->data != 0) last_state = p->data;\n    }\n    fclose(fp2);\n}\n //답 출력\nvoid output()\n{\n    printf(\"%d\\n\",last_state);\n}\n int main()\n{\n    init();\n    process();\n    output();\n    return 0;\n}",
    "description": "시간 복잡도는 O(n^2)",
    "input": "",
    "output": "",
    "sample": "출처:dovelet"
  },
  {
    "id": 530,
    "title": "morse",
    "time_limit": "3 초",
    "description": "디지털 시대 이전에는 가장 흔히 사용하는 이진 코드는 모르스 부호였다. 모르스 코드에는 , 심벌들이 짧고 긴 펄스로 엔코드 되었다.( 도트 혹은 대시로..)",
    "input": "입력의 첫 번째 줄은 정확히 양의 정수 d 가 입력된다. 이는 입력 데이터의 수 이다. 1 <= d <= 20\n테스트 데이터 별 입력은 다음과 같다.\n각 데이터의 첫 번째 라인은 모르스 부호를 포함한다. . 과 - 를 이루어진 많아야 10 000 개\n다음 줄은 정수 n 이 주어진다. 1 <= n <= 10 000 이는 사전에 있는 단어의 수이다. 길어야 20 개의 대문자로 이루어진다. 같은 단어가 한 번 이상 입력되지 않는다.",
    "output": "각 입력에 대해 한 줄에 하나씩 가능한 구의 수를 출력한다.  이 수는 많아야 2*10\n9\n이다.",
    "sample": "입력\n\n1\n.---.--.-.-.-.---...-.---.\n6\nAT\nTACK\nTICK\nATTACK\nDAWN\nDUSK\n\n출력\n\n2"
  },
  {
    "id": 531,
    "title": "phone_list",
    "time_limit": "1 초",
    "description": "전화 번호가 주어질 때 어떤 번호도 다른 것의 앞에서부터 유일성을 유지하는 지를 알려고 한다.",
    "input": "입력의 첫 라인은 테스트 케이스의 수 t 가 주어진다.1 ≤ t ≤ 40\n각 테스트 경우의 첫 수는 전화번호 개수 n 이다.1 ≤ n ≤ 10000. 다음 n 라인은 각 라인에서 유일한 전화번호가 주어진다. 각 전화번호는 많아야 10 자리 이다.",
    "output": "유일성을 유지한다면 YES  를 아니면 NO 를 출력한다.",
    "sample": "Emergency 911\nAlice 97 625 999\nBob 91 12 54 26"
  },
  {
    "id": 532,
    "title": "secret_message",
    "time_limit": "1 초",
    "description": "베시는 우리를 탈출하기로 맘 먹은 소들의 우두머리다. 이 소들은 서로에세 이진 메시지를 보내고 있다.",
    "input": "첫 줄에는 M 과 N 이 주어진다.\n다음 M 줄에는 가로 챈 코드 수 bi , 다음 bi 개의 0 혹은 1 이 입력된다.\n다음 N 줄에는 코드 표 cj , 다음 cj 개의 0 혹은 1",
    "output": "M 줄이 출력된다. j 번째 줄은 j 번째 코드표가 매치하는 메시지의 수를 출력한다.",
    "sample": "입력\n\n4 5\n3 0 1 0\n1 1\n3 1 0 0\n3 1 1 0\n1 0\n1 1\n2 0 1\n5 0 1 0 0 1\n2 1 1\n\n출력\n\n1\n3\n1\n1\n2"
  },
  {
    "id": 533,
    "title": "coci_obilazak",
    "time_limit": "1 초",
    "description": "아래 그림과 같이 높이가 K인 완전 이진 트리가 있다.",
    "input": "The first line of input contains the integer K (1 ≤ K ≤ 10), the number of levels of the village Mirko \njust visited. \nThe second line of input contains 2K integers, the sequence of house numbers on Mirko's paper. The house numbers will be unique and from the interval [1, 2K\n].",
    "output": "The output must consist of K lines. The i th line must contain the sequence of house numbers in the i\nth level of the village.",
    "sample": "input \n \n2 \n2 1 3 \n \noutput \n \n1 \n2 3 \ninput \n \n3 \n1 6 4 3 5 2 7 \n \noutput \n \n3 \n6 2 \n1 4 5 7 \n\nClarification of the first and second example: The examples correspond to the images in the task."
  },
  {
    "id": 534,
    "title": "written by victor5432",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "예를 들어보자.",
    "input": "",
    "output": "",
    "sample": "<문제>\n당신은 새로운 계산기 M_Int를 만들려고 한다. 당신은 M_Int에 다음과 같은 기능을 갖게 하려고 한다.\n1. 처음에 n과 n개의 수 a[0]~a[n-1]가 입력된다. (n<=100000, n개의 수는 int범위)\n2. 명령 개수 T가 입력된다. (T<=100000)\n3. 0 x y가 들어오면 a[x]~a[y]의 최솟값을 출력한다.\n4. 1 x y가 들어오면 a[x]를 y로 고친다.\nM_Int를 구현해보아라. 단, M_Int는 제한 범위 내에 있는 어떤 데이터라도 1초 안에 계산되어야한다.\n\n입력\n\n4\n2 4 6 8\n4\n0 0 2\n0 1 2\n1 3 1\n0 0 3\n\n출력\n\n2\n4\n1"
  },
  {
    "id": 535,
    "title": "rmq",
    "time_limit": "1 초",
    "description": "//작업 중",
    "input": "첫 줄에는 수열의 크기 n ( 1 <= n <= 100000) 이 주어지고\n다음 줄에는 수열이 .. 수열의 시작위치는 1 이다. 각 수는 -100 이상 100 이하이다.\n다음 줄에는 질의 수 q ( 1 <= q <= 100000) 가 주어지고\n다음 q 개의 줄에는 시작 구간과 끝 구간이 주어진다.",
    "output": "각 구간의 최소 값을 출력한다.",
    "sample": "입력\n\n7\n6 2 9 8 3 4 7\n3\n1 1\n1 2\n3 7\n\n출력\n\n6\n2\n3"
  },
  {
    "id": 536,
    "title": "bridging",
    "time_limit": "경과시간 : 1 초",
    "description": "[문제 요약] 왼쪽 단자와 오른쪽 단자를 선 끼리 교차하지 않고 연결하고자 한다.",
    "input": "첫 번째 수는 단자 수 p 이다. p < 40000 이고 단자 번호는 1 에서 순차적으로 p 까지 번호가 부여된다. \n다음 p 개의 수는   왼쪽 단자에서 오른쪽 단자로 연결된 번호를 나타내는 p 개의 수가 입력으로\n주어진다.",
    "output": "선이 중복되지 않게 연결할 수 있는 최대 단자 수를 출력한다.",
    "sample": "입력\n\n6 4 2 6 3 1 5\n\n출력\n\n3\n\n입력\n\n10 2 3 4 5 6 7 8 9 10 1\n\n출력\n\n9\n\n입력\n\n8 8 7 6 5 4 3 2 1\n\n출력\n\n1\n\n입력\n\n9 5 8 9 2 3 1 7 4 6\n\n출력\n\n4"
  },
  {
    "id": 537,
    "title": "mobile",
    "time_limit": "5 초",
    "description": "4 세대 이동 통신 기지국은 다음과 같이 동작한다고 하자.",
    "input": "각 입력은 한 줄에 하나씩 주어지고  , 명령의 종류를 나타내는 정수와 아래 테이블 같이 여러개의 파라미터 정수가 주어진다.\n명령\t인자\t의미\n0\tS\tS*S 배열의 모든 요소를 0 으로 클리어 . 이 명령은 시작시 한 번 주어짐\n1\tX Y A\t(X,Y) 원소에 A 를 더해줌 . A 는 양수 혹은 음수\n2\tL B R T\t(X,Y) 요소의 합을 출력 , L <= X <= R , B <= Y <= T\n3\t\t프로그램 종료. 마지막에 한 번 주어짐\n값들은 항상 범위내에 존재하니 이를 검사할 필요는 없다. 특히 A가 음수로 주어질 때, 사각형의 값은 0 아래로 내려가지 않는다고 보장된다.\n각 셀의 값을 음수로 만들어서는 안된다. 최하가 0 이다.\n4 * 4 크기의 테이블 인 경우 0 <= X <= 3 , 0 <= Y <= 3 이다. (배열의 첨자는 0 부터 시작)\n테이블 크기 : 1 * 1 <= S * S <= 1024 * 1024\n항상 셀의 범위는 다음 사이에 있다: 0 <= V <= 32767\n-32768 <= A <= 32767\n명령의 수 : 3 <= U <= 60002\n전체 최대 전화 수 : M= 230",
    "output": "명령 2 가 주어지는 경우 이 명령에 대한 답을 해야 한다.",
    "sample": "입력\n\n0 4\n1 1 2 3\n2 0 0 2 2 \n1 1 1 2\n1 1 2 -1\n2 1 1 2 3 \n3\n\n출력\n\n3\n4"
  },
  {
    "id": 538,
    "title": "ccc_tourney",
    "time_limit": "2.5 초",
    "description": "돈 체리는 가구 분해하기 싱글 엘리미네이션 토너먼트를 24시간 진행해야 하는 일을 맏게 됐습니다. 각 선수는 1과 1 000 000 000 사이의 정수로 표현된 가구 분해 스킬 레벨을 가지고 있습니다. 각 1:1 경기에서 스킬 레벨이 더 큰 선수가 승리해 다음 라운드로 진출하고, 패자는 집으로 돌아가야하는 구조입니다. 다행히도 같은 스킬 레벨을 가진 선수가 경기를 치루는 경우는 없습니다.",
    "input": "첫 번째 줄에 N (1 ≤ N ≤ 20)과 M(1 ≤ M ≤ 1000000)이 입력됩니다.\n다음 2^N 줄에 i번째 선수의 스킬 레벨이 입력됩니다.\n다음 M 줄에 다음 세 명령 중 하나가 주어진 형식으로 입력됩니다.\nR i S : i번 선수가 스킬 레벨이 S인 선수로 교체되어 토너먼트가 처음부터 다시 시작합니다.\nW : 현재 토너먼트의 우승자를 출력합니다.\nS i : i번 선수가 몇 번 이기는지 출력합니다.",
    "output": "모든 W와 S i 명령에 대해 적합한 정수를 순서대로 출력하세요.",
    "sample": "입력\n\n2 8\n30\n20\n10\n40\nS 1\nW\nR 4 9\nS 4\nW\nR 2 35\nS 2\nW\n\n출력\n\n1\n4\n0\n1\n2\n2"
  },
  {
    "id": 539,
    "title": "poop",
    "time_limit": "1 초",
    "description": "준곰이라는 생물은 최근에 물고기를 키우기 시작했다.",
    "input": "첫 번째 줄엔 어항의 가로 길이 W와 처리해야 될 상황들의 개수인 Q가 주어진다.\n2 ~ Q+1 줄엔 각각 하나의 상황이 물고기가 똥을 싼 것인지 준곰이 질문을 한 것인지 알려주는 정수 X가 주어진다. 만약 X가 0이면 물고기가 똥을 싼 것이고, X가 1이라면 준곰이 질문을 한 것이다. X가 0일 경우 같은 줄에 똥이 시작하는 좌표와 끝나는 좌표 a, b가 주어진다.",
    "output": "한 줄은 하나의 질문에 대응된다. 준곰이 질문할 때마다 똥이 존재하는 구간들의 길이의 합을 출력한다.",
    "sample": "입력\n\n8 4\n0 1 3\n1\n0 2 5\n1\n\n출력 \n\n2\n4\n(첫번째 질문 전까지 똥들이 1 ~ 3구간을 덮고 있어서 2를 출력하고, 2번째 질문 전까지 똥들이 1 ~ 5구간을 덮고 있어서 4를 출력한다.)"
  },
  {
    "id": 540,
    "title": "sumofinte",
    "time_limit": "1 초",
    "description": "한창 프로그래밍 공부를 하는 피에로는 N개의 수가 있을 때( 1 <= N <= 200,000 ), 연속된 구간의 최대 합을 구하고 있다. 하지만 피에로의 친구 어릿광대는 같이 놀지 않고 공부를 하는 피에로가 야속해서 옆에서 Q( 1 <= Q <= 200,000 )개의 제안을 한다.",
    "input": "처음 줄에는 N 과 Q가 입력된다.\n다음 줄에는 -1000 이상 1000 이하의 N개의 데이터가 입력되며,\n그 다음줄부터 Q개에 걸쳐 제안이 들어온다.",
    "output": "어릿광대에게 답하는 최대 숫자들을 각 줄에 걸쳐서 출력한다.",
    "sample": "5 5\n8 -3 5 -7 6\n1\n0 4 -2\n1\n0 3 -3\n1\n\n\n출력\n\n10\n14\n8"
  },
  {
    "id": 541,
    "title": "ccc_movie",
    "time_limit": "1 초",
    "description": "컴퓨터 과학 광인 브라이언은 여자친구인 아나테브카와의 데이트 계획을 세우고 있습니다. 장소는 바로 영화관입니다. (다만 IMAX는 너무 비싼 관계로 일반 영화관을 선택했습니다)",
    "input": "첫 번째 줄에 L (1 ≤ L ≤ 1000)과 T (1 ≤ T ≤ 500000)가 입력됩니다.\n다음 T 줄에는 Ei (Ei ∈ {E,L,S})와 두 정수 Ri, Ci (i = 1...T, 1 ≤ Ri ≤ 1 000 000 000, 1 ≤ Ci ≤ 1000)가 공백으로 구 분되어 입력됩니다.",
    "output": "모든 아네테브카의 제안에 대해 (Ei = S인 경우) 제안이 유효하지 않으면 No, 유효하면 두 좌석의 불편한 정도를 출력하세요.\n마지막 줄에 아직 선점당하지 않고 불편한 정도가 가장 적은 두 먼 좌석의 불편한 정도를 출력하세요.",
    "sample": "입력\n\n3 7\nE 1 2\nE 2 5\nS 3 4\nE 2 3\nL 2 5\nS 1 3\nS 2 2\n\n출력\n\n3\n0\nNo\n0"
  },
  {
    "id": 542,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 543,
    "title": "dfs",
    "time_limit": "1 초",
    "description": "그래프의 정보(vertex 수, edge 정보)와 시작 정점의 번호가 주어질 때, 깊이우선탐색(DFS)으로 방문할 때 정점의 방문 순서를 출력하는 프로그램을 작성하시오.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8 1\n1 2\n1 3\n2 4 \n2 5\n3 6 \n3 7\n4 8 \n5 8\n6 8\n7 8\n\n출력\n\n1 2 4 8 5 6 3 7"
  },
  {
    "id": 544,
    "title": "virus1",
    "time_limit": "1 초",
    "description": "신종 바이러스인 윔 바이러스는 네트워크를 통해 전파된다. 한 컴퓨터가 윔 바이러스에 걸리면 그 컴퓨터와 네트워크 상에서 연결되어 있는 모든 컴퓨터는 윔 바이러스에 걸리게 된다.",
    "input": "첫째 줄에는 컴퓨터의 수가 주어진다. 컴퓨터의 수는 100 이하이고 각 컴퓨터에는 1번부터 차례대로 번호가 매겨진다.\n둘째 줄에는 네트워크 상에서 직접 연결되어 있는 컴퓨터 쌍의 수가 주어진다.\n이어서 그 수만큼 한 줄에 한 쌍씩 네트워크 상에서 직접 연결되어 있는 컴퓨터의 번호 쌍이 주어진다.",
    "output": "1번 컴퓨터가 윔 바이러스에 걸렸을 때, 1번 컴퓨터를 통해 윔 바이러스에 걸리게 되는 컴퓨터의 수를 첫째 줄에 출력한다.",
    "sample": "입력\n\n7\n6\n1 2\n2 3\n1 5 \n5 2\n5 6\n4 7\n\n출력\n\n4"
  },
  {
    "id": 545,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 546,
    "title": "euler(special judge)",
    "time_limit": "1 초",
    "description": "임의의 도형이 주어질 때 한 점에서 시작하여 펜을 떼지 않고 오직 한 번만 지나 같은 도형을 그리는 것을 한 붓 그리기라고 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5 8\n1 2\n1 3\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n\n출력\n\n4 2 1 3 2 5 3 4 5"
  },
  {
    "id": 547,
    "title": "danji",
    "time_limit": "1 초",
    "description": "아래와 같은 정사각형 모양의 지도가 있다. 1 은 집이 있는 곳을, 0 은 집이 없는 곳을 나타낸다.",
    "input": "",
    "output": "",
    "sample": "0 1 1 0 1 0 0 \n0 1 1 0 1 0 1 \n1 1 1 0 1 0 1 \n0 0 0 0 1 1 1 \n0 1 0 0 0 0 0 \n0 1 1 1 1 1 0 \n0 1 1 1 0 0 0 \n\n  그림 1"
  },
  {
    "id": 548,
    "title": "maze",
    "time_limit": "1 초",
    "description": "도적들로부터 값진 보물을 훔쳐 달아나던 알리바바는 한 도시에 이르렀다. 그 도시는 전체가 마치 미로처럼 되어 있는 도시였는데 그 도시 한 쪽 끝에는 미리 준비해 놓은 배가 있어,도시 끝까지만 다다르면 도적들을 따돌릴 수 있다. 그런데 도적들은 이 도시에 대하여 잘아고 있기 때문에 도적들보다 먼저 출구에 다다르기 위해서는반드시 최단거리를 갖는 길로 가야만 한다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n5 5\n00110\n00010\n00110\n00000\n01011\n\n출력\n\n9"
  },
  {
    "id": 549,
    "title": "zerosum",
    "time_limit": "1 초",
    "description": "1 2 3 .. N 인 수열이 있다.( 3 <= N <= 9 )",
    "input": "",
    "output": "",
    "sample": "입력\n\n7\n\n출력\n\n1+2-3+4-5-6+7\n1+2-3-4+5+6-7\n1-2 3+4+5+6+7\n1-2 3-4 5+6 7\n1-2+3+4-5+6-7\n1-2-3-4-5+6+7"
  },
  {
    "id": 550,
    "title": "tram(open)",
    "time_limit": "1 초",
    "description": "자그레브에 있는 지하철 망은 여러지점의 교차 지점과 그들을 연결하는 선로를 가지고 있다.",
    "input": "세 정수 N , A , B 가 주어진다. ( 2 <= N <= 100, 1 <= A, B <= N )\nN 은 교차지점의 수 , 각 교차지점은 1,2,3,..,N\n다음 N 라인의 첫 번째 수는 각 교차지점에서 바로 연결가능한 교차지점의 수 K 이고 , 다음 K 개의 수는 교차지점의 수이다. 처음은 첫 번째 주어지는 교차지점과 연결되어 있다.",
    "output": "바꾸어야 할 최소 스위치 조작 수이다. A 에서 B 로의 길이 없다면 -1 을 출력한다.",
    "sample": "입력\n\n3 2 1\n2 2 3\n2 3 1\n2 1 2\n\n출력\n\n0"
  },
  {
    "id": 551,
    "title": "orders",
    "time_limit": "1 초",
    "description": "[문제 요약] 알파벳 소문자가 입력으로 주어진다. 이를 사전순으로 정렬하여 출력하는 프로그램. 단 , 같은 것을 포함하는 문자열이고 , 문자수는 200 자를 넘지 않고 출력시 중복을 허락하지 않는다.",
    "input": "Input contains a single line with all labels of the requested goods (in random order). Each kind of goods is represented by\nthe starting letter of its label. Only small letters of the English alphabet are used. The number of orders doesn't exceed\n200.",
    "output": "Output will contain all possible orderings in which the stores manager may visit his warehouses. Every warehouse is\nrepresented by a single small letter of the English alphabet -- the starting letter of the label of the goods. Each ordering\nof warehouses is written in the output file only once on a separate line and all the lines containing orderings have to be\nsorted in an alphabetical order (see the example). No output will exceed 2 megabytes.",
    "sample": "입력\n\nbbjd\n\n출력\n\nbbdj\nbbjd\nbdbj\nbdjb\nbjbd\nbjdb\ndbbj\ndbjb\ndjbb\njbbd\njbdb\njdbb"
  },
  {
    "id": 552,
    "title": "starship_maze",
    "time_limit": "1 초",
    "description": "광민이는 방이 N개인 미로의 지도를 갖고 있다. 각 방에는 1번부터 N번까지 번호가 매겨져 있고, N개의 방 사이에는 M개의 문이 있으며, 각 문은 서로 다른 두 방을 연결한다.",
    "input": "첫 번째 줄에는 방의 수 N과 문의 수 M이 주어진다. 2 ≤ N ≤ 100,000, 1 ≤ M ≤ 500,000\n두 번째 줄부터 M개의 줄에는 각 문이 연결하는 두 방의 번호가 입력된다. 모든 방들은 문을 통해 연결되어 있고, 임의의 두 방 사이에는 최대 1개의 문이 있다.",
    "output": "첫 번째 줄에 광민이가 방문한 순서대로 N개의 방의 번호를 정렬하여 출력한다.",
    "sample": "입력\n\n5 6\n1 3\n3 4\n4 2\n2 1\n1 4\n4 5\n\n출력 \n\n1 2 4 3 5"
  },
  {
    "id": 553,
    "title": "bugslife",
    "time_limit": "5 초",
    "description": "호퍼 교수는 희귀 곤충들의 짝짓기에 대해서 연구하고 있다.",
    "input": "입력의 첫 줄은 곤충의 번호 ( 2000 까지) 와 교미하는 쌍의 수 (1000000)가 입력으로 주어진다.\n       서로 다른 번호를 가진 쌍이 입력으로 주어진다.",
    "output": "이상한 경우가 발생하면  \"Suspicious bugs found!\"  아니면 \"No suspicious bugs found!\"\n       를 출력한다.",
    "sample": "입력\n\n3 3\n1 2\n2 3\n1 3\n\n출력\n\nSuspicious bugs found!\n\n\n입력\n\n4 2\n1 2\n3 4\n\n\n출력\n\nNo suspicious bugs found!"
  },
  {
    "id": 554,
    "title": "shredding(open)",
    "time_limit": "1 초",
    "description": "",
    "input": "각 테스트 데이터는 하나의 공백으로 분리된 두 양의 정수를 포함한다 : (1) 첫 번째 정수 ti는 타겟 넘버이고, (2) 두 번째 정수 numi는 잘릴 종이에 쓰인 수이다.\n두 정수 모두 0으로 시작하지 않는다...123은 가능하나 0123은 주어지지 않는다. 두 수 모두 6자리를 넘지 않는다고 가정해도 좋다. 0을 두 개 포함하는 라인은 입력의 끝을 의미한다.(그런데 왜 입출력 예에서는 0 0 이 없는지 모르겠습니다만)",
    "output": "입력으로 주어지는 각 테스트 케이스에 대해, 다음 세 개 중 하나를 출력한다 :\n- sum part1 part2 ...\n- rejected\n- error\n첫번째 경우에 대해, parti와 sum은 다음을 의미한다 :\n각 parti는 종이를 자른 조각들이다. 각 조각은 한 자리 이상의 숫자를 포함한다.\nsum은 잘린 조각들의 수의 합이다.\n각 숫자들은 한 칸의 공백으로 구분되어야 한다. 어떤 조합도 불가능하면 error를, 하나보다 많은 최적의 조합이 존재하면 rejected를 출력한다. 각 줄에 대해 처음 혹은 끝에 공백을 포함한 쓸데없는 문자를 출력해서는 안 된다.",
    "sample": "- sum part1 part2 ...\n- rejected\n- error"
  },
  {
    "id": 555,
    "title": "sprime",
    "time_limit": "1 초",
    "description": "존의 소는 최상급의 갈비를 생산한다.",
    "input": "숫자 N 이 입력으로 주어진다.",
    "output": "크기 순으로 크기 N 의 superprime 을 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n2333\n2339\n2393\n2399\n2939\n3119\n3137\n3733\n3739\n3793\n3797\n5939\n7193\n7331\n7333\n7393"
  },
  {
    "id": 556,
    "title": "snail_trails",
    "time_limit": "1 초",
    "description": "샐리란 이름의 달팽이는 수평 혹은 수직으로 움직일 수 있다. 시작 위치는 가장 좌측 위쪽이다.",
    "input": "",
    "output": "",
    "sample": "A B C D E F G H\n        1 S . . . . . # .\n        2 . . . . # . . .\n        3 . . . . . . . .\n        4 . . . . . . . .\n        5 . . . . . # . .\n        6 # . . . . . . .\n        7 . . . . . . . .\n        8 . . . . . . . ."
  },
  {
    "id": 557,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 558,
    "title": "topo_sort(open)",
    "time_limit": "1 초",
    "description": "그래프의 정보가 주어질 때 위상 정렬하는 프로그램을 작성하는 것이 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n1 2\n1 3\n3 2\n2 4\n3 4\n4 5\n\n출력\n\n1 3 2 4 5"
  },
  {
    "id": 559,
    "title": "music (special judge)",
    "time_limit": "3 초",
    "description": "인터넷 방송 KOI(Korea Open Internet)의 음악 프로그램 PD 인 남일이는 자기가 맡은 프로그램 '뮤직 KOI' 에서 가수들의 출연 순서를 정하는 일이 골치 아프다. 순서를 정하기 위해서는 많은 조건을 따져야 한다.",
    "input": "",
    "output": "",
    "sample": "1 4 3\n6 2 5 4\n2 3"
  },
  {
    "id": 560,
    "title": "dizzy",
    "time_limit": "1 초",
    "description": "The cows have taken to racing each other around the farm but they get very dizzy when running in circles, and everyone knows that dizzy cows don't produce any milk. Farmer John wants to convert all of the two-way cow paths in the farm to one-way paths in order to eliminate any 'cycles' and prevent the cows from getting dizzy. A 'cycle' enables a cow to traverse one or more cow paths and arrive back at her starting point, thus completing a loop or circle.",
    "input": "* Line 1: Three space separated integers: N, M1, and M2\n\n* Lines 2..1+M1: Line i+1 describes a one-way cow path using two space\n        separated integers: A_i and B_i\n\n* Lines 2+M1..1+M1+M2: Line i+M1+1 describes a two-way cow path using\n        two space separated integers: X_i and Y_i",
    "output": "* Lines 1..M2: Line i should contain two space-separated integers:\n        either X_i and Y_i or Y_i and X_i, depending on the direction\n        assigned to the i-th two-way path. The two-way paths must\n        appear in the same order in the output as they do in the\n        input. If there is no solution, output \"-1\" on a single line.",
    "sample": "1-->2\n             |  /|\n             | / |\n             |/  |\n             3<--4"
  },
  {
    "id": 561,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 562,
    "title": "agrinet",
    "time_limit": "1 초",
    "description": "철수는 그의 마을에서 이장으로 선출되었다. 그의 선거공약 중의 하나는 마을 전체를 인터넷으로 연결하겠다는 것이다.",
    "input": "첫 줄은 농가의 수 N ( 3 <= N <= 100 )이 주어지고 , 다음 줄 부터는 N * N 의 배열이 주어진다.\n각 배열은 각 농가까지의 거리를 나타낸다.",
    "output": "가장 최소 거리를 출력한다.",
    "sample": "입력\n\n4\n0 4 9 21\n4 0 8 17\n9 8 0 16\n21 17 16 0\n\n출력\n\n28"
  },
  {
    "id": 563,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 564,
    "title": "longest",
    "time_limit": "1 초",
    "description": "여러 개의 점(point)들이 주어지고 점과 점사이의 길과 거리가 주어질 때 가장 멀리 떨어진 두 점의 거리를 계산하시오.",
    "input": "입력 파일의 한 줄에 서로 다른 두 개의 숫자가 표현되며 숫자와 숫자사이는 공백으로 분리한다.\n  입력줄의 개수는 최대 1000개 이다.  입력줄의 순서는 중요하지 않다.\n입력의 끝은 EOF 이다.",
    "output": "출력파일의 첫줄에 답을 출력한다",
    "sample": "입력 \n\n8 3\n2 1\n2 8\n5 2\n5 7\n\n위 입력의 설명\n - 위 입력에 대한 길과 거리에 대해 알 수 있는 모든 정보는 다음과 같다.\n   점8에서 점3으로 가는 길이 있으며 그 거리는 1이다.\n   점2에서 점1로 가는 길이 있으며 그 거리는 1이다.\n   점2에서 점8로 가는 길이 있으며 그 거리는 1이다.\n   점5에서 점2로 가는 길이 있으며 그 거리는 1이다.\n   점5에서 점7로 가는 길이 있으며 그 거리는 1이다.\n - 위의 입력에 대한 풀이; 점5에서 점3으로 가는 길이 가장 멀다. 5 -> 2 -> 8 -> 3 ; 그 거리는 3이므로 답은 3이다.\n\n출력\n\n3"
  },
  {
    "id": 565,
    "title": "koi_race(special judge)",
    "time_limit": "1 초",
    "description": "자동차 경주로는 <그림 1>의 예와 같이 표현된다. 화살표는 각 지점을 잇는 도로를 의미하며 모든 도로는 일방통행 도로로 화살표 방향으로만 움직일 수 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8\n13\n1 2 5\n1 3 4\n2 5 2\n2 6 1\n3 6 3\n5 6 7\n5 8 9\n6 8 3\n4 1 6\n6 4 8\n7 4 5\n6 7 2\n8 7 4 \n\n출력\n\n32\n1 2 5 6 8 7 4 1"
  },
  {
    "id": 566,
    "title": "articulation",
    "time_limit": "1 초",
    "description": "Telephone Line Company(TLC)는 전화 케이블공사를 하고 있다. 그들은 1 에서 N 까지 붙여진 여러개의 지점을 서로 연결하고 있다. 두 지점은 같은 번호를 가질 수 없고 연결된 두 지점사이는 양방향 통화가 가능한다. 한 지역에서 모든 지역으로 통화가 가능하지만, 직접적으로 연결될 필요는 없교 다른 지역을 경유해서 가능하다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n5 1 2 3 4\n\n출력\n\n5\n\n입력\n\n6\n2 1 3\n5 4 6 2\n\n출력\n\n2 5"
  },
  {
    "id": 567,
    "title": "island",
    "time_limit": "1 초",
    "description": "Farmer John has bought property in the Caribbean and is going to try to raise dairy cows on a big farm composed of islands. Set in his ways, he wants to surround all the islands with fence. 농부 존은 캐리비언에 땅을 사서 섬을 이루어진 큰 농장에 소들을 키우려고 한다. 그러기 위해 먼저 그느 섬주위를 둘러싸는 울타리을 만들려고 한다. Each island in the farm has the shape of a polygon. 농장에 있는 도는 섬은 다각셩 형태를 가지고 있다. He fences the islands one side at a time 그는 한 번에 하나의 면에 울타리를 친다. (between a consecutive pair of vertices) 연속적인 정점 사이에 and proceeds clockwise around a given island with his fencing operations. 그리고 그의 펜싱 작업으로 주어진 섬 주위에 시계 방향으로 진행해 간다. Since he wants to fence all the islands, 왜냐하면 그는 모든 섬을 울타니를 치기를 원한다. he must at some point travel to any other islands using a boat. 그는 어떤 한 지짐에서 보트를 사용해서 다른 섬으로 이동해야 한다. He can start fencing at any vertex and, at any vertex he encounters, 그는 그가 만나는 어떤 정점에서도 울타리치기 시작을 할수 있다. travel to some vertex on another island, 어떤 정점에서 다른 섬으로 간다 fence all the way around it, and 그 주위에 모든 방법ㅇ로 울타리를 친다, 그리고 then IMMEDIATELY return back to the same vertex on the original island using the same path he traveled before. Each boat trip has a cost defined by a supplied matrix. 그리고 즉시 돌아온다. 처음 정점으로 그 전에 여행한 같은 길을 사용해서 매 보트 비용은 배열로 주어진다. The islands are described by a set of N (3 <= N <= 500) pairs of vertices V1,V2 (1 <= V1 <= N; 1 <= V2 <= N) 섬들은 N 개의 쌍으로 주어진다. ( 3 <= N <= 500 , 1 <= V1,v2 <= N ) although you must figure out how to assemble them into islands. 당신은 그들을 섬으로 어떻게 모으는가를 이해해야만 할지라도 The vertices are conveniently numbered 1..N. 정점은 편의상 1 .. N 으로 명명한다. The cost of traveling by boat between each pair of vertices is given by a symmetric cost matrix 섬들 사이에 이동 비용은 대칭 비용 행렬로 주어진다. whose elements fall in the range 0..1000. 이는 0 .. 1000 이다. What is the minimum cost of surrounding the islands with the fence? 펜스를 치는데 필요한 최소 비용을 구하는 것이 문제이다.",
    "input": "* Line 1: A single integer: N\n\n* Lines 2..N+1: Each line describes an island's border with two\n        space-separated integers: V1 and V2\n\n* Lines N+2..2*N+1: Line i-N-1 contains N integers that describe row i\n        of the cost matrix: Row_i",
    "output": "* Line 1: A single integer that specifies the minimum cost of building\n        the fence",
    "sample": "입력\n\n12\n1 7\n7 3\n3 6\n6 10\n10 1\n2 12\n2 9\n8 9\n8 12\n11 5\n5 4\n11 4\n0 15 9 20 25 8 10 13 17 8 8 7\n15 0 12 12 10 10 8 15 15 8 8 9\n9 12 0 25 20 18 16 14 13 7 12 12\n20 12 25 0 8 13 14 15 15 10 10 10\n25 10 20 8 0 16 20 18 17 18 9 11\n8 10 18 13 16 0 10 9 11 10 8 12\n10 8 16 14 20 10 0 18 20 6 16 15\n13 15 14 15 18 9 18 0 5 12 12 13\n17 15 13 15 17 11 20 5 0 22 8 10\n8 8 7 10 18 10 6 12 22 0 11 12\n8 8 12 10 9 8 16 12 8 11 0 9\n7 9 12 10 11 12 15 13 10 12 9 0\n\nINPUT DETAILS:\n  1        10            4\n    xxxxxxx              x\n   xxxxxxxxx            xxxx\n7 xxxxxxxxxxx 6        xxxxxxx\n xxxxxxxxxxx       11 xxxxxxxxxx 5\n  xxxxxxx\n   xxx\n  3         12 xxxxxxx 2\n              xxxxxxxx\n              xxxxxxxx\n             xxxxxxxxx\n             xxxxxxxxx\n            xxxxxxxxxx\n            xxxxxxxxxx\n          8 xxxxxxxxxx 9\n\nThe example describes three islands: {1,7,3,6,10}, {4,5,11} and\n{2,9,8,12}. The travel costs are provided as a matrix. For example,\nthe travel cost from vertex 1 to 2 is 15.\n\n출력\n\n30\n\nOUTPUT DETAILS:\n\nThere is more than one solution. One is: FJ starts from vertex 3\nthen 7 and stops at 1, travels to 11 followed by 4,5,11. He then\nreturns back to 1, and travels to 12 followed by 2,9,8,12. Finally,\nhe returns back to 1 and continues with 10,6,3,7. The costs are 8\n* 2 = 16 for traveling from 1 to 11 and returning back, and 7 * 2\n= 14 for traveling from 1 to 12 and back -- a total cost of 30."
  },
  {
    "id": 568,
    "title": "network1",
    "time_limit": "1 초",
    "description": "여러 학교들이 컴퓨터 네트워크로 연결이 되어 있다.",
    "input": "첫 줄에는 네트워크 망에 든 학교의 개수를 나타내는 N(2<=N<=100)이 있다.\n각 학교는 1부터 N까지의 수로 구분한다. 그리고 다음 N줄에는 1부터 N까지 각 학교가 소프트웨어를 보내기로 되어 있는 대상 학교의 번호가 들어있다. 각각의 목록은 0 으로 끝난다. 소프트웨어를 보낼 학교가 하나도 없는 학교에 해당하는 줄에는 그냥 0 만 있다.",
    "output": "최소 학교수를 출력한다.",
    "sample": "입력\n\n5               \n2 4 3 0         \n4 5 0\n0\n0\n1 0\n\n출력\n\n1"
  },
  {
    "id": 569,
    "title": "network",
    "time_limit": "1 초",
    "description": "여러 학교들이 컴퓨터 네트워크로 연결이 되어 있다. 어떤 소프트웨어가 개발되어 한 학교로 왔을 때, 그 학교는 자기가 보내기로 되어 있는 다른 학교에게 그 소프트웨어를 네트워크로 전달하도록 학교 사이에 합의가 되어 있다.",
    "input": "첫 줄에는 네트워크 망에 든 학교의 개수를 나타내는 N(2<=N<=100)이 있다.\n각 학교는 1부터 N까지의 수로 구분한다. 그리고 다음 N줄에는 1부터 N까지 각 학교가 소프트웨어를 보내기로 되어 있는 대상 학교의 번호가 들어있다. 각각의 목록은 0으로 끝난다. 소프트웨어를 보낼 학교가 하나도 없는 학교에 해당하는 줄에는 그냥 0만 있다.",
    "output": "두 줄이어야 한다.\n첫째 줄에는 첫째 문제의 정답이 자연수로 들어간다. 둘째 줄에는 둘째 문제의 정답을 적는다.",
    "sample": "입력\n\n5               \n2 4 3 0         \n4 5 0\n0\n0\n1 0\n\n출력\n\n1\n2"
  },
  {
    "id": 570,
    "title": "ubiquitous",
    "time_limit": "1 초",
    "description": "오늘날 아주 많은 다른 종교들이 있고 이들 모두를 추적하는 것은 어려운 일이다. 당신은 당신이 다니는 대학에 몇 가지의 서로 다른 종교가 있는 가를 알고자 한다.",
    "input": "첫 줄에 정수 n , m 이 주어진다.\n다음 m 라인은 두 정수 i , j 가 주어진다.\ni , j 는 같은 종교를 가진 학생의 쌍이다.",
    "output": "서로 다른 종교 수를 출력한다.",
    "sample": "10 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n\n출력\n\n1\n\n입력\n\n10 4\n2 3\n4 5\n4 8\n5 8\n\n출력\n\n7"
  },
  {
    "id": 571,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 572,
    "title": "quick_change",
    "time_limit": "1 초",
    "description": "J.P. Flathead 아저씨의 가게에 점원을 고용했는데 조금 띨띨해서 잔돈을 거슬러주는 것을 잘 하지 못한다. 구두쇠인 아저씨는 이로 인해서 손해가 나는 것을 알았다.",
    "input": "입력으로 cents C 가 주어진다.(1 <= C <= 500)",
    "output": "아래와 같은 형식으로 출력한다.\nQ QUARTER(S), D DIME(S), n NICKEL(S), P PENNY(S)\nQ,D,N,P 는 각각 quarter, dimes , nickels, pennys 수 이다.",
    "sample": "입력\n\n124\n\n출력\n\n4 QUARTER(S), 2 DIME(S), 0 NICKEL(S), 4 PENNY(S)\n\n입력\n\n25\n\n출력\n\n1 QUARTER(S), 0 DIME(S), 0 NICKEL(S), 0 PENNY(S)\n\n입력\n\n194\n\n출력\n\n7 QUARTER(S), 1 DIME(S), 1 NICKEL(S), 4 PENNY(S)"
  },
  {
    "id": 573,
    "title": "germination",
    "time_limit": "1 초",
    "description": "식물학자가 다섯 가지의 꽃을 온실에서 파종 후 건망증으로 어떤 꽃을 파종했는지를 잊어버렸다.",
    "input": "5 개의 정수 쌍이 입력된다. (포피 , 카네이션 , 해바라기, 데이지 , 팬시 순). 쌍 중 \n두 번째 수가 첫 번째 수보다 크거나 같다.\n다음은 5 개의 화분에서 발화하는 날짜가 입력된다. 모든 수는 100 이하 양의 정수이다.",
    "output": "1 번에서 5 번까지의 화분의 꽃 이름을 출력 한다.\n두가지 이상의 경우가 가능하면 Ambiguous 를 출력한다.\n한가지 이상의 답이 되는 경우가 보장된다.",
    "sample": "입력\n\n4 9 8 14 14 21 12 17 5 10\n14 17 10 21 4 \n\n출력\n\nCarnation Daisy Pansy Sunflower Poppy\n\n입력\n\n4 9 5 9 12 15 20 24 10 11 \n8 15 22 11 7\n\n출력\n\nAmbiguous \n\n입력\n\n5 5 5 6 6 7 7 8 8 9\n9 8 7 6 5\n\n출력\n\nPansy Daisy Sunflower Carnation Poppy"
  },
  {
    "id": 574,
    "title": "barn",
    "time_limit": "1 초",
    "description": "축사의 지붕과 문이 폭풍에 날아갔다. 우리 모두에 소가 있지 않은 경우 주어지는 판자 수로 소들이 있는 축사의 지붕을 덮을 경우 가장 최소 길이로 덮기 위한 프로그램을 작성하는 것이 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4 50 18\n3\n4\n6\n8\n14\n15\n16\n17\n21\n25\n26\n27\n30\n31\n40\n41\n42\n43\n\n출력\n\n25\n\n*네 개의 판자로 3--8 , 14--21 , 25--31 , 40--43 으로 막는게 최소이다."
  },
  {
    "id": 575,
    "title": "knapsack",
    "time_limit": "1 초",
    "description": "도둑이 보석상에 침입하여 보석을 훔쳐가려고 한다. 그런데 도둑이 가져 갈수 있는 보석의 무게(n)은 한정되어 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n30\n3\n5 50\n10 60\n20 140\n\n출력\n\n220.00"
  },
  {
    "id": 576,
    "title": "mixing_milk",
    "time_limit": "1 초",
    "description": "유유를 가공하는 회사에서 업자별 리터당 가격과 가진 양이 주어질 때 우유를 가장싸게 구입하고자 한다. 이를 해결하는 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n100  5\n5  20\n9  40\n3  10\n8  80\n6  30\n\n출력\n\n630"
  },
  {
    "id": 577,
    "title": "wooden_stick",
    "time_limit": "1 초",
    "description": "n 개의 나무 막대기가 있다. 각 나무 막대기의 길이와 무게는 알고 있다. 이 나무 막대기들은 나무 처리 기계에 차례대로 처리된다. 해당 막대기에 대한 처리를 하기 위해 준비시간이 필요하다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n4 9 5 2 2 1 3 5 1 4\n\n출력\n\n2"
  },
  {
    "id": 578,
    "title": "palette",
    "time_limit": "1 초",
    "description": "물감과 팔레트를 사용하여 색칠 작업을 하고자 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n14\nBFCABCFBAIJAIJ\n\n출력\n\n4"
  },
  {
    "id": 579,
    "title": "deadline",
    "time_limit": "1 초",
    "description": "한 시간이면 끝낼 수 있는 여러 작업이 주어지고 이 작업의 마감시간과 이익이 할당되어 있다.",
    "input": "한 줄당 한 작업의 마감시간과 이익이 주어진다.\n작업의 마감시간과 이익은  1000 을 넘지 않는 자연수이고 작업의 개수는\n10000 개 이하이다.\n입력의 끝은 EOF 이다.",
    "output": "최대이익을 출력한다.",
    "sample": "입력\n\n2 30\n1 30\n2 25\n1 40\n\n출력\n\n70"
  },
  {
    "id": 580,
    "title": "moving_table",
    "time_limit": "1 초",
    "description": "ACM ( 유명한 컴퓨터 제조사 ) 회사는 아래 그림과 같이 생긴 빌딩의 한 층을 빌렸다..",
    "input": "첫 수는 이동 수 N ( 1 <= N <= 200 )   이다.\n\n      다음 줄 N 줄은 각 각 두개의 양의 정수 s,t 가 입력으로 주어진다. s 방에서 t 방으로 의 이동을 의미한다.\n      방 번호는 많아야 한 번 입력데이터에 주어진다.\n같은 방에서 같은 방으로 이동할 때도 복도를 사용하여야 한다.",
    "output": "이동하는데 필요한 최소 분 수를 출력한다.",
    "sample": "입력\n\n4 \n10 20 \n30 40 \n50 60 \n70 80 \n\n출력\n\n10\n\n입력\n\n2 \n1 3 \n2 200 \n\n출력\n\n20\n\n입력\n\n3 \n10 100 \n20 80 \n30 50 \n\n출력\n\n30\n\n입력\n\n3\n1 1\n2 2\n3 3\n\n출력\n\n20"
  },
  {
    "id": 581,
    "title": "refrigerator",
    "time_limit": "1 초",
    "description": "우리나라 아이스크림 공장은 여러가지 종류의 아이스크림을 생산하고 있다. 그런데 공장에서생산된 아이스크림의 형태를 그대로 보존하기 위해서는 일정한 온도를 유지해 주어야만 한다. 아이스크림은 종류에 따라 유지해야할 온도의 최소값과 최대값이 정해져 있다. 즉 , A 라는 아이스크림의 유지 온도가 -20 oc ~ 12 oc라면, 냉장고의 온도가 -20 oc에서 -12oc 사이일 때만 아이스크림은 형태가 변형되지 않고 보관될 수 있다. 냉장고의 온도는 고정된 값을 정할 수 있으며 하나의 냉장고에는 여러 종류의 아이스크림이 들어 갈 수 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4\n-20 -15\n-14 -5\n-18 -13\n-5 -3\n\n출력\n\n2"
  },
  {
    "id": 582,
    "title": "snowboard",
    "time_limit": "1 초",
    "description": "마이클은 스노우보드를 매우 즐기는 녀석이다. 그런데 , 스노우 보드 탈 때 한가지 문제점은 내려갈때는 신나지만 올라갈때는 다시 걸어서 올라가거나 리프트를 타야하는 점이다. 마이클은 다시 올라가는 것을 되도록이면 피하고 싶어한다. 우리가 마이클을 도와주도록 하자.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10 5\n56 14 51 58 88\n26 94 24 39 41\n24 16 8 51 51\n76 72 77 43 10\n38 50 59 84 81\n5 23 37 71 77\n96 10 93 53 82\n94 15 96 69 9\n74 0 62 38 96\n37 54 55 82 38\n출력\n\n7\n\n*참고*"
  },
  {
    "id": 583,
    "title": "virtual(special judge)",
    "time_limit": "1 초",
    "description": "소스에서 목적지까지 자료를 일정한 크기로 잘라서 보내는 방법이 있고 , 소스에서 목적지까지 연결을 유지한 후에 자료를 한 꺼번에 보내는 방법이 있다.",
    "input": "첫 줄에는 정점의 수 n ( 2 <= n <= 100) 이 입력으로 주어지고,\n다을 줄에는 출발, 도착 정점이 다음 줄에는 간선과 해당 간선의 한계치가 주어진다. 입력의 끝은 EOF 이다.\n입력 데이터는 사이클이 발생하지 않는다.",
    "output": "첫 줄에 가능한 최대 크기를 출력하고 다을 줄에는 출발지에서 도착지까의 패스를 출력한다.\n패스가 여러개 존재하는 경우 가장 짧은 패스를 출력한다.",
    "sample": "입력\n\n5\n1 5\n1 2 6\n1 3 9\n1 4 2\n2 3 3\n3 4 1\n2 5 5\n3 5 4\n4 5 7\n\n출력\n\n5\n1 2 5"
  },
  {
    "id": 584,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n#include <stdio.h> \n int a[8] = { 6 , 2 , 9 , 8 , 1 , 4 ,17 , 5 }; \n int  dc( int low ,int high )  \n{ \n     int m,tmp1,tmp2; \n      m = (low + high )/2; \n      if ( low == high ) return a[low]; \n            tmp1 = dc(low,m); \n     tmp2 = dc(m+1,high); \n     if ( tmp1 > tmp2 ) return tmp1; \n     else return tmp2; \n} \n int main() \n{ \n     int low ,high; \n      low = 0; \n     high = 7; \n      printf(\"%d\\n\",dc(low,high)); \n}\n</stdio.h>",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "작게 해서 정복하고 이 영역을 확장하는 방법.",
    "input": "",
    "output": "",
    "sample": "차례:\n-최대값 찾기\n-merge sort\n-quick sort"
  },
  {
    "id": 585,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 586,
    "title": "cantoring",
    "time_limit": "1 초",
    "description": "n 을 입력으로 받아 아래와 같은 처리를 하는 프로그램을 작성하시오.",
    "input": "n ( 0 <= n <= 12 ) 이 입력으로 주어진다.",
    "output": "- 사이에는 공백이다.",
    "sample": "123456789012345678901234567\n  ---------------------------\n  ---------         ---------\n  ---   ---         ---   ---\n  - -   - -         - -   - -"
  },
  {
    "id": 587,
    "title": "color",
    "time_limit": "1 초",
    "description": "아래 그림 1 과 같이 여러개의 정사각형칸들로 이루어진 정사각형 모양의 종이가 주어져 있고, 각 정사각형칸들은 하얀색으로 칠해져 있거나 핑크색으로 칠해져 있다. 주어진 종이를 일정한 규칙에 따라 잘라서 다양한 크기를 가진 정사각형 모양의 하얀색 또는 핑크색 색종이를 만들려고 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8\n1 1 0 0 0 0 1 1\n1 1 0 0 0 0 1 1\n0 0 0 0 1 1 0 0\n0 0 0 0 1 1 0 0\n1 0 0 0 1 1 1 1\n0 1 0 0 1 1 1 1\n0 0 1 1 1 1 1 1\n0 0 1 1 1 1 1 1\n\n출력\n\n9\n7"
  },
  {
    "id": 588,
    "title": "tile(special judge)",
    "time_limit": "1 초",
    "description": "'L' 자 모양의 타일이 있다. 이 타일을 이용하여 2^N * 2^N (단, 여기서 N = 2 , 3 , ...) 크기의 화장실 바닥을 빈틈없이 채우고 싶다. 화장실 바닥에는 미리 정해진 위치에 배수구가 있다. 'L' 자 타일은 회전시켜서 사용할 수 있으면 다음과 같이 생겼다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n3\n3 2\n\n출력\n\n 3  3  4  4  8  8  9  9\n 3  2  2  4  8  7  7  9\n 5  0  2  6 10 10  7 11\n 5  5  6  6  1 10 11 11\n13 13 14  1  1 18 19 19\n13 12 14 14 18 18 17 19\n15 12 12 16 20 17 17 21\n15 15 16 16 20 20 21 21"
  },
  {
    "id": 589,
    "title": "skyline",
    "time_limit": "1 초",
    "description": "",
    "input": "",
    "output": "",
    "sample": "입력\n\n10\n10 75 40\n20 35 90\n25 90 20\n45 100 140\n80 140 70\n110 130 80\n160 195 40\n165 200 50\n175 205 100\n215 225 70\n\n출력\n\n10 20 40\n20 35 90\n35 45 40\n45 100 140\n100 110 70\n110 130 80\n130 140 70\n140 160 0\n160 165 40\n165 175 50\n175 205 100\n205 215 0\n215 225 70"
  },
  {
    "id": 590,
    "title": "quad",
    "time_limit": "1 초",
    "description": "",
    "input": "첫 수는 양의 정수 N 이다. N * N 이진 이미지를 의미하고  N <= 512  이고 , N = 2^i 인 i 인 양의 정수 i 가 존재한다.\n다음 N 줄에는 N 개의 0 혹은 1 의 이진 이미지가 입력된다.",
    "output": "16 진수 형태로 출력한다.",
    "sample": "입력\n2\n0 0\n0 0\n\n출력\n\n0\n\n입력\n\n4\n0 0 1 1\n0 0 1 1\n1 1 0 0\n1 1 0 0\n\n출력\n\n114\n\n입력\n\n8\n0 0 0 0 0 0 1 1\n0 0 0 0 0 0 1 1\n0 0 0 0 0 1 0 0\n0 0 0 0 0 1 0 0\n1 1 1 1 0 0 0 0\n1 1 1 1 0 0 0 0\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n\n출력\n\n258C0511"
  },
  {
    "id": 591,
    "title": "mpaper",
    "time_limit": "1 초",
    "description": "1 cm 간격으로 수평선과 수직선이 그어진 직사각형 모양의 마법 색종이를 가로 방향과 세로 방향으로 잘라서 작은 직사각형 조각들로 나누려고 한다.",
    "input": "첫째 줄에는 색종이의 가로의 길이와 세로의 길이를 나타내는 양의 정수가 빈칸을 사이에 두고 주어진다. 가로와 세로의 길이는 모두 40,000 이하이다.\n둘째 줄에는 색종이를 자르기 위한 점의 개수를 나타내는 양의 정수 N이 주어진다. N은 30,000 이하이다.\n셋째 줄부터 마지막 줄까지 색종이를 자르기 위한 점들의 위치가 한 줄에 하나씩 순서대로 주어진다. 점들의 위치는 빈칸을 사이에 두고 가로 방향의 거리가 주어진 다음 세로 방향의 거리가 주어진다.",
    "output": "첫째 줄에 잘려진 색종이 조각 중에서 가장 넓이가 큰 조각의 넓이와 가장 작은 조각의 넓이가 몇 cm\n2\n인지를 빈칸을 사이에 두고 순서대로 출력한다.",
    "sample": "입력\n\n8 7\n5\n5 4\n2 3\n3 1\n7 6\n6 2\n\n출력\n\n21 3"
  },
  {
    "id": 592,
    "title": "b_lineup",
    "time_limit": "2 초",
    "description": "매일 존의 소들은 젖을 짜기 위해 같은 순서로 줄을 선다.(1 ≤ N ≤ 50,000) 하루는 존이 몇마리의 소들과 Ultimate Frisbee 게임을 하기로 하였다.",
    "input": "입력으로\n두 개의 정수 N , Q\n다음 라인부터 N 줄에는 소들의 키가 주어지고\n다음 Q 줄에는 A , B (1 ≤ A ≤ B ≤ N) 가 주어진다. 범위는 A , B 를 포함",
    "output": "Q 줄에는 각 범위의 최대,최소의 차를 출력한다.",
    "sample": "입력\n\n6 3\n1\n7\n3\n4\n2\n5\n1 5\n4 6\n2 2\n\n출력\n\n6\n3\n0"
  },
  {
    "id": 593,
    "title": "stanford_fibo",
    "time_limit": "1 초",
    "description": "피보나치 수열은 F0 = 0, F1 = 1, and Fn = Fn - 1 + Fn - 2 for n ≥ 2.",
    "input": "여러개의 테스트 데이터가 입력으로 주어진다.\n각 테스트 데이터는 한 줄에 n 이 주어진다.0 ≤ n ≤ 1,000,000,000 입력의 끝은 -1 이다.",
    "output": "테스트 케이스 별 출력은 Fn 의 마지막 네 숫자를 출력한다. 만약 마지막 네자리 숫자가 모두 0 이면 '0' 을 그렇지 않으면\n선두에 오는 0 을 제외하고 출력한다.(즉 , Fn 을 10000 으로 나눈  나머지를 출력)",
    "sample": "입력\n\n0\n9\n999999999\n1000000000\n-1\n\n출력\n\n0\n34\n626\n6875"
  },
  {
    "id": 594,
    "title": "mod_fibo",
    "time_limit": "1 초",
    "description": "피보나치 수(0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...) 는 다음과 같이 정의된다.",
    "input": "n 과 m 이 입력으로 주어진다.",
    "output": "한 입력데이터 별 출력을 한 줄에 하나씩 출력한다.\n입력의 끝은 EOF이다",
    "sample": "입력\n\n11 7\n11 6\n\n출력\n\n89\n25"
  },
  {
    "id": 595,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 596,
    "title": "poly_multi",
    "time_limit": "4 초",
    "description": "그는 지금 사탄수학 P2단계를 풀고 있으며, 사탄수학 P2단계에는 두 다항식의 곱을 주제로 한 문제들이 깨알같이 적혀있다. 사탄수학을 풀던 ‘그’는 더 이상 문제를 푸는 것이 귀찮아졌다. 그래서 자동적으로 문제를 풀어주는 프로그램을 원하지만 ‘그’는 프로그래밍을 배워본 적이 없다. 그래서 프로그래밍을 잘 하는 당신에게 두 다항식의 곱을 구하는 프로그램을 요구했다.",
    "input": "첫 번째 줄에는 첫 번째 다항식의 최고차항의 차수 N과 두 번째 다항식의 최고차항의 차수 M(0≤N, M≤66666)이 주어진다.\n두 번째 줄에는 첫 번째 다항식의 계수가 AN에서 A0까지 순서대로 N+1개 주어지며, 가장 처음의 수는 AN이며 가장 마지막 수는 A0이다.\n세 번째 줄에는 두 번째 다항식의 계수가 BM에서 B0까지 순서대로 M+1개 주어지며, 가장 처음의 수는 BM이며 가장 마지막 수는 B0이다.\n모든 계수는 정수이고  절댓값이 66666이하이다.",
    "output": "위에서 주어진 두 다항식의 곱을 출력한다.\n첫 번째 줄에는 두 다항식의 곱의 최고차항의 차수 L를 출력한다.\n두 번째 줄에는 CL에서 C0까지를 순서대로 출력한다. 이때 L≠0 이면서 CL이 0인 경우는 답으로 인정되지 않는다.",
    "sample": "입력\n\n1 1\n1 2\n1 3\n\n출력\n\n2\n1 5 6 \n\n입력\n\n1 1\n1 -2\n1 2\n\n출력\n\n2\n1 0 -4"
  },
  {
    "id": 597,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 598,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\nint a[5]; // 다이나믹 방법에서는 전에서 구한 답을 저장하는데 배열을 이용한다.\n int main()\n{\n   int i;\n     a[1]=1;            //base\n    for(i=2;i<5;i++){\n       a[i]=a[i-1]+i;  // 점화식(memoization)--점화식을 구하는게 관건이다.\n    }\n     printf(\"%d\\n\",a[4]);\n    return 0;\n}",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "다음으로 귀납적으로 정의하는 방법은 인접한 항과 현재 항과의 관계로 수열의 정의하는 방법이다. 인접한 항이 바로 앞 항일수도 멀리 떨어진 항일수도 있다. 제시된 문제의 경우는 바로 앞 항에 1 을 더하면 현재 항 값을 구할 수 있다.",
    "input": "",
    "output": "",
    "sample": "출처:dovelet"
  },
  {
    "id": 599,
    "title": "seat",
    "time_limit": "1 초",
    "description": "어떤 극장의 좌석은 한 줄로 되어 있으며 왼쪽부터 차례대로 1 번부터 N번까지 번호가 매겨져 있다.",
    "input": "첫째 줄에는 좌석의 개수 N이 입력된다. N은 1 이상 40 이하이다.\n둘째 줄에는 고정석의 개수 M이 입력된다. M은 0 이상 N 이하이다.\n다음 M 개의 줄에는 고정석의 번호가 작은 수부터 큰 수의 순서로 한 줄에 하나씩 입력된다.",
    "output": "주어진 조건을 만족하면서 사람들이 좌석에 앉을 수 있는 방법의 가짓수를 출력한다. 방법의 가짓수는 2,000,000, 000을 넘지\n않는다.",
    "sample": "1 2 3 4 5 6 7 8 9 좌석번호\n1 2 3 4 5 6 7 8 9(o)\n2 1 3 4 6 5 7 8 9(o)\n3 1 2 4 5 6 7 8 9(x)\n1 2 3 5 4 6 7 8 9(x)"
  },
  {
    "id": 600,
    "title": "gc",
    "time_limit": "1 초",
    "description": "1 , 2 , 3 , ... , 2*n-1 , 2*n 의 숫자를 시계 방향으로 일정한 간격으로 호 위에 번호를 부여한 후 한 숫자에서 다른 숫자로 선을 그을 때 교차 하지 않게 그을 수 있는 가짓 수를 출력하는게 문제이다.",
    "input": "n 이 입력으로 주어진다. n 의 범위는 1 부터 19 사이의 정수이다.",
    "output": "가짓수를 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n5"
  },
  {
    "id": 601,
    "title": "scv",
    "time_limit": "1 초",
    "description": "N * N 크기의 맵이 있다. 이 맵에는 미네랄이 군데군데 매장되어 있어서 당신은 SCV 를 이용해 이 미네랄을 채취하려고 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n0 1 0 0 1\n0 0 1 0 0\n1 0 1 1 0\n1 1 0 1 0\n1 0 0 0 1\n\n출력\n\n6"
  },
  {
    "id": 602,
    "title": "unimodal",
    "time_limit": "1 초",
    "description": "양의 정수의 수열이 주어질 때 앞으로 읽던 뒤로 읽던 같은 수열이면 회귀적(palindromic)이라고 한다.",
    "input": "250 을 넘지 않은 양의 정수가 주어진다.",
    "output": "수열의 개수를 출력한다.",
    "sample": "23 11 15 1 37 37 1 15 11 23 \n1 1 2 3 4 7 7 10 7 7 4 3 2 1 1"
  },
  {
    "id": 603,
    "title": "worm",
    "time_limit": "1 초",
    "description": "한 생물학자가 새로 발견된 짚신벌레 종의 생태에 대해 연구하고 있다.",
    "input": "첫째 줄에 a, b, d, N을 나타내는 네 정수가 빈칸 하나를 사이에 두고 차례로 주어진다. 단, 0 < a < b < d ≤ 10,000이고, 1 ≤ N ≤ 1,000,000이다.",
    "output": "첫째 줄에, 수조에 짚신벌레 한 마리를 넣은 지 N일째 되는 날 수조에 살아 있는 짚신벌레의 수를 1000으로 나눈 나머지를 출력한다.",
    "sample": "입력\n\n2 4 6 6\n\n출력\n\n7\n\n입력\n\n3 5 7 20000\n\n출력\n\n609"
  },
  {
    "id": 604,
    "title": "jumping_cow",
    "time_limit": "1 초",
    "description": "농부 존의 소들은 달 위로 점프를 하고 싶다. 그러나 그들은 점프를 할 수 없다. 농부 존이 사는 지역의 마법사들은 그들이 점프를 할 수 있도록 마법약을 섞어서 P (1 ≤ P ≤ 150,000)개를 만들었다. 이 약들은 조제한 순서대로 처방하여야 하나 어떤 것들은 건너 뛸수도 있다.",
    "input": "첫 번째 줄에는 마법사들이 만든 마법약의 개수 P가, 2 ~ P+1번째 줄에는 점프 능력 S가 입력된다.",
    "output": "가장 높이 점프할 수 있는 높이를 첫 번째 줄에 출력한다.",
    "sample": "입력 \n\n8 \n7 \n2 \n1 \n8 \n4 \n3 \n5 \n6 \n\n출력 \n\n17"
  },
  {
    "id": 605,
    "title": "eating_together",
    "time_limit": "1 초",
    "description": "소들은 끼리 끼리 식사를 하고 싶어 한다. 그들은 세 그룹( 편의상 1,2,3 그룹이라 하자)중 한 카드를 가지고 식사하러 차례로 입장한다. 이 카드 번호가 그룹 번호이다.",
    "input": "소 들의 수 N ( 1 <= N <= 30,000) 이 주어진다.  다음 줄에는 소가 받은 카드 번호가 주어진다.",
    "output": "그룹끼리 오름차순 혹은  내림차순으로 만들기 위해 바꾸어야 할 최소 카드 수를 출력한다.",
    "sample": "입력\n\n5\n1\n3\n2\n1\n1\n\n출력\n\n1"
  },
  {
    "id": 606,
    "title": "sumsets",
    "time_limit": "2 초",
    "description": "양의 정수 N (1 <= N <= 1,000,000) 이 주어질 때 2 의 멱집합(2^0,2^1,2^2,...)의 합으로 나타낼수 있는 가지수를 구하는게 문제이다.",
    "input": "N 이 주어진다.",
    "output": "1,2,4,8,16,... 의 합으로 나타낼수 있는 가지수를 마지막 9 자리만 출력한다.",
    "sample": "입력\n\n7\n\n출력\n\n6"
  },
  {
    "id": 607,
    "title": "partition",
    "time_limit": "1 초",
    "description": "n 의 분할수란 n 이하의 수들의 합이 n 이 되는 수열의 개수이다.",
    "input": "n 은 50 이하의 자연수이다.",
    "output": "n 의 분할 수를 출력한다.",
    "sample": "입력\n\n5\n\n출력\n\n7"
  },
  {
    "id": 608,
    "title": "tight",
    "time_limit": "1 초",
    "description": "tight word 란?",
    "input": "k 와 n ( 1 <= n <= 100 ) 이 주어진다.",
    "output": "백분율을 소수 5 자리까지 출력한다.",
    "sample": "입력\n\n4 1\n\n출력\n\n100.00000\n\n입력\n\n2 5\n\n출력\n\n40.74074"
  },
  {
    "id": 609,
    "title": "race1",
    "time_limit": "1 초",
    "description": "전국 자동차 경주 대회가 매년 열리고 있다.이 대회에서는 출발지점부터 도착지점까지 거리가 워낙 멀기 때문에 경주 도중에 각 자동차는 정비소를 방문하여 정비를 받아야 한다.정비소들은 출발지점에서 도착지점으로 가는 길가에 있으며 1 번부터 차례로 번호가 부여 되어 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n140 \n5\n100 30 100 40 50 60 \n5 10 4 11 7 \n\n출력\n\n16"
  },
  {
    "id": 610,
    "title": "pline",
    "time_limit": "1 초",
    "description": "단어의길이가 주어짐. 줄에서 단어가 놓일 때는 한 칸의 공백을 주어야 함. 20 칸을 넘지 못하는 경우 남는 공백의 제곱의 합이 최소로 하는 값 찾기.",
    "input": "첫번째 수는 최대 칸의 수  M 과 숫자의 개수 N 이고 , 숫자가 N 개 주어진다.\n      (M <= 100 , N <= 10000)\n어떤 단어도 M 보다 길지 않다는 것은 보장된다.",
    "output": "최소값을 출력한다.",
    "sample": "case 1:\n12345678901234567890            남은공백  공백의제곱\nxxxx xx x xxxx xx    4 2 1 4 2 .. 3        .. 9 \nxxxxxxxx xxxxx xxx   8 5 3     .. 2        .. 4\nxxx xxxxxxx xxxx xxx 3 7 4 3   .. 0        .. 0\nxxx xxxxxxxxxx       3 10      .. 6        .. 36\n\ncase 2:\n12345678901234567890\nxxxx xx x xxxx xx    4 2 1 4 2 .. 3          .. 9\nxxxxxxxx xxxxx xxx   8 5 3     .. 2          .. 4\nxxx xxxxxxx xxxx     3 7 4     .. 4          .. 16\nxxx xxx xxxxxxxxxx   3 3 10    .. 2          .. 4"
  },
  {
    "id": 611,
    "title": "inflate",
    "time_limit": "1 초",
    "description": "여러분류의 문제가 있고 각 분류에는 무한 개의 문제가 있고 같은 분류의 문제는 같은 시간과 같은 점수를 얻게 된다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n300 4\n100 60\n250 120\n120 100\n35 20\n\n출력\n\n605\n\n보기의 답은 2 번분류에서 2 문제, 4 번 분류에서 3 문제를 선택하는 경우가 최대이다."
  },
  {
    "id": 612,
    "title": "lse",
    "time_limit": "1 초",
    "description": "x 축상에 선분의 시작점과 끝점이 주어질 때 이 선분들이 겹치지 않고 최대로 많은 선분을 만들기 위해 지워야 할 최소 선분의 수와 지울수 있는 방법의 수를 구하는 문제",
    "input": "첫 줄은 선분의 수로 정수 M(M <= 80 ) 이 주어지고 ,\n다음 M 라인은 선분의 시작점 S 와 끝 점 E (-10000 <= S, E <=10000)가 주어진다. S 와 E 는 서로 다른 점이다.",
    "output": "최대로 놓기 위해 지워야하는 선분의 수와 만들 수 있는 경우의 수를 공백으로 구분하여 출력한다",
    "sample": "입력\n\n5\n1 3\n3 5\n4 6\n8 9\n4 6\n\n출력\n\n2 3\n\n입력\n\n1\n1 3\n\n출력\n\n0 1"
  },
  {
    "id": 613,
    "title": "ustair",
    "time_limit": "1 초",
    "description": "계단 오르기 게임은 계단 아래 시작점부터 계단꼭대기에 위치한 도착점까지 가는 게임이다. <그림 1>과 같이 각각의 계단에는 일정한 점수가 쓰여 있는데 계단을 밟으면 그 계단에 쓰여 있는 점수를 얻게 된다.",
    "input": "첫째 줄에 계단의 개수가 주어진다. 둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인\n    계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 계단의 개수는 300 이하의 자연수이고, 계단에 쓰여 있는 점수는\n    10000 이하의 자연수이다.",
    "output": "첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최대값을 출력한다.",
    "sample": "입력\n\n6\n10\n20\n15\n25\n10\n20\n\n출력\n\n75"
  },
  {
    "id": 614,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 615,
    "title": "subset",
    "time_limit": "1 초",
    "description": "1 2 ... N 에서 합이 같은 두 집합으로 나누는게 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n7\n\n출력\n\n4"
  },
  {
    "id": 616,
    "title": "gusul",
    "time_limit": "3 초",
    "description": "두 사람 A와 B가 번갈아 가면서 두 개의 구슬 통에서 몇 개씩의 구슬을 꺼내는 게임을 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n1 3 4\n4 1\n5 5\n10 2\n15 16\n30 14\n\n출력\n\nA\nB\nA\nA\nB"
  },
  {
    "id": 617,
    "title": "bridge",
    "time_limit": "1 초",
    "description": "절대반지를 얻기 위하여 반지원정대가 출발한다. 원정대가 지나가야할 다리는 두 개의 인접한 돌다리로 구성되어 있다. 하나는 <악마의 돌다리>이고 다른 하나는 <천사의 돌다리>이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\nRGS\nRINGSR\nGRGGNS\n\n출력\n\n3\n\n입력\n\nRINGS\nSGNIRSGNIR\nGNIRSGNIRS \n\n출력\n\n0\n\n입력\n\nGG\nGGGGRRRR\nIIIIGGGG\n\n출력\n\n16"
  },
  {
    "id": 618,
    "title": "primes",
    "time_limit": "1 초",
    "description": "양의 정수를 하나이상의 소수들의 합으로 표현하려고 한다. 그러한 표현이 몇가지가 존재하는 지를 알아내는 것 이 문제이다.",
    "input": "입력으로 여러개의 양의 정수가 주어진다. 수의 범위는 2 와  10 000 사이 수이다.( 2 , 10 000 포함 ) \n입력의 끝은 0 이다.",
    "output": "마지막 0 을 제외하고  가능한 가짓수를 출력한다.",
    "sample": "입력\n\n2\n3\n17\n41\n20\n666\n12\n53\n0\n\n출력\n\n1\n1\n2\n3\n0\n0\n1\n2"
  },
  {
    "id": 619,
    "title": "tug",
    "time_limit": "1 초",
    "description": "어떤 모임에서 두 팀으로 나뉘어 줄다리기 시합을 하려고 한다. 사람수가 짝수이면 두 팀의 인원은 같게, 홀수이면 두 팀의 인원은 한 팀이 한 사람 많게 구성되어야 한다.",
    "input": "입력의 첫 줄은 사람 수 n 이 입력되고, 다음 n 줄에는 각 사람의 몸무게가 입력된다.",
    "output": "출력은 몸무게의 차를  최소로 하는 두 양의 정수가 출력된다. 몸무게의 합이 다른 경우\n합이 작은 것이 먼저 출력되도록 한다.",
    "sample": "입력\n\n4\n1\n2\n3\n4\n\n출력\n\n5 5\n\n입력\n\n3\n100\n99\n200\n\n출력\n\n199 200"
  },
  {
    "id": 620,
    "title": "spider (special judge)",
    "time_limit": "1 초",
    "description": "스파이더맨은 건물 사이를 오르락 내리락 하면서 이동한다. 중요한 것은 땅으로 시작해서 마지막은 땅으로 끝나야 한다.",
    "input": "첫 번째 수는 높이의 수 M ( M <= 40 ) 이고 ,\n다음 줄에는 M 개의 양의 정수가 주어진다. 모든 건물의 총 높이는 1000 을 넘지 않는다.",
    "output": "답이 여러개 존재하는 경우 이 중 하나만을 출력한다.",
    "sample": "입력\n\n4\n20 20 20 20 \n\n출력\n\nUDUD \n\n입력\n\n6 \n3 2 5 3 1 2 \n\n출력\n\nUUDUDD \n\n입력\n\n7 \n3 4 2 1 6 4 5\n\n출력\n\nIMPOSSIBLE"
  },
  {
    "id": 621,
    "title": "prefix",
    "time_limit": "1 초",
    "description": "모든 생물은 그들의 일련의 구성 성분(대문자로 표시)으로 나타내어진다. 생물학자들은 그 구성성분을 가장 기본적인 요소로 분해하는데 관심이 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\nA AB BA CA BBC\n.\nABABACABAABC\n\n출력\n\n11"
  },
  {
    "id": 622,
    "title": "mcnugget",
    "time_limit": "1 초",
    "description": "[문제 요약] 주어진 숫자로 만들수 없는 가장 큰 수를 찾는게 문제이다.",
    "input": "입력의 첫 줄은 수 의 개수 N ( 1 <= N <= 10)이 주어지고 , 다음 줄 부터\nN 개의 수 i 가 (1 <=  i <=  256) 주어진다.",
    "output": "만들수 없는 가장 큰 수를 출력한다. 모든 수가 가능하거나 만들 수 없는\n수가 무한히 존재한다면 0 을 출력한다.\n단, 만들 수 없는 수가 존재하는 경우 그 수는 2,000,000,000 보다 작다.",
    "sample": "입력\n\n3\n3\n6\n10\n\n출력\n\n17"
  },
  {
    "id": 623,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\nfor(i = 1;i <= 데이터의 개수 ;i++){\n   max = 0;\n   for(j = i-1; j >= 1;j--)\n      if (data[i] > data[j]) // j 번째 데이터가 i 번째 데이터보다 작으면 \n         if (max < m[j] ) max=m[j];\n   up[i] = max+1;\n}\n //최대 up sequence 구하기 ans\n ans = up[1];\nfor( i = 2 ; i <= 데이터의 개수;i++){\n   if ( ans < up[i] ) ans = up[i];\n}",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "",
    "input": "",
    "output": "",
    "sample": "출처:dovelet"
  },
  {
    "id": 624,
    "title": "us(special judge)",
    "time_limit": "1 초",
    "description": "일련의 수가 주어질 때 이 수들을 앞에서 부터 차례대로 선택하는 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8\n6 2 8 4 7 9 5 1\n\n출력\n\n4\n2 4 7 9"
  },
  {
    "id": 625,
    "title": "tower",
    "time_limit": "1 초",
    "description": "밑면이 정사각형인 직육면체 벽돌들을 사용하여 탑을 쌓고자 한다.탑은 벽돌을 한 개씩 아래에서 위로 쌓으면서 만들어 간다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n25 3 4\n4 4 6\n9 2 3\n16 2 5\n1 5 2\n\n출력\n\n3\n5\n3\n1"
  },
  {
    "id": 626,
    "title": "align",
    "time_limit": "1 초",
    "description": "KOI 어린이 집에는 N 명의 아이들이 있다. 오늘은 소풍을 가는 날이다. 선생님은 1 번 부터, N 번까지 번호가 적혀있는 번호표를 아이들의 가슴에 붙여 주었다. 선생님은 아이들을 효과적으로 보호하기 위해 목적지까지 번호순서대로 일렬로 서서 걸어가도록 하였다. 이동 도중에 보니 아이들의 번호순서가 바뀌었다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n7\n3\n7\n5\n2\n6\n1\n4\n\n출력\n\n4"
  },
  {
    "id": 627,
    "title": "tile_up_block",
    "time_limit": "1 초",
    "description": "철수는 할아버지로부터 생일 선물로 게임세트를 선물로 받았다.",
    "input": "블록의 수는 최대 10000 이고 , 각 블록의 l,m 값은 100 이하이다.",
    "output": "",
    "sample": "입력\n\n3\n3 2\n1 1\n2 3\n\n출력\n\n2\n\n입력\n\n5\n4 2\n2 4\n3 3\n1 1\n5 5\n\n출력\n\n3"
  },
  {
    "id": 628,
    "title": "koi_cpaper",
    "time_limit": "1 초",
    "description": "크기가 모두 다른 직사각형 모양의 색종이가 여러 장 있다. 색종이를 하나씩 올려놓아, 되도록 많은 장수의 색종이들을 쌓으려고 한다. 새로 한 장의 색종이를 올려놓을 때는 지금까지 쌓아 놓은 색종이들 중 맨 위의 색종이 위에 올려놓아야 하며, 아래의 두 조건을 모두 만족해야 한다.",
    "input": "첫 번째 줄에는 색종이 장수가 주어진다. 다음 줄부터 각 줄에 색종이의 두 변의 길이가 주어진다. 두 변의 길이는 한 칸 띄어 주어진다. 색종이의 최대 장수는 100이고, 각 변의 길이는 1000보다 작은 자연수이다.",
    "output": "첫 번째 줄에 쌓을 수 있는 최대 색종이 장수를 출력한다.",
    "sample": "입력\n \n7\n1 2\n8 7\n20 10\n20 20\n15 12\n12 14\n11 12\n \n출력\n \n6"
  },
  {
    "id": 629,
    "title": "buy_lower",
    "time_limit": "1 초",
    "description": "주식 시장에서 더 싸게 사는 것은 성공의 공식이다. 주식을 살 때 마다 전 날 산 가격보다 더 싼 가격으로 사야만 한다.",
    "input": "날 수 N ( 1 <= N <= 5000)\n다음 줄 부터 한 줄에 10 개씩의 정수가 주어진다. 마지막 줄은 10 개 보다 적을 수 있다.",
    "output": "한 줄에 두개의 정수를 출력한다.\n첫 수는 down sequence 의 최대 길이\n다음 수는 최대 down sequence 만들 수 있는 나열의 수(31 비트 정수형 안에 들어가는 것은 보장된다) 만약 날이 다르더라도 나열이 같으면 같은 수열로 간주 한다.",
    "sample": "날    1  2  3  4  5  6  7  8  9 10 11 12\n 가격 68 69 54 64 68 64 70 67 78 62 98 87"
  },
  {
    "id": 630,
    "title": "pongdang",
    "time_limit": "1 초",
    "description": "숫자가 쓰여진 징검다리를 건너는 경우 밟은 징검다리의 숫자 만큼의 돈을 지불하는 경우 최소의 돈으로 건너는 방법을 구하는 문제이다. (단 ,2 칸 까지 점프 할 수 있다고 하자.)",
    "input": "",
    "output": "",
    "sample": "입력\n\n10\n3 2 8 2 4 9 1 2 3 4\n\n출력\n\n7"
  },
  {
    "id": 631,
    "title": "dice_game(special judge)",
    "time_limit": "1 초",
    "description": "철수는 친구들과 함께 주사위 게임을 하고 있었다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n20\n6 4 3 3 1 2 1 6 5 4 2 3 2 1 3 1 3 2 5 6\n\n출력\n\n35\n++-+-+-++-++-++-+-++"
  },
  {
    "id": 632,
    "title": "dungdal",
    "time_limit": "1 초",
    "description": "덩달이가 길을 걷고 있는데, 산 신령이 나타나서 길에 돈을 쭉 놓으면서",
    "input": "",
    "output": "",
    "sample": "입력\n\n8\n5 7 10 1 2 10 11 6\n\n출력\n\n38"
  },
  {
    "id": 633,
    "title": "maxproduct",
    "time_limit": "1 초",
    "description": "N (1 <= N <= 10,000) 개의 양의 실수가 주어질 때 1 개 이상의 연속된 수들의 곱이 최대가 되는 부분을 찾아 그 곱을 출력하는 프로그램을 작성하시오.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8\n1.1\n0.7\n1.3\n0.9\n1.4\n0.8\n0.7\n1.4\n\n출력\n\n1.638"
  },
  {
    "id": 634,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 635,
    "title": "meeting",
    "time_limit": "1 초",
    "description": "하나의 회의실이 있고, 여러 회의들이 예약되어 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n11\n1 4\n3 5\n0 6\n5 7\n3 8\n5 9\n6 10\n8 11\n8 12\n2 13\n12 14\n\n출력\n\n4"
  },
  {
    "id": 636,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/p\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 637,
    "title": "mns",
    "time_limit": "1 초",
    "description": "한강에 다리가 아래와 같이 놓여 있는 데 도시 개발 계획의 오류로 이로 인해 도시미관을 크게 해치게 되었다. 이를 바로 잡기 위해 교차하는 다리를 모두 제거 하려 한다. 이 때 교차하지 않는 다리의 최대 개수를 구하는 프로그램을 작성하시오.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10\n8 7 4 2 5 1 9 3 10 6\n\n출력\n\n4"
  },
  {
    "id": 638,
    "title": "lcs (special judge)",
    "time_limit": "1 초",
    "description": "두 개의 수열 X,Y 가 있다. 이 두 수열의 공통의 부분 수열 중에 가장 길이가 긴 것의 길이를 구하라.",
    "input": "첫 줄에는 수열 X 와 Y 의 길이 ( 1 이상 1000 이하 )가 각각 주어진다.\n둘 째줄과 셋 째줄에는 수열 X,Y 가 각각 주어진다. 각 수는 0 이상 100 000 이하의 정수",
    "output": "첫 줄에는 찾은 공통의 부분 수열의 최대 길이,\n둘 째줄에는 공통 부분 수열을 출력한다.",
    "sample": "입력\n\n6 7\n2 4 3 1 2 1\n1 2 3 2 4 1 2\n\n출력\n\n4\n2 3 2 1"
  },
  {
    "id": 639,
    "title": "zipper",
    "time_limit": "1 초",
    "description": "Given three strings, you are to determine whether the third string can be formed by combining the characters in the first two strings. The first two strings can be mixed arbitrarily, but each must stay in its original order.",
    "input": "The first line of input contains a single positive integer from 1 through 1000. It represents the number of data sets to follow. The processing for each data set is identical. The data sets appear on the following lines, one data set per line.\nFor each data set, the line of input consists of three strings, separated by a single space. All strings are composed of upper and lower case letters only. The length of the third string is always the sum of the lengths of the first two strings. The first two strings will have lengths between 1 and 200 characters, inclusive.",
    "output": "For each data set, print: \nData set n: yes \n\nif the third string can be formed from the first two, or \nData set n: no \n\nif it cannot. Of course n should be replaced by the data set number. See the sample output below for an example.",
    "sample": "String A: cat \nString B: tree \nString C: tcraete"
  },
  {
    "id": 640,
    "title": "palin",
    "time_limit": "3 초",
    "description": "좌우 같은 말(palindrome)이란 글자가 좌우 대칭을 이루고 있어서, 왼쪽부터 읽으나 오른쪽 부터 읽으나 같은 의미가 되는 말을 일컫는다.",
    "input": "첫째 줄에는 문자열의 길이 N (3 <= N <= 5000)이 들어 있고,\n둘째 줄에는 길이가 N 인 문자열이 들어있다. 문자열에는 알파벳 대소문자와 숫자(0 ~ 9 )가 들어 있다. 대 소문자는 구분하도록 한다.",
    "output": "입력된 문자열을 좌우 같은 말로 만들기 위해 더해야 하는 문자 개수의 최소를 첫째 줄에 출력하면 된다.",
    "sample": "입력 \n\n5\nAb3bd\n\n출력\n\n2"
  },
  {
    "id": 641,
    "title": "crossed_matching",
    "time_limit": "1 초",
    "description": "양의 정수 수열을 가지는 두 개의 행이 주어진다. 아래 행에서 위 행으로 같은 번호를 가지는 수 끼리 연결될 수 있다.",
    "input": "첫 줄에는 위점의 수 , 아래점의 수 가 입력된다. 위,아래 점의 개수는 최대 100 개까지이다.",
    "output": "교차하는 최대 선분의 개수를 출력한다.",
    "sample": "입력\n\n6 6\n1 3 1 3 1 3\n3 1 3 1 3 1\n\n출력\n\n6\n\n입력\n\n4 4\n1 1 3 3 \n1 1 3 3 \n\n출력\n\n0\n\n입력\n\n12 11\n1 2 3 3 2 4 1 5 1 3 5 10\n3 1 2 3 2 4 12 1 5 5 3 \n\n출력\n\n8"
  },
  {
    "id": 642,
    "title": "similarity(special judge)",
    "time_limit": "1 초",
    "description": "인간의 유전자가 4 개의 뉴클레오티드(A,C,G,T)로 구성된 문자열의 형태로 표시된다. 생물학자들은 질병을 고치고 , 새로운 약을 만드는데 도움을 주기 때문에 , 인간의 유전자의 기능을 알아내려는데 많은 관심이 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n7 AGTGATG\n5 GTTAG\n\n출력\n\n14\nAGTGATG\n-GTTA-G"
  },
  {
    "id": 643,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 644,
    "title": "01knapsack",
    "time_limit": "1 초",
    "description": "각각의 보석의 무게(weight)와 값(value)을 가지고 있다. 무게 n 으로 어떤 보석을 가져 가는게 가장 많은 이윤(?)을 취할 수 있는 가를 구하는게 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n30\n3\n5 50\n10 60\n20 140\n\n출력\n\n200"
  },
  {
    "id": 645,
    "title": "prime_sum(open)",
    "time_limit": "1 초",
    "description": "7보다 큰 모든 수는 한 개 이상의 소수의 합으로 나타낼 수 있다고 한다.",
    "input": "n이 입력된다.",
    "output": "만들 수 있는 방법의 가짓수를 출력한다. 정답의 개수가 크기 때문에 123,456,789로 나눈 나머지를 출력한다.",
    "sample": "입력\n\n20\n\n출력\n\n4"
  },
  {
    "id": 646,
    "title": "playoff",
    "time_limit": "1 초",
    "description": "선수 A, B 두 명이 겨뤄서 먼저 N번 이기는 사람이 상금을 차지하는 플레이오프 게임을 생각해 보자. 그런데 게임 도중에, 불가피한 경우가 생겨서, 도중에 게임을 끝내려 한다. 상금을 분배를 해야 하는데, 앞으로 두 선수가 각각 우승할 확률을 따져서 그 비율로 나누려 한다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n4 1 0\n\n출력\n\n21 32\n11 32"
  },
  {
    "id": 647,
    "title": "chess",
    "time_limit": "1 초",
    "description": "체스 연합회는 일년에 한 번씩 열리는 체스 대회를 준비하고 있다. 이 대회는 백팀 15 명 흑팀 15 명으로 총 30 명의 선수가 필요하다.",
    "input": "입력은 일련의 라인으로 구성된다. 각 라인은 플레이어가 흰색으로 경기 할경우의 능력치와 검은색으로 플레이할 경우의 능력\n치가 주어진다. 30 라인보다 많고 1000 라인보다 작다.\n파일의 끝은 EOF 이다.",
    "output": "최상의 팀의 점수( 흰색팀의 점수의 합 + 검은색 팀의 점수의 합)을 출력한다.",
    "sample": "입력\n\n87 84\n66 78\n86 94\n93 87\n72 100\n78 63\n60 91\n77 64\n77 91\n87 73\n69 62\n80 68\n81 83\n74 63\n86 68\n53 80\n59 73\n68 70\n57 94\n93 62\n74 80\n70 72\n88 85\n75 99\n71 66\n77 64\n81 92\n74 57\n71 63\n82 97\n76 56\n\n출력\n\n2506"
  },
  {
    "id": 648,
    "title": "bargain",
    "time_limit": "1 초",
    "description": "어떤 가게에 각 물건 마다 정수 단위로 가격이 매겨져 있다. 예를 들어 하나의 꽃은 2 원 꽃 병의 가격은 5 원 ...",
    "input": "",
    "output": "",
    "sample": "입력\n\n2\n1 7 3 5\n2 7 1 8 2 10\n2\n7 3 2\n8 2 5\n\n출력\n\n14"
  },
  {
    "id": 649,
    "title": "coin",
    "time_limit": "1 초",
    "description": "2 달러이내의 돈에 대하여 아래와 같은 동전으로 만들수 있는 거스름돈의 방법의 수를 구하는 프로그램을 작성하라.",
    "input": "",
    "output": "",
    "sample": "Penny - $0.01\nNickel - $0.05\nDime - $0.10\nQuarter - $0.25\nHalf Dollar - $0.50"
  },
  {
    "id": 650,
    "title": "이런 류의 확장 방법은 하나씩 녹여가면서 큰 덩어리를 만들어간다. 이 하나를 큰 덩이에 녹이는 것이 유리한 가 아니면 버리는 것이 유리한가를 판단하면서 확장 .... 최종적으로 전체를 고려한 큰 덩이를 만든다.\nA 기업에서 답을 구하고\n이를 이용하여 A,B 기업 기업에서 답을 구하고\n이를 이용하여 마지막 A,B,C 기업으로 확장하면서 답을 구함.",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "",
    "input": "",
    "output": "",
    "sample": ""
  },
  {
    "id": 651,
    "title": "invest (special judge)",
    "time_limit": "1 초",
    "description": "기업에 자금을 투자하면 기업은 그 자금으로 이익을 창출해 일정한 금액을 투자자에게 되돌려 준다. 기업이 여러 개가 있다면 가지고 있는 돈을 적절히 나누어서 투자하여 최대의 이익을 얻으면 된다. 어떤 기업에 자금을 투자하지 않으면 그 기업으로 부터는 당연히 얻게 되는 이익도 없다. 또, 한 기업에 더 많은 돈을 투자하면 적은 돈을 투자하는 것보다 더 많은 이익을 되돌려 준다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n4 3\n2 1 3\n5 4 4\n7 9 9\n8 11 10\n\n출력\n\n12\n0 3 1"
  },
  {
    "id": 652,
    "title": "bits",
    "time_limit": "1 초",
    "description": "두 수 n , m 이 입력으로 주어진다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4 2\n\n출력\n\n11"
  },
  {
    "id": 653,
    "title": "stringsobits",
    "time_limit": "1 초",
    "description": "N , L , I 세개의 정수가 주어진다.",
    "input": "한 줄에 N (1 <= N <= 31) , L (1 <= L <= N) , 답이 나올수 없는 I 는 입력되지 않는 것으로 한다.",
    "output": "I 번째 수를 출력한다.",
    "sample": "입력\n\n5 3 19\n\n출력\n\n10011"
  },
  {
    "id": 654,
    "title": "bar_code",
    "time_limit": "1 초",
    "description": "Bar code 는 진하고 연한(진한 바를 1 , 연한 바를 0) bar 로 교대로 이루어진다. 시작은 진한 바로 시작한다.",
    "input": "첫 줄에는 n , k , m (1 <= n ,k, m<= 33)이 표현되어 있다.\n다음 줄에는 테스트 데이터 수 s( 0 <= s <= 100 ) , 다음 s 줄에는 줄 당 하나의 문자열이 주어진다.\n다음 s 줄에는 그림 2 와 같은 형태의 문자열이 주어진다.",
    "output": "첫 줄에는 BC(n, k, m)으로 만들수 있는 가지 수를 출력하고 ,\n다음 s 줄에는 찾고자 하는 문자열의 차례를 출력한다.",
    "sample": "입력\n\n7 4 3\n5\n1001110\n1110110\n1001100\n1001110\n1000100\n\n출력\n\n16\n4\n15\n3\n4\n0"
  },
  {
    "id": 655,
    "title": "apple_catching",
    "time_limit": "1 초",
    "description": "두 그루의 사과 나무( 1 번 나무, 2 번 나무) 가 있고 , 원숭이가 최초에 있는 지점은 1 번 나무.",
    "input": "두 개의 정수 분 T (1 <= T <= 1000 ) , 최대 이동횟수 W ( 1 <= W <= 30) 가 주어진다.",
    "output": "먹을 수 있는 사과의 최대 개수를 출력한다.",
    "sample": "입력\n\n7 2 \n2\n1\n1\n2\n2\n1\n1\n\n출력\n\n6"
  },
  {
    "id": 656,
    "title": "tiling",
    "time_limit": "1 초",
    "description": "2*1 혹은 2*2 타일로 2*n 사각형을 채우는 방법은 몇 가지인가?",
    "input": "",
    "output": "",
    "sample": "입력\n\n2\n\n출력\n\n3\n\n입력\n\n8\n\n출력\n\n171"
  },
  {
    "id": 657,
    "title": "digit_card",
    "time_limit": "1 초",
    "description": "1 부터 34 까지의 수가 적힌 카드가 충분히 많이 있다. 이들 중 몇 장을 일렬로 늘어놓고 , 그 숫자를 차례로 적었다.",
    "input": "",
    "output": "",
    "sample": "2  7  12   3"
  },
  {
    "id": 658,
    "title": "spam",
    "time_limit": "1 초",
    "description": "스팸필터를 피하기 위해서 스패머는 해당 문자를 비슷한 스팸 문자로 대체하는 방법을 사용한다. 대체된 문자열을 Φ(K) 라 하자.",
    "input": "1글자에서 100글자 사이의 문자열 S가 입력된다.",
    "output": "입력한 문자열 S를 가지고 스팸회피 문자로 대체한 문자열 K가 있을 때, K로 대체할 수 있는 문장의 개수 M을 출력한다. 이해가 가지 않을 경우 '보충 설명'을 참고.",
    "sample": "A 4                \nB |3                                         \nC (                       \nD |)                \nE 3                              \nF |=                            \nG 6                                    \nH #                                 \nI |                                  \nJ _|                        \nK |<                        \nL |_                        \nM |\\/|    \nN |\\| \nO 0 \nP |0 \nQ (,) \nR |? \nS 5 \nT 7 \nU |_| \nV \\/ \nW \\/\\/ \nX >< \nY -/ \nZ 2"
  },
  {
    "id": 659,
    "title": "c_perm",
    "time_limit": "1 초",
    "description": "1 2 3 이 주어질 때 이를 배열 하는 방법은",
    "input": "n 이 주어진다. n 은 12 이하의 자연수이다.",
    "output": "완전순열의 가짓수를 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n2"
  },
  {
    "id": 660,
    "title": "big_barn",
    "time_limit": "1 초",
    "description": "농부 존은 그의 정사각형 농장에 정사각형 우리를 가장 크게 두고자 하는데 농장에 있는 나무를 베는 것을 극도로 싫어한다. 그의 농장은 N*N 형태의 셀로 나누어져 있고 나무를 포함하는 셀의 리스트가 주어진다.",
    "input": "첫 번째 라인은 2 개의 수가 N , T 가 입력으로 주어진다. N 은 농장의 크기이고 , T 는 나무의 수이다. 1 <= N <= 1000 , 1 <= T <= 10,000 이다.\n다음 T 라인은 나무가 있는 셀의 위치로 행,열로 주어진다.",
    "output": "가장 큰 우리의 크기를 출력한다.",
    "sample": "1 2 3 4 5 6 7 8\n1 . . . . . . . .\n2 . # . . . # . .\n3 . . . . . . . .\n4 . . . . . . . .\n5 . . . . . . . .\n6 . . # . . . . .\n7 . . . . . . . .\n8 . . . . . . . ."
  },
  {
    "id": 661,
    "title": "range",
    "time_limit": "1 초",
    "description": "1 로 채워진 2*2 이상의 정사각형 수를 찾는 것이 문제이다.",
    "input": "입력의 첫째 줄은 주어진 정방행렬의 크기 N (2 <= N <= 250)이 주어진다. \n\n다음 N 줄에는 각 N 개의 0 혹은 1 이 주어진다.",
    "output": "가장 작은 정사각형 부터 정렬해서 출력한다.\n각 줄당 첫번째 수는 정사각형의 크기이고 다음 줄은 개수이다.\n만약 존재하는 정사각형이 없으면 0 을 출력한다.",
    "sample": "010\n111\n111"
  },
  {
    "id": 662,
    "title": "tickets",
    "time_limit": "1 초",
    "description": "ticket 번호 중 앞의 반의 합과 뒤의 반의 합이 같은 번호를 lucky ticket 이라 한다.",
    "input": "10 이하의 짝수 자리수가 입력으로 주어진다.",
    "output": "만들 수 있는 lucky ticket 의 가지수를 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n670"
  },
  {
    "id": 663,
    "title": "dice_stack",
    "time_limit": "1 초",
    "description": "천수는 여러 종류의 주사위를 가지고 쌓기 놀이를 하고 있다. 주사위의 모양은 모두 크기가 같은 정육면체이며 각 면에는 1 부터 6 까지의 숫자가 하나씩 적혀있다. 그러나 보통 주사위처럼 마주 보는 면에 적혀진 숫자의 합이 반드시 7이 되는 것은 아니다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n2 3 1 6 5 4\n3 1 2 4 6 5\n5 6 4 1 3 2\n1 3 6 2 4 5\n4 1 6 5 2 3\n \n출력\n\n29\n\n* 입력 예의 주사위들을 쌓아서 출력 예와 같은 합을 얻으려면 아래 그림과 같이 쌓으면 된다."
  },
  {
    "id": 664,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n#include <stdio.h>\nint data[101];\nint dy[51][101];\n int diff(int m,int n)\n{\n   int i,max,min;\n    max = min = data[m];\n    for( i = m +1 ; i <= n ; i++){\n      if ( max < data[i] ) max = data[i];\n      if ( min > data[i] ) min = data[i];\n   }\n    return max - min;\n}\n int main()\n{\n   int i,j,k;\n   int n,ng,max,tmp;\n    scanf(\"%d %d\",&n,&ng);\n    for( i = 1 ; i <= n ; i++){\n      scanf(\"%d\",&data[i]);\n   }\n    for( i = 1 ; i <= ng ; i++){\n      for( j = i*2 ; j <= n ; j++){\n         max = -1;\n         for( k = 2*(i-1) ; k <= j-2 ; k++){\n            tmp = diff(k+1,j);\n            if ( dy[i-1][k] + tmp> max ) {\n               max = dy[i-1][k] + tmp;\n            }\n         }\n         dy[i][j] = max;\n      }\n   }\n    int ans=-1;\n    for( i = ng*2 ; i <= n ; i++){\n      if ( dy[ng][i] > ans ) ans = dy[ng][i];\n   }\n    printf(\"%d\\n\",ans);\n}",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "입력 데이터가 다음과 같고 3 구간으로 나눌 때의 최대값을 알아보겠습니다.",
    "input": "",
    "output": "",
    "sample": "출처:dovelet"
  },
  {
    "id": 665,
    "title": "ninterval",
    "time_limit": "1 초",
    "description": "0 이상 500 이하의 숫자들로 이루어진 수열이 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10\n4\n2 5 7 1 3 4 8 6 9 3\n\n출력\n\n20"
  },
  {
    "id": 666,
    "title": "koi_bead(special_judge)",
    "time_limit": "1 초",
    "description": "N개의 숫자 구슬이 <그림 1>과 같이 막대에 꿰어져 일자로 놓여 있다. 이들 구슬은 막대에서 빼낼 수 없고 따라서 그 순서를 바꿀 수 없다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8 3\n5 4 2 6 9 3 8 7\n\n출력\n\n17\n4 2 2"
  },
  {
    "id": 667,
    "title": "locomotive",
    "time_limit": "1 초",
    "description": "기차는 맨 앞에 있는 기관차 1대가 손님이 탄 객차 여러 칸을 끌고 간다. 기관차가 고장나면 기차를 운행할 수 없게 되므로 최근 철도청은 기관차 고장에 대비하여 몇몇 역에 소형 기관차 3대를 배치하기로 결정하였다. 소형 기관차는 평소에 이용하는 기관차보다 훨씬 적은 수의 객차만을 끌 수 있다.",
    "input": "",
    "output": "",
    "sample": "(1) (2) (3) (4) (5) (6) (7)\n----------------------------\n35  40  50  10  30  45  60"
  },
  {
    "id": 668,
    "title": "fshop",
    "time_limit": "1 초",
    "description": "꽃가게의 쇼 윈도우를 꾸미려고 한다. 우리는 여러개의 꽃과 꽃병을 가지고 있다. 꽃 들은 서로 다른 꽃이고 꽃병들은 선반 위에 고정되어 있다. 제일 왼쪽에 있는 꽃병이 1 번 꽃병이고, 다음이 2 번 순으로 번호가 부여되어 있다. 꽃들도 1 번 부터 번호가 부여 되어 있다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n3  5    \n7  23  -5  -24  16 \n5  21  -4  10   23 \n-21  5  -4  -20  20 \n\n출력 \n\n53"
  },
  {
    "id": 669,
    "title": "travel",
    "time_limit": "1 초",
    "description": "이 도시 저 도시를 여행하고 있다.",
    "input": "첫 줄은 두 개의 양의 정수 n , m 이 주어진다.\n다음 n 줄 당 n 개의 수가 입력된다. ( i , j ) 는 i 에서 j 도시로 이동하는데 드는 비용이다. i = j 이면 i 도시에 머무는데 드는 비용이다. 빈 줄이 하나 입력된 후에\nm 줄에 n 개의 정수가 입력된다. ( i , j ) 는 i 번째 날에 도시 j 에 머무는 경우 수입이다. n ,m 은 100 이하이다.",
    "output": "최대 수입을 출력한다.",
    "sample": "입력\n\n3 3\n3 1 2\n2 3 1\n1 3 2\n\n2 4 3\n4 3 2\n3 4 2\n\n출력\n\n8"
  },
  {
    "id": 670,
    "title": "milage",
    "time_limit": "1 초",
    "description": "1 부터 N 까지 번호가 붙은 도시들이 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4 2 \n12 13 8 \n11 6 \n9 \n\n출력\n\n23"
  },
  {
    "id": 671,
    "title": "ep",
    "time_limit": "2 초",
    "description": "큰 길이 직선으로 쭉 뻗어있고, 길 옆으로 여러 마을이 자리잡고 있다. 이 문제에서는 큰 길은 정수가 늘어서는 수평선이고, 각 마을의 위치는 수평선 위의 한 점으로 표현된다. 마을들의 좌표가 겹치는 경우는 없다. 마을 사이의 거리는 수평선 상에 있는 좌표의 차이의 절대값으로 정의 된다.",
    "input": "첫 줄에는 숫자가 두 개 있으며, 각각 마을의 수 \nV(1 <= V <=300)와 짓고자 하는 우체국의 수 P(1 <= P <= 30, P <= V)를\n나타낸다. 다음 줄에는 각 마을의 위치를 나타내는 V 개의 정수 좌표가 나온다. 좌표는\n오름차순으로 정렬되어 있다. 각 좌표의 범위는  1 <= X <= 10000 이다.",
    "output": "각 마을과 거기서 가장 가까운 사이\n거리들의 합의 값을 나타내는 정수 S 를 출력한다.",
    "sample": "입력 \n\n10 5\n1 2 3 6 7 9 11 22 44 50\n\n출력 \n\n9"
  },
  {
    "id": 672,
    "title": "keypad",
    "time_limit": "1 초",
    "description": "휴대폰이 일반화되면서 문자 메시지를 많이 주고 받는다. 휴대폰의 키패드에는 하나의 번호에 여러 개의 알파벳이 할당되어 있기 때문에 문자 메시지를 보낼 때 한 번호를 여러 번 눌러야 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n1 4\n0\ncdko\n40179\n90922\n55086\n17254\n\n출력\n\n0: cdko\n\n입력\n\n3 5\n456\ndefgh\n10\n21\n3\n5\n12\n\n출력\n\n4: d\n5: efg\n6: h"
  },
  {
    "id": 673,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 674,
    "title": "interval(special judge)",
    "time_limit": "1 초",
    "description": "0 이상 500 이하의 숫자들로 이루어진 수열이 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10\n2 5 7 1 3 4 8 6 9 3\n\n출력\n\n20\n4\n2 2 3 3"
  },
  {
    "id": 675,
    "title": "treat",
    "time_limit": "1 초",
    "description": "농부 존은 많은 양의 우유로 경제적으로 도움을 주는 소들을 위해 N ( 1 <= N <= 2000) 개의 맛있는 과자를 샀다. 존은 하루에 하나의 과자를 팔아서 주어진 시간 내에 최대의 돈을 벌기를 원한다.",
    "input": "과자의 수 N 이 입력으로 주어지고 , 다음 N 개의 v(i) 가 주어진다.( i = 1,2,3...n)",
    "output": "최대 값을 출력한다.",
    "sample": "입력\n\n5\n1\n3\n1\n5\n2\n\n출력\n\n43"
  },
  {
    "id": 676,
    "title": "game",
    "time_limit": "1 초",
    "description": "2 인용 게임이다.",
    "input": "입력의 첫 라인은 나열된 수의 개수 N (2 <= N <= 100)이 주어지고 , 다음 줄 부터는 \n      왼쪽에서 오른쪽으로 나열된 N 개의 수가 입력된다. 각 수는 1 이상 200 이하이다.",
    "output": "두 개의 수를 출력한다. 각각  플레이어 1 의 점수, 플레이어 2 의 점수이다.",
    "sample": "입력\n\n6\n4 7 2 9 5 2\n\n출력\n\n18 11"
  },
  {
    "id": 677,
    "title": "two_ends",
    "time_limit": "1 초",
    "description": "두 명이서 교대로 수열의 양쪽 끝을 선택하는 게임을 한다.",
    "input": "첫 번째 수는 수열의 개수이고  1000 을  넘지 않는 짝수이고  , 각 플레이어의 점수는 1000000 를 넘지 않는다.",
    "output": "출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n4 \n3 2 10 4\n\n출력\n\nthe greedy strategy might lose by as many as 7 points."
  },
  {
    "id": 678,
    "title": "mulpuz",
    "time_limit": "1 초",
    "description": "일련의 카드가 나열되어 있을 때 수 하나를 선택하면 그 수와 왼쪽 , 오른쪽 수의 곱이 세 수로 대치 된다. 물론 제일 왼쪽 수와 오른 쪽 수를 택할 수는 없다. 이렇게 하는 방법 중 마지막으로 남는 수가 최소 값이 되게 하는 것이다.",
    "input": "The first line of the input contains the number of cards N (3 <= N <= 100). The second line contains N integers in the range from 1 to 100, separated by spaces.",
    "output": "Output must contain a single integer - the minimal score.",
    "sample": "입력\n\n6\n10 1 50 50 20 5\n\n출력\n\n3650"
  },
  {
    "id": 679,
    "title": "chord",
    "time_limit": "1 초",
    "description": "평면상에 있는 원의 둘레에 100 개의 점이 일정한 간격으로 시계방향으로 번호가 1,2,...,100 으로 주어져 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n97 31\n1 45\n27 5\n11 65\n43 72\n\n출력\n\n3"
  },
  {
    "id": 680,
    "title": "max_exp",
    "time_limit": "1 초",
    "description": "아래와 같이 + , - , * ,/ 기호로 이루어진 수식이 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8\n1+2*3-9*1-5+9/2\n\n출력\n\n225"
  },
  {
    "id": 681,
    "title": "matrixprod",
    "time_limit": "1 초",
    "description": "A 행렬이 m * k 행렬이고 , B 행렬이 k * n 행렬이면 두 행렬의 곱 A * B 는 m * n * k 번의 곱으로 구할 수 있다. 물론 두 곱이 가능하기 위해서는 A 행렬의 렬의 수 와 B 행렬의 행의 수가 동일해야 한다. 또한 결과 행렬은 m * n 행렬이 된다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5\n2  5  3  6  4  9\n\n출력\n\n186"
  },
  {
    "id": 682,
    "title": "polygon",
    "time_limit": "1 초",
    "description": "폴리곤 게임은 다각형의 꼭지점과 선분을 이용하는 1 인용 게임이다. 처음 다각형의 N 개의 꼭지점과 선분이 주어진다.",
    "input": "첫 줄은 꼭지점 N (3 <= N <= 50) 의 개수이며,\n다음 줄 부터는 선분의 연산자 정보와 선분 사이에 연결된 꼭지점이 가진 숫자가 번갈아 가며 나온다. 선분은 번호가 낮은 순이다. t 는 더하기를 , x 는 곱하기를 의미한다.\n선분 1 부터 시작하여 t,t,x,x 사이에 그 사이에 연결된 꼭지점이 가지고 있는 수가 나옴을 알수 있다.",
    "output": "첫 줄에는 반드시 이 폴리곤에서 낼 수 있는 최고 점수가 들어가야 한다.\n두 번째 줄에는 최고 점수를 얻기 위해 제일 처음 없애야 하는 선분을 출력한다.\n둘 이상 존재한다면 오름차순으로 공백 한 칸을 구분하여 기록해야 한다. \n어떤 연산을 수행하더라도 꼭지점에 있는 수는  -32768 ~ 32767 라고 한다.",
    "sample": "입력 \n\n4\nt -7 t 4 x 2 x 5\n\n출력\n\n33\n1 2"
  },
  {
    "id": 683,
    "title": "black_white(special judge)",
    "time_limit": "1 초",
    "description": "2n 개의 점이 x 축의 좌표 1,2,3, ...,2n 에 놓여 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10\n1110100010\n\n출력\n\n31\n1 8\n2 7\n3 4\n5 6\n9 10\n\n입력\n\n12\n111000111000\n\n출력\n\n40\n1 12\n2 5\n3 4\n6 7\n8 11\n9 10"
  },
  {
    "id": 684,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 685,
    "title": "numtri",
    "time_limit": "1 초",
    "description": "숫자 삼각형이 존재할 때 꼭대기(top)에서 아래(bottom)로 내려올 때 합이 가장 큰 값을 구하는 게 문제이다.",
    "input": "입력의 첫 줄은 층의 수 R (1 <= R <= 1000) 이 주어진다.\n다음 줄 부터는 각 층에 해당 하는 숫자가 주어진다. 각 숫자는 100 보다 크지 않는 양의 정수이다.",
    "output": "오른쪽 , 왼쪽 아래 대각선으로 이동하면서 제일 아래층에 도달 할 때의 합을 출력한다.",
    "sample": "입력\n\n5\n7\n3 8\n8 1 0\n2 7 4 4\n4 5 2 6 5\n\n출력\n\n30"
  },
  {
    "id": 686,
    "title": "anniversary",
    "time_limit": "1 초",
    "description": "대학의 80 주년 기념하기 위해 파티를 계획하고 있다. 이 대학은 트리 형태의 상하 구조로 이뤄어져 있다. 즉 총장을 루트로 상하로 직속관계가 이루어져 있다.",
    "input": "첫 라인은 인원 수 N (1 <= N <= 6000)이고\n다음 n 라인은 친밀도 ( -128 에서 127 까지의 정수)의 점수가 주어지고 다음 N-1 줄까지 L k 형태로 주어진다. k 는 L 의 직속 상관을 의미한다. 0 0 은 입력의 끝이다.",
    "output": "친밀도의 최대 총합을 출력한다.",
    "sample": "입력\n\n7\n1\n1\n1\n1\n1\n1\n1\n1 3\n2 3\n6 4\n7 4\n4 5\n3 5\n0 0\n\n출력\n\n5"
  },
  {
    "id": 687,
    "title": "batch",
    "time_limit": "1 초",
    "description": "한 기계가 있고 , 그 기계가 차례대로 처리해야 할 작업들이 N 개 있다. 각 작업들은 1 부터 N 까지 번호가 매겨져 있다. 기계동작의 효율을 위해 , 우리는 작업들을 하나 이상의 묶음으로 쪼개려고 한다. 예를들어 작업이 여섯 개 있으면 {1,2,3} ,{4} , {5,6} 이나 {1,2} , {3,4,5} , {6} 처럼 작업의 순서만 유지하면 어떤 식으로든 가능하다.",
    "input": "첫째 줄에는 작업의 총 개수 N(1 <= N <= 1000) 이 있다.\n둘째 줄에는 묶음이 바뀔 때의 기계 시동 시간인 정수 S 0 <= S <= 50 가 있다.\n그리고 다음 N 줄에는 1 , 2, ... , N 작업에 대해 그 작업의 처리 시간인 Ti (1 <= Ti <= 100) 와 비용계수인 Fi ( Fi <= 100)이 순서대로 들어있다.",
    "output": "작업 분할 비용의 최소값을 나타내는 자연수 하나를 한 줄에다 출력한다.",
    "sample": "입력\n\n2\n50\n100 100\n100 100\n\n출력\n\n45000\n\n입력 \n\n5\n1\n1 3\n3 2\n4 3\n2 3\n1 4\n\n출력\n\n153"
  },
  {
    "id": 688,
    "title": "ba",
    "time_limit": "1 초",
    "description": "한 기계가 있고 , 그 기계가 차례대로 처리해야 할 작업들이 N 개 있다. 각 작업들은 1 부터 N 까지 번호가 매겨져 있다. 기계동작의 효율을 위해 , 우리는 작업들을 하나 이상의 묶음으로 쪼개려고 한다. 예를들어 작업이 여섯 개 있으면 {1,2,3} ,{4} , {5,6} 이나 {1,2} , {3,4,5} , {6} 처럼 작업의 순서만 유지하면 어떤 식으로든 가능하다.",
    "input": "첫째 줄에는 작업의 총 개수 N(1 <= N <= 10000) 이 있다.\n둘째 줄에는 묶음이 바뀔 때의 기계 시동 시간인 정수 S 0 <= S <= 50 가 있다.\n그리고 다음 N 줄에는 1 , 2, ... , N 작업에 대해 그 작업의 처리 시간인 Ti (1 <= Ti <= 100) 와 비용계수인 Fi ( Fi <= 100)이 순서대로 들어있다.",
    "output": "작업 분할 비용의 최소값을 나타내는 자연수 하나를 한 줄에다 출력한다.",
    "sample": "입력\n\n2\n50\n100 100\n100 100\n\n출력\n\n45000\n\n입력 \n\n5\n1\n1 3\n3 2\n4 3\n2 3\n1 4\n\n출력\n\n153"
  },
  {
    "id": 689,
    "title": "football",
    "time_limit": "1 초",
    "description": "번호가 1,2,3,...,2^n 이 붙은 팀이 토너먼트 경기를 펼치고 있다. 토너먼트의 각 라운드에서 모든 팀은 증가하는 순으로 경기를 치른다. 즉 첫번째 팀은 두번째 팀과 경기를 한다. 3 번째 팀이 4 번째 팀과...",
    "input": "n ( 1 <= n <= 7 ) 이 주어진다. 다음 2^n 라인에는 \n2^n 개의 수가 입력된다. 행렬 P 는  i 가 j 와 같지 않을 경우 pij = 1 - pji  가 성립하고 i =  j 인 경우 pii=0 이다.\n주어지는 숫자는 실수이고 , 프로그래밍시 float 타입보다 double 타입을 사용하는게 좋다네요.",
    "output": "어떤 팀이 우승 확률이 가장 높은지 팀의 번호를 출력하는게 문제이다. 탑 두팀간의 우승 확률의 차이는 0.01 이상이다.",
    "sample": "입력\n\n2\n0.0 0.1 0.2 0.3\n0.9 0.0 0.4 0.5\n0.8 0.6 0.0 0.6\n0.7 0.5 0.4 0.0\n\n출력\n\n2"
  },
  {
    "id": 690,
    "title": "moving",
    "time_limit": "1 초",
    "description": "최근 어떤 학교에서 컴퓨터를 다른 장소로 이동하고자 한다. 이 학교는 이사를 위해 k 대의 트럭을 보유하고 이 트럭으로 n 대의 컴퓨터를 이동하여야 한다. 보유한 트럭을 모두 사용하여야 하고 , 트럭에는 적어도 한대 이상의 컴퓨터가 실려져 이동하여야 한다.",
    "input": "컴퓨터 대수 N ( 1 <= N <= 200 ) , 트럭 수 K ( 1 <= K <= N ) 가 입력으로 주어진다.",
    "output": "결과는 64 비트 정수 형내의 값이다.",
    "sample": "입력\n\n1 1\n\n출력\n\n1\n\n입력\n\n7 3\n\n출력\n\n4"
  },
  {
    "id": 691,
    "title": "tothemax",
    "time_limit": "1 초",
    "description": "이차원 배열의 원소로 양/음의 정수값이 주어질 때 부 배열(1*1 이상)중 합이 가장 큰 값을 구하는 것이 문제이다. 부 배열이란 인접한 원소로 직사각형을 이루는 배열을 말하고 합이란 부행렬의 원소 모두를 더하는 것이다.",
    "input": "입력 N*N 정수 배열로 구성되어 진다.\n입력의 첫 줄에는 정수 N 이 주어진다. 다음 줄에는 N^2 개의 정수가 공백 혹은 줄바꿈을 사이에 두고 주어진다.\n주어지는 정수는 행 우선(row major)으로 간주한다. 즉 행 부터 채워지고 다음 열로 넘어가서 다음 행이 채워진다. N 의 크기는 최대 100 이고 주어지는 원소의 크기는 -127 에서 127 사이 수이다.(-127,127 포함)",
    "output": "최대 부행렬의 합을 출력한다.",
    "sample": "0 -2 -7 0 \n9 2 -6 2 \n-4 1 -4 1 \n-1 8 0 -2"
  },
  {
    "id": 692,
    "title": "land(special judge)",
    "time_limit": "10 초",
    "description": "지역의 주민들이 공항을 건설하기위한 땅 덩이를 정하려고 한다. 지도는 단위 사각형 모음으로 주여져 있다. 각각의 사각형은 좌표 (x,y) 로 구분된다. 이 때 x 는 동서쪽의 수평성분이고, y 는 남북쪽의 수직 성분이고, 각 사각형의 높이는 지도에 주어 져 있다.",
    "input": "첫 라인은 x 축으로의 단위사각형의 수와 y 축으로 단위사각형의 수와 한계치가 주어진다. x , y 범위는 700 이하이다.\n다음 줄 부터는 각 단위사각형의 높이가 주어진다.",
    "output": "Xmin,Ymin,Xmax,Ymax 로 네개의 정수값을 출력한다. 답이 여러 개인 경우 그 중 하나 만 출력한다.",
    "sample": "입력 \n10 15 4\n41 40 41 38 39 39 40 42 40 40 \n39 40 43 40 36 37 35 39 42 42 \n44 41 39 40 38 40 41 38 35 37 \n38 38 33 39 36 37 32 36 48 40 \n39 40 39 39 39 40 40 41 43 41 \n39 40 41 38 39 38 39 39 39 42 \n36 39 39 39 39 40 39 41 40 41 \n31 37 36 41 41 40 39 41 40 40 \n40 40 40 42 41 40 39 39 39 39 \n42 40 44 40 38 40 39 39 37 41 \n41 41 40 39 39 40 41 40 39 40 \n47 45 49 43 43 41 41 40 39 42 \n42 41 41 39 40 39 42 40 42 42 \n41 44 49 43 46 41 42 41 42 42 \n45 40 42 42 46 42 44 40 42 41 \n출력\n\n4 5 8 11"
  },
  {
    "id": 693,
    "title": "stone",
    "time_limit": "1 초",
    "description": "k 개의 다른 색깔을 가진 m 개의 돌들이 줄 서 있을 때 같은 색끼리 뭉티기 단위로 만들기 위해 제거해야 할 최소 벽돌수 를 구하는 것이 문제이다.",
    "input": "입력으로 두 개의 정수 m , k 가 주어지고 다음 줄에는 x1 , .. , xm 이 주어진다.\n(1 ≤ m ≤ 100 and 1 ≤ k ≤ 5)",
    "output": "제거하여야 할 최소 돌 수를 출력한다.",
    "sample": "입력\n\n10 3\n2 1 2 2 1 1 3 1 3 3\n\n출력\n\n2"
  },
  {
    "id": 694,
    "title": "poj_dna",
    "time_limit": "1 초",
    "description": "바이러스가 X 행성을 공격 해서 많은 생명체가 감염되었다. 몇 주간의 연구 끝에 x 행성의 CHO(Creature Healthy Organization) 에서는 이 바이러스는 두 가지의 간단한 DNA 구조 ..101,111..로 되어 있다는 것을 알았다.",
    "input": "L 이 주어진다. (1 <= L <= 10 ^ 8)",
    "output": "가짓 수를 2005 로 나눈 나머지를 출력한다.",
    "sample": "입력\n\n4\n\n출력\n\n9"
  },
  {
    "id": 695,
    "title": "hanoi1",
    "time_limit": "1 초",
    "description": "하노이 탑의 원판을 옮기던 승려들은 매일 같이 반복되는 작업에 지쳐 버렸다. 도대체 몇 번이나 원판을 더 옮겨야 작업이 끝나는 지 알고 싶어졌다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n7\n2 1 4\n2 1\n3\n7 6 5 4\n\n출력\n\n3\n4"
  },
  {
    "id": 696,
    "title": "triangulate",
    "time_limit": "1 초",
    "description": "좌표 평면 상에 n 개의 점으로 이루어진 볼록한 다각형이 주어진다. 이 다각형은 아래 그림 처럼 n - 2개의 삼각형으로 나뉘어질수 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n7\n5 11\n10 8\n11 5\n9 0\n3 0\n0 3\n1 7\n\n출력\n\n69.43"
  },
  {
    "id": 697,
    "title": "tourist",
    "time_limit": "1 초",
    "description": "게으른 관광객은 최대한 많은 관광지를 한 발짝의 낭비없이 방문하기를 원한다.",
    "input": "첫 줄은 W,H ( 2 <= W,H <= 100 ) 가 주어진다. W 는 도시의 폭이고 ,H 은 높이이다. 다음 H 라인에는 W 개의 문자가 주어진다.\n. 갈수있는 지역\n* 관심 지역\n# 막힌 지역\n두 가지 가정\n위 왼쪽( 출발지 ) 과 아래 오른쪽( 턴닝 포인트)은 갈수 있는 지역\n위 왼쪽( 출발지 ) 과 아래 오른쪽( 턴닝 포인트) 사이에는 H+W-2 크기의 갈수 있는 길이 존재",
    "output": "방문가능한 최대 관심지역수를 출력한다.",
    "sample": "입력\n\n9 7\n*........\n.....**#.\n..**...#*\n..####*#.\n.*.#*.*#.\n...#**...\n*........\n\n출력\n\n7\n\n입력\n\n5 5\n.*.*.\n*###.\n*.*.*\n.###*\n.*.*.\n\n출력\n\n8"
  },
  {
    "id": 698,
    "title": "max_sequence",
    "time_limit": "3 초",
    "description": "두 구간의 합이 최대가 되는 구간의 최대 합을 구하는 문제이다.",
    "input": "수 개수 N ( N <= 1000 개)이 입력으로 주어지고 , 각 수 들은 -1000 이상 1000 이하의 정수이다.",
    "output": "",
    "sample": "입력\n\n5\n-5 9 -5 11 20\n\n\n출력\n\n40"
  },
  {
    "id": 699,
    "title": "jump",
    "time_limit": "1 초",
    "description": "유시 섬에서 한가롭게 소풍을 즐기던 다리오와 오렌지 공주. 다리오가 잠시 자리를 비운 사이에 못된 악당 후퍼가 공주를 데리고 도망가 버렸다. 다리오는 후퍼가 오렌지 공주를 숨겨놓은 후퍼 섬으로 여행을 떠난다.",
    "input": "첫째 줄에는 섬의 개수 N이 주어진다. N은 유시 섬과 후퍼 섬도 포함한 개수이고 3 이상 500 이하이다.\n이어지는 N개의 줄에는 각각의 섬에 대한 정보가 한 줄에 하나씩 주어진다. 섬의 정보는 유시 섬과의 거리가 가까운 순으로 주어진다. 그러므로\n첫 번째로 정보가 주어지는 섬은 항상 유시 섬이고, 마지막으로 정보가 주어지는 섬은 항상 후퍼 섬이다.\n섬의 정보를 나타내는 각각의 줄에는 섬에 대한 정보를 표현하는 세 개의 정수가 빈칸을 사이에 두고 주어진다.\n첫 번째 정수는 유시 섬과의 거리이다. 유시 섬에 대해서는 이 값이 0이고, 후퍼 섬에서 이 값이 가장 크다. 거리는 0 이상 100,000 이하이다. 이 값이 동일한 두 섬은 존재하지 않는다.\n두 번째 정수는 스프링 발판의 세기, 즉 해당 섬에서 좌우로 얼마나 떨어진 섬까지 점프할 수 있는지를 나타내는 값이다. 이 값은 1 이상 1,000 이하이다.\n세 번째 정수는 해당 섬의 스프링 발판을 오렌지 공주를 들쳐 업은 상태에서도 사용할 수 있는지를 나타내는 값이다. 1이면 오렌지 공주와 함께 이용할 수 있고, 0이면 이용할 수 없다. 후퍼 섬에서 이 값은 항상 1이다.",
    "output": "첫째 줄에 유시 섬에서 출발해 오렌지 공주를 구해오는 총 경로의 수를 1000으로 나눈 나머지를 출력한다.",
    "sample": "입력\n\n8\n0 7 1\n3 4 1\n6 8 1\n8 6 1\n12 2 0\n13 2 1\n14 2 1\n15 7 1\n\n출력\n\n6"
  },
  {
    "id": 700,
    "title": "canadian_tour",
    "time_limit": "1 초",
    "description": "당신은 항공사가 후원하는 어떤 경연대회에서 우승을 차지했다. 그래서 상으로 캐나다 곳곳을 여행할 수 있는 비행기 표를 받았다.",
    "input": "첫째 줄에는 항공로에 든 총 도시의 개수 N 과 직선 코스의 개수 V 를 나타내는 수치가 있다. N 은 100 이하인 자연수, v 는 0 보다 큰 임의의 정수이다.\n다음 N 줄에는 각 줄마다 그 도시의 이름이 있다. 도시는 서쪽부터 동쪽의 순서로 정렬되어 있다. i < j 인 경우 목록의 i 번째 있는 도시는 j 번째에 있는 도시보다 서쪽에 있다고 말할 수 있다.\n도시 이름은 로마자와 숫자로 구성되어 있고 최대 15 글자인 문자열이다. 이름 사이에 공백은 없다.\n그 다음 V 줄에는 각 줄마다 앞 목록에 든 도시 이름 중 두 개가 있다. 각 도시는 공백으로 구분한다.\n도시 1 과 도시 2 가 목록에 있다면 도시 1 에서 도시 2 로 또는 도시 2에서 도시 1 로 가는 직선 항로가 있다는 것을 의미한다.",
    "output": "여행 일정에 잡힌 도시의 최대 개수 M 을 출력한다. \n조건을 만족하는 일정을 짤 수 없다면 1 을 출력한다.",
    "sample": "입력\n\n8 9\nVancouver\nYellowknife\nEdmonton\nCalgary\nWinnipeg\nToronto\nMontreal\nHalifax\nVancouver Edmonton\nVancouver Calgary\nCalgary Winnipeg\nWinnipeg Toronto\nToronto Halifax\nMontreal Halifax\nEdmonton Montreal\nEdmonton Yellowknife\nEdmonton Calgary\n\n출력 \n\n7\n\n입력\n\n5 5\nC1\nC2\nC3\nC4\nC5\nC5 C4\nC2 C3\nC3 C1\nC4 C1\nC5 C2\n\n출력 \n\n1"
  },
  {
    "id": 701,
    "title": "varacious",
    "time_limit": "1 초",
    "description": "스티브와 디지는 도넛이 여러개 들어있는 빵 박스를 샀다.",
    "input": "두 정수 n , m 이 입력으로 주어진다.  1 <= m <= n <= 100\nn 은 박스에 있는 도넛의 수이고 , m 은 한 번에 가져갈 수 있는 최대 양이다.",
    "output": "스티브가 먹을 수 있는 최대 도넛의 개수를 출력한다.",
    "sample": "입력\n\n5 2\n\n출력\n\n3"
  },
  {
    "id": 702,
    "title": "twire",
    "time_limit": "1 초",
    "description": "존의 소들은 망이 불안정하여 불만이 많다. 그래서 그들의 주인 존이 오래된 전화선을 새로운 전화선으로 바꾸어주려고 한다.",
    "input": "Line 1: 두 정수 N , C 가 주어진다.\nLines 2..N+1: 높이 height_i 가 주어진다.\n5 개의 전봇대가 있고 , 미터당 비용은 2 이고  높이는 2 , 3 , 5 , 1 , 4 이다.",
    "output": "최소 비용을 출력한다.",
    "sample": "입력\n\n5 2\n2\n3\n5\n1\n4\n\n출력\n\n15"
  },
  {
    "id": 703,
    "title": "logs_stacking",
    "time_limit": "1 초",
    "description": "아래 그림은 이를 옆에서 본 그림이다.",
    "input": "아랫 단의 통나무의 수 n 이 주어진다.1 <= n <= 2000000000",
    "output": "수가 크지므로  10^5 로 나눈 나머지를 출력한다.",
    "sample": "입력\n\n1\n\n출력\n\n1\n\n입력\n\n2\n\n출력\n\n2\n\n입력\n\n3\n\n출력\n\n5\n\n입력\n\n5\n\n출력\n\n34"
  },
  {
    "id": 704,
    "title": "LIS(special judge)",
    "time_limit": "1 초",
    "description": "일련의 수가 주어질 때 이 수들을 앞에서 부터 차례대로 선택하는 문제이다. 단 앞에서 선택한 수보다 뒤에서 선택한 수가 무조건 더 커야된다.",
    "input": "데이터의 개수를 나타내는 (1 <= N <= 500,000)이 주어지고\n다음 줄에는 N개의 데이터가 주어진다. 데이터는 32 비트 정수범위 내로 주어진다.",
    "output": "첫 줄에는 최대 부분 증가수열의 개수와\n다음 줄에는 최대부분증가수열을 출력한다.",
    "sample": "입력\n\n5\n1 4 6 4 2\n\n출력\n\n3\n1 4 6"
  },
  {
    "id": 705,
    "title": "treecount(open)",
    "time_limit": "1 초",
    "description": "n개의 노드로 이루어진 이진 트리의 개수를 구하여라",
    "input": "n이 주어진다(0 <= n <= 35)",
    "output": "n개의 노드로 이루어진 이진 트리의 개수를 출력한다",
    "sample": "입력\n\n3\n\n출력\n\n5"
  },
  {
    "id": 706,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n// 최솟값에 대한 정의 \n const int MIN_INTEGER_VALUE = -100;\n // 구간에 대한 정의\n// s <= n <= e 를 만족하는 n의 범위를 [s,e] 라 한다.\n// s < n < e 를 만족하는 n의 범위를 (s,e) 라 한다. \n int binary_search(int Arrays[], int start, int end, int key) { // 탐색 범위는 [start,end) 이다. \n    if( start==end ) return start; // 탐색을 더 할 필요가 없는 경우 \n         int middle = (start+end)/2;\n    if( Arrays[middle] < key ) { // [middle+1,end) 구간으로 범위 축소\n        return binary_search(Arrays,middle+1,end,key);\n    }\n    else if( Arrays[middle] > key ) { // [start,middle) 구간으로 범위 축소\n         return binary_search(Arrays,start,middle,key);\n    }\n    else return middle;\n}\n// key보다 크거나 같은 최소 원소의 위치를 return하는 이진 탐색 소스 \n int main() {\n    int N = 9;\n    int data[] = {6,2,9,8,3,4,1,7,4};\n     int LIS[N+1]; // LIS의 길이는 1이상 N이하이므로, 배열 크기는 N+1로 선언한다. \n    int maxLength = 0; // LIS 배열의 초기 높이. \n     LIS[0] = MIN_INTEGER_VALUE; // 편의상 최솟값을 가리키는 최소 원소를 삽입 \n     for(int i=0 ; i < N;i++){\n        int position = binary_search(LIS,0,maxLength+1,data[i]); // 이진 탐색을 통해 삽입할 원소의 위치를 확인 \n        LIS[position] = data[i]; // LIS 배열에 원소 갱신\n        if( maxLength < position ) maxLength = position; // maxLength 갱신 \n    }\n    int ans = maxLength; // ans : maxLength\n}",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "(엎 시퀀스 문서)",
    "input": "",
    "output": "",
    "sample": "출처:Fate"
  },
  {
    "id": 707,
    "title": "border",
    "time_limit": "1 초",
    "description": "",
    "input": "첫 줄에 L,N,D가 주어진다.\nL은 국경 지대의 길이이다. L은 10 이상 10^9 이하의 자연수이다.\nN은 설치할 수 있는 감시탑의 개수를 의미한다. N은 100만 이하의 자연수이다.\nD는 감시탑의 감시 범위이다. L 이하의 자연수이다.\n다음 N줄에는 감시탑의 위치 x와 설치 비용 c가 주어진다. x에 대해 정렬되어 주어진다.\n위치 x는 국경 지대의 한쪽 끝에서부터의 거리를 의미하며, 0 이상 L 이하인 정수이다.\nc는 10^9 이하의 자연수이다. c의 총합은 int의 범위를 넘지 않는다.",
    "output": "모든 국경 지대를 감시할 수 없으면 첫 줄에 0만 출력한다.\n가능한 경우 첫 줄에 모든 국경 지대를 감시할 수 있는 감시탑의 설치 비용의 최솟값과 설치한 감시탑의 개수를 출력한다.",
    "sample": "입력\n\n20 5 5\n1 3\n3 2\n8 7\n10 3\n16 5\n\n출력\n\n3 1"
  },
  {
    "id": 708,
    "title": "이 파트를 완전히 이해하기 위해서는 2 의 보수 표현법에 대한 공부가 필요합니다.",
    "time_limit": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n#include <stdio.h>\n int main () \n{\n    int i, j, sum;\n    int B;\n                     int buckets[3]={6,2,9};\n     B = 3;\n     for (i = 0; i < <font size=\"+1\">1 << B </font>; i++) {\n        sum = 0;\n        for (j = 0; j < B; j++)\n            if (<font size=\"+1\">i & (1 << j) </font>) sum += buckets[j];\n        printf(\"%d\\n\",sum);\n         }\n    return 0;\n}\n</stdio.h>",
    "description": "",
    "input": "",
    "output": "",
    "sample": "/*\n10진수 2진수 합\n----------------\n  0     000  0  \n  1     001  6  \n  2     010  2  \n  3     011  8  \n  4     100  9  \n  5     101 15 \n  6     110 11 \n  7     111 17 \n*/"
  },
  {
    "id": 709,
    "title": "to_carry(open)",
    "time_limit": "1 초",
    "description": "6+9=15 가 나오는데 4+6=2 ????",
    "input": "부호 없는 정수 2 개가 입력으로 주어진다.",
    "output": "그가 만든 논리회로 대로  출력",
    "sample": "4 = 00000000 00000000 00000000 00000100\n+6 = 00000000 00000000 00000000 00000110\n----------------------------------------\n 2 = 00000000 00000000 00000000 00000010"
  },
  {
    "id": 710,
    "title": "dump",
    "time_limit": "1 초",
    "description": "정수를 입력으로 받아 이 정수가 메모리에 저장된 이진수 형태로 출력하는 프로그램을 작성하시오.",
    "input": "10 진수 n 이 입력으로 주어진다. n 이 메모리에 저장된 내용을 이진수로 출력한다.\nn 은 정수 범위내( -2^31 ~ 2^31-1 ) 의 수이다.",
    "output": "8 비트씩 단위로 공백을 주어 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n00000000 00000000 00000000 00000011\n\n입력\n\n-1\n\n출력\n\n11111111 11111111 11111111 11111111"
  },
  {
    "id": 711,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 712,
    "title": "rms",
    "time_limit": "1 초",
    "description": "수를 이진수로 바꾸었을 때 최초의 0 이 아닌수의 자리 값(가중치)을 출력하는게 문제이다.",
    "input": "입력되는 수는 2^31 -1 이하의 자연수이다.",
    "output": "",
    "sample": "12 = 00....01100  (4)\n             ^\n             |\n10 = 00....01010  (2)\n              ^\n              |"
  },
  {
    "id": 713,
    "title": "endian(open)",
    "time_limit": "1 초",
    "description": "완전히 다른 운영체제간 완전히 이식이 되는 프로그램을 작성하는 것은 , 운영체제 버젼과 하드웨어 플랫폼이 관건이다. 하드웨어 업체가 정수 데이터를 메모리에 어떻게 표현할 까를 결정하는 것에 따라 어려움에 봉착하게 된다.",
    "input": "입력은 여러 개의 정수로 이루어진다. 입력의 끝은 EOF 이다.\n입력 되는 정수 값은 32 비트 부호형 정수로 표현 될 수 있다. 즉 , 입력의 정수는 -2147483648 ~ 2147483647 이다.",
    "output": "매 입력에 대한 출력을 출력 예의 형식으로 출력한다.",
    "sample": "입력\n\n123456789\n-123456789\n1\n16777216\n20034556\n\n출력\n\n123456789 converts to 365779719\n-123456789 converts to -349002504\n1 converts to 16777216\n16777216 converts to 1\n20034556 converts to -55365375"
  },
  {
    "id": 714,
    "title": "rbit(open)",
    "time_limit": "1 초",
    "description": "입력받은 16진수를 바이트로 표현했을 때, 그 바이트 값을 거꾸로 뒤집는 문제이다.",
    "input": "16진수 두 자리를 입력으로 받는다.",
    "output": "비트를 뒤집은 16진수를 출력한다. 문자의 경우 대문자로 출력한다.",
    "sample": "입력\n\n72\n\n출력\n\n4E"
  },
  {
    "id": 715,
    "title": "bst",
    "time_limit": "1 초",
    "description": "완전 이진 검색 트리에서 노드의 번호가 1 , 2 , 3, ... 으로 부여되어 있다.",
    "input": "X 는 1 에서 2^31 - 1 까지의 수이다.",
    "output": "최소 노드와 최대 노드를 출력한다.",
    "sample": "입력\n\n8\n\n출력\n\n1 15\n\n입력\n\n10\n\n출력\n\n9 11"
  },
  {
    "id": 716,
    "title": "cellophane",
    "time_limit": "1 초",
    "description": "흰색(White) 도화지 위에 빨강(Red), 노랑(Yellow), 파랑(Blue)의 세 가지 색깔을 가진 직사각형 모양의 셀로판지들을 붙여서 서로 겹쳐진 부분의 색이 바꾸어지는 것을 관찰해보자.",
    "input": "",
    "output": "",
    "sample": "입력\n\n3 \nR\n1 4\n4 1\nB \n3 5 \n7 2\nY \n2 7 \n5 3\nG \n\n출력\n\n3"
  },
  {
    "id": 717,
    "title": "easy_problem",
    "time_limit": "1 초",
    "description": "양의 정수 I 가 주어질 때 이 수보다 큰 수 중 최소 정수를 구하는게 문제이다. 단, 주어지는 수 I 를 이진수로 바꾸었을 때 1 의 개수와 구하는 큰 수의 1 의 개수는 동일해야 한다.",
    "input": "주어지는 정수 I 는 1 <= I <= 1000000  이다.",
    "output": "큰 수 중 최소 정수를 출력한다.",
    "sample": "입력\n\n1\n\n출력\n\n2\n\n입력\n\n2\n\n출력\n\n4\n\n입력\n\n3\n\n출력\n\n5\n\n입력\n\n4\n\n출력\n\n8\n\n입력\n\n78\n\n출력\n\n83"
  },
  {
    "id": 718,
    "title": "castle",
    "time_limit": "1 초",
    "description": "농부 존은 생일 축하 기념으로 로또를 샀는데 이 로또가 일등에 당청되어 멋진 시골 별장을 구입하였다.",
    "input": "지도의 방향은 숫자 형태로 저장된다.  입력의 첫줄은 M 과 N 이 주어지고 각 모듈은 아래와 같은 형태의 합으로  벽을 가진 지를 판단한다.\n1: wall to the west\n2: wall to the north\n4: wall to the east\n8: wall to the south\n방 정보가 11 이라면\n1 + 2 + 8 = 11\n서쪽 ,북쪽 , 남쪽 벽이 있다는 의미이다.",
    "output": "출력은 여러줄로 구성된다.\n첫 줄은 가진 방의 수를 출력하고\n다음 줄은 가장 큰 방의 크기를\n다음 줄은 한 벽을 허물 경우 가장 큰 방의 크기",
    "sample": "입력\n\n7 4\n11 6 11 6 3 10 6\n7 9 6 13 5 15 5\n1 10 12 7 13 7 5\n13 11 10 8 10 12 13\n\n출력\n\n5\n9\n16"
  },
  {
    "id": 719,
    "title": "snapper",
    "time_limit": "1 초",
    "description": "한쪽 면에 있는 입력 플러그를 꽂을 수 있다. 다른 면에는 전등 혹은 다른 장치를 꽂을 수 있는 출력 소켓이 노출되어 있다.",
    "input": "첫 째 줄에 테스트 케이스의 수 T 가 주어지고 , 다음 T 줄에는 각  N , K 가 주어진다.",
    "output": "출력 예의 형식으로 전등의 상태를 출력한다.",
    "sample": "입력\n\n4\n1 0\n1 1\n4 0\n4 47\n\n출력\n\nCase #1: OFF\nCase #2: ON\nCase #3: OFF\nCase #4: ON"
  },
  {
    "id": 720,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 721,
    "title": "relation",
    "time_limit": "1 초",
    "description": "우리나라는 가족 혹은 친척들 사이의 관계를 촌수라는 단위로 표현하는 독특한 문화를 가지고 있다. 이러한 촌수는 다음과 같은 방식으로 계산된다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n9\n7 3\n7\n1 2\n1 3\n2 7\n2 8\n2 9\n4 5\n4 6\n \n출력\n\n3\n\n입력\n\n9\n8 6\n7\n1 2\n1 3\n2 7\n2 8\n2 9\n4 5\n4 6\n \n출력\n\n-1"
  },
  {
    "id": 722,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 723,
    "title": "knight",
    "time_limit": "5 초",
    "description": "가로 1000 칸, 세로 1000 칸으로 나누어져 있는 격자 모양의 거대한 정사각형 체스 판에서 임의의 지점에서 원하는 위치까지 최소의 이동 횟수로 나이트를 움직이려고 한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n1 1\n2 1\n\n출력\n\n3"
  },
  {
    "id": 724,
    "title": "robo",
    "time_limit": "1 초",
    "description": "많은 공장에서 로봇이 이용되고 있다. 우리 공장의 로봇은 바라보는 방향으로 궤도를 따라 움직이며, 움직이는 방향은 동, 서, 남, 북 가운데 하나이다. 로봇의 이동을 제어하는 명령어는 다음과 같이 두 가지이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n5 6\n0 0 0 0 0 0\n0 1 1 0 1 0\n0 1 0 0 0 0\n0 0 1 1 1 0\n1 0 0 0 0 0\n4 2 3\n2 4 1\n\n출력\n\n9"
  },
  {
    "id": 725,
    "title": "camelot",
    "time_limit": "1 초",
    "description": "몇 세기전에 왕 아서와 그의 원탁의 기사는 그들의 우정을 기념하기 위해 매년 새해초에 만나 체스 게임을 한다. 하나의 킹과 다른 위치에서 여러 명의 기사가 존재한다.",
    "input": "첫줄은 행 열의 크기 R C 가 주어진다. R 은 40 이하이고 c 는 26 이하이다.\n다음 라인에는 왕의 위치가 오고 다음 라인부터 기사들의 위치가 하나이상 온다. 기사들은 없을 수도 보드를 꽉 채울수도 있다. 행의 처음을 1 로 열의 처음을 대문자 A 로 한다.\n아래 입력은 왕의 위치가 D4 , 4 명의 기사 위치가 A3 , A8 , H1 , H8 위치에 존재한다는 것이다.",
    "output": "최소 움직임 회수를 출력한다.",
    "sample": "입력 \n\n8 8\nD 4\nA 3 A 8\nH 1 H 8\n\n출력\n\n10\n위 보기는 \n\nThey gather at B5. \nKnight 1: A3 - B5 (1 move) \nKnight 2: A8 - C7 - B5 (2 moves) \nKnight 3: H1 - G3 - F5 - D4 (picking up king) - B5 (4 moves) \nKnight 4: H8 - F7 - D6 - B5 (3 moves) \n1 + 2 + 4 + 3 = 10 moves."
  },
  {
    "id": 726,
    "title": "delivery",
    "time_limit": "1 초",
    "description": "철수는 자장면집 사장이다.",
    "input": "첫줄에는 정수 N, M 이 주어진다.\n다음 N 줄에는 M 길이의 문자열이주어진다. 각 문자열은 #,.,S,H 로 구성 되있다.",
    "output": "두 배달원들이 배달해야할곳들을 적절히 나눴을때 걸리는 최소 시간. (마지막 집에 들\n렀을때 걸린 시간)",
    "sample": "입력\n\n7 8\n#.S..##.\n.#H.....\n.#..#..#\n.#.H..##\n#..#....\n..#.H...\n########\n\n출력\n\n7"
  },
  {
    "id": 727,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 728,
    "title": "dijkstra (special judge)",
    "time_limit": "1 초",
    "description": "출발 정점이 주어질 때 이 점으로 부터 각 정점으로의 최단 경로를 구하는 문제이다.",
    "input": "입력의 첫 줄은 정점의 수 N ( 2 <= N <= 1000 ) , 간선의 수 M (1 <= M <= 100,000) , 출발 정점 S 가 주어진다.\n다음 M 줄에는 Ai , Bi , Ci 가 주어진다. Ai 에서 Bi 로의 길이 있고 가는 Ci ( 1 <= Ci <= 100 ) 의 비용이 듣다.",
    "output": "출발 정점 S 로 부터의 최단 거리 패스를 출력한다. 정점이 커지는 순으로  출력한다.\n출발 정점인 경우 그 줄에 해당 정점의 번호만 출력하고 답이 여러개인 경우 그 중 하나만 출력한다.",
    "sample": "입력\n\n5 8 1\n1 2 7\n1 3 4\n1 4 6\n1 5 1\n3 2 2\n3 4 5\n4 2 3\n5 4 1\n\n출력\n\n1\n1 5 4 2\n1 3\n1 5 4\n1 5"
  },
  {
    "id": 729,
    "title": "sparty",
    "time_limit": "1 초",
    "description": "N ( 1 <= N <= 1000)농장의 (편의상 1 ,2 .. , N) 의 대표 암소 한 마리가 X ( 1 <= X <= N) 농장에서 열리는 파티에 참석하려고 한다. 전체 M ( 1 <= M <= 100,000) 의 한 방향 길이주어지고 각 길을 가는데 Ti ( 1 <= Ti <= 100 ) 만큼의 시간이 소요된다.",
    "input": "첫 번째 줄 : 정수 N , M , X 가 주어진다.\n두 번재 줄에서 M+1 번째 줄 : i+1 번째 줄은 세 정수 Ai,Bi,Ci 가 주어진다. Ai 에서 Bi 로 가는데 Ti 시간이 소요된다는 것이다.",
    "output": "파티에 참석했다 돌아오는 소 들 중 가장 긴 시간을 출력한다.",
    "sample": "입력\n\n4 8 2\n1 2 4\n1 3 2\n1 4 7\n2 1 1\n2 3 5\n3 1 2\n3 4 4\n4 2 3\n\n출력\n\n10"
  },
  {
    "id": 730,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 731,
    "title": "spheap",
    "time_limit": "1 초",
    "description": "출발지에서 도착지 까지 가는 최단 비용을 구하는 문제이다. 단, 갈수 있는 방향은 상,하,좌,우 이다. 격자안의 숫자는 그 격자를 통과하는데 드는 비용이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4 4\n1 10 2 1\n2 10 3 2\n3 2 6 3\n1 1 10 2\n1 1\n3 4\n\n출력\n\n17"
  },
  {
    "id": 732,
    "title": "revamp(open)",
    "time_limit": "2 초",
    "description": "농부 존의 어려움 중의 하나는 매일 소들이 이상이 없는지를 점검하는 일이다.",
    "input": "입력의\n첫 줄은 세 정수 N,M,K 가 주어진다\ni+1 번 째 줄은 길 i 의 P1_i, P2_i, and T_i 가 정수로 주어진다.",
    "output": "많아야 K 개의 길을 개량 한 후의 가장 짧은 길의 크기를 출력한다.",
    "sample": "입력\n\n4 4 1 \n1 2 10 \n2 4 10 \n1 3 1 \n3 4 100\n\n출력\n\n1"
  },
  {
    "id": 733,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 734,
    "title": "floyd-warshall",
    "time_limit": "1 초",
    "description": "",
    "input": "입력의 첫 째줄은 정점의 수 n( 30 이하의 정수) , 출발점 , 도착점이 주어지고 ,\n다음 n 줄은 가중치 행렬이 주어진다. 가중 치는 30 이하의 음이 아닌 정수이고 길이 없는 곳은 1000 으로 주어진다.\n사이클이 존재할 수도 있다.",
    "output": "최단 거리를 출력한다.",
    "sample": "입력\n\n5 1 4\n0 7 4 6 1\n1000 0 1000 1000 1000\n1000 2 0 5 1000\n1000 3 1000 0 1000\n1000 1000 1000 1 0\n\n출력\n\n2"
  },
  {
    "id": 735,
    "title": "bessi",
    "time_limit": "1 초",
    "description": "목초지에서 우리로 돌아오는 최단 거리 소 (제일 빨리 우리로 돌아오는 소)를 구하는 문제이다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n5\nA d 6\nB d 3\nC e 9\nd Z 8\ne Z 3\n\n출력\n\nB 11"
  },
  {
    "id": 736,
    "title": "cowcontest",
    "time_limit": "1 초",
    "description": "이름이 1, 2, 3, …, N (1 <= N <= 100) 인 소가 프로그래밍 대회에 참가했다. 각각의 소는 프로그래밍 능력을 갖고 있으며, 다른 소와 같은 능력을 가진 소는 없다.",
    "input": "첫번째 라인 : 정수 N, M\n두 번째 ~ M + 1번째 라인 : 한 라인은 한 번의 대결을 의미한다. 각각의 라인은 두 개의 정수를 갖고 있으며, 숫자는 소를 지칭한다.\n첫 번째 수에 해당하는 소가 승자이다.",
    "output": "정확한 등수를 알 수 있는 소의 마리수를 첫 번째 라인에 출력한다.",
    "sample": "입력\n\n5 5\n4 3\n4 2\n3 2\n1 2\n2 5\n\n출력\n\n2"
  },
  {
    "id": 737,
    "title": "msquare",
    "time_limit": "1 초",
    "description": "아래와 같은 2 행 4 열의 배열의 각 원소에는 1 부터 8 까지의 8 개의 숫자가 들어 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n2 6 8 4 5 7 3 1\n\n출력\n\n7\nBCABCCB"
  },
  {
    "id": 738,
    "title": "1 번 정점을 시작 정점으로 하여 모든 정점으로의 최단거리 문제를 생각해 보자.\n이 경우 1 -> 2 -> 3 -> 1 로 가면 음수이다. 이 경우 최단거리의 의미가 없으므로 음수 사이클을 인식하고 아닌 경우 최단거리를 구하는 프로그램을 구하려고 한다.",
    "time_limit": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n#include <stdio.h>\nint weight[100][100];\nint d[100][100]; //d[i][j] 는 1 에서 i 까지의 vertex 를 고려한 소스에서 j 로 가는 최단 거리\nint n; // vertex 의 수 \nint src; // 출발지 \n void init()\n{\n   int i,j;\n    scanf(\"%d %d\",&n,&src);\n       for(i = 1;i <= n;i++)\n      for(j = 1;j <= n;j++) \n        scanf(\"%d\",&weight[i][j]);\n}\n void process()\n{\n   int i,j,k,min;\n       for(i = 0; i<= n;i++)\n        d[0][i] = 9999999; //즉  d[i][j] = ∞\n        d[0][src]=0;\n    for(i = 1; i <= n;i++)\n      for(j = 1;j <= n;j++){\n        min = d[i-1][j];\n        for(k = 1; k <= n;k++)\n           if (d[i-1][k] + weight[k][j] < min) min = d[i-1][k] + weight[k][j];\n        d[i][j] = min;\n      }\n}\n void output()\n{\n   int i,j;\n    //음수 사이클 check \n   //최적의 해를 구한 후 한 번 더 접근 한 값이 더 구한 최적의 해보다 좋으면  음수 사이클\n   for(i = 1; i <= n;i++)\n      for(j = 1;j <= n;j++)\n        if (d[n][i] + weight[i][j] < d[n][j] ){\n           printf(\"negative cycle\\n\");\n           return;\n        }\n    //최단 거리 출력 \n   for(i=1;i<=n;i++){\n        printf(\"%4d\",d[n][i]);\n   }\n   printf(\"\\n\");\n            }\n int main()\n{\n   init();\n   process();\n   output();\n   return 0;\n}",
    "description": "설명을 위해 다음과 같이 가정",
    "input": "",
    "output": "",
    "sample": ""
  },
  {
    "id": 739,
    "title": "wormhole",
    "time_limit": "2 초",
    "description": "존이 농장을 둘러보니 많은 벌레 구멍이 있음을 알았다. 이 구멍은 매우 특이하다. 왜냐하면 그것은 한 방향 길이고 이 구멍으로 들어가기 이 전 시간으로 도착지에 데려다 준다. (주:이 부분 영어 번역을 제대로 못해서 한 참을 헤매었습니다. 이 구멍은 타임머신 구멍으로 이해)",
    "input": "첫 줄: 농장 의 수 F , 다음 줄 부터 F 개의 농장 정보가 주어진다.\n각 농장의 첫 줄: 세 개의 정수 N , M , W N 은 필드 수(노드) , M 은 일반적인 길의 수 , W 는 구멍의 수\n각 농장의 2 .. M+1 줄: 다음 S,E,T 가 주어진다. S 에서 E 사이의 양방향 길이고 이동하는데 T 초 소요된다. 두 필드는 한 패스 이상 연결될 수 도 있다.\n각 농장의 M+2 .. M+W+1 줄 : S,E,T 가 주어진다. S 에서 E 로 한 방향 길이고 , T 초 시간을 거슬러서 도착지에 도착한다.",
    "output": "존이 그의 목적을 달성하면 YES 아니면 NO 를 출력한다.",
    "sample": "입력\n\n2\n3 3 1\n1 2 2\n1 3 4\n2 3 1\n3 1 3\n\n3 2 1\n1 2 3\n2 3 4\n3 1 8\n\n출력\n\nNO\nYES"
  },
  {
    "id": 740,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 741,
    "title": "lake",
    "time_limit": "1 초",
    "description": "",
    "input": "행 N , 열 M 이 입력으로 주어진다. (1 <= N <= 100; 1 <= M <= 100)",
    "output": "",
    "sample": "입력\n\n10 12\nW........WW.\n.WWW.....WWW\n....WW...WW.\n.........WW.\n.........W..\n..W......W..\n.W.W.....WW.\nW.W.W.....W.\n.W.W......W.\n..W.......W.\n\n출력\n\n3"
  },
  {
    "id": 742,
    "title": "cheese",
    "time_limit": "1 초",
    "description": "N * M (5 <= N , M <= 100) 의 모눈 종이위에 아주 얇은 치즈가 <그림 1> 과 같이 표시되어 있다. 단, N 은 세로 격자의 수이고, M 은 가로 격자의 수이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n8 9\n0 0 0 0 0 0 0 0 0\n0 0 0 1 1 0 0 0 0\n0 0 0 1 1 0 1 1 0\n0 0 1 1 1 1 1 1 0\n0 0 1 1 1 1 1 0 0\n0 0 1 1 0 1 1 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n\n출력\n\n4"
  },
  {
    "id": 743,
    "title": "race",
    "time_limit": "1 초",
    "description": "그림 1 은 자동차 경주 코스의 예이다. 0 은 시작점이고 N 은 도착 점이다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n1 2 -2\n3 -2\n3 -2\n5 4 -2\n6 4 -2\n6 -2\n7 8 -2\n9 -2\n5 9 -2\n-2\n-1\n\n출력\n\n2 3 6\n1 3\n\n출처: IOI'95"
  },
  {
    "id": 744,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 745,
    "title": "pictures",
    "time_limit": "2 초",
    "description": "N (1 <= N < 5000) 개의 포스터 , 그림,사진들을 벽에 붙이려고 한다. 면은 모두 수직 혹은 수평이다. 각 사각형은 다른 사각형에 의해서 부분적으로 혹은 완전히 덮힐 수 있다.",
    "input": "첫번째 라인은 벽에 붙일 사각형의 수 이다.\n다음 N 줄에는 좌측 아래 좌표 오른쪽 위 좌표가 주어진다. 좌표는 x , y 좌표 순으로 주어진다\n모든 좌표는 범위 [-10000,10000] 에 있고 , 모든 사각형은 양의 넓이를 가진다.",
    "output": "주어진 사각형의 음이 아닌 정수인 지름을 출력한다.\n결과값은 32 비트 정수 부호형 범위내에 있다는 것은 보장된다.",
    "sample": "입력\n\n7\n-15 0 5 10\n-5 8 20 25\n15 -4 24 14\n0 -6 16 4\n2 15 10 22\n30 10 36 20\n34 0 40 16\n\n출력\n\n228"
  },
  {
    "id": 746,
    "title": "?\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n#include < stdio.h >\nint include[5];\n         void bt(int i)\n{\n   int k;\n          if(i==4){ \n       for(k=1;k<=4;k++)\n          printf(\"%d \",include[k]);\n          printf(\"\\n\");\n   }else{\n       include[i+1]=1; //포함하는 경우 \n       bt(i+1);\n       include[i+1]=0;//포함하지 않는 경우\n       bt(i+1);\n   }\n}\n         main()\n{\n   bt(0);\n}",
    "time_limit": "[홈으로]  [뒤 로]",
    "description": "주머니 속에 1,2,3 이 쓰져 있는 공 3 개가 있고 , 이를 뽑아내는 방법은 총 8 가지 경우가 있다.",
    "input": "",
    "output": "",
    "sample": "(문제) sum of subset \n\n6 , 1 , 9 , 8 , 3 , 4 , 7\n\n총 합은 38 , 합은 반은 19 이다.\n\n이 수들을 적절히 뽑아 19 를 만들 수 있는 방법의 수를 구하는 문제."
  },
  {
    "id": 747,
    "title": "eating_puzzle",
    "time_limit": "1 초",
    "description": "암소 베시는 다이어트를 하고 있다. 하루 칼로리양 C 를 정해 이를 초과해서 먹지 않을려고 한다. 그런데 , 농부 존은 맛있는 것이 가득 든 B 개의 바구니를 베시에게 주어 식욕을 자극하고 있다. 각 바구니에는 일정한 양의 칼로리를 가지고 있다.",
    "input": "첫 번째 라인은 2 개의 정수 C (10 ≤ C ≤ 35,000) , B (1 ≤ B ≤ 21) 가 주어진다.\n다음 라인은 B 개의 정수가 주어진다. 각 정수는 1 ,2 ,3 .. 바구니의 칼로리이다.",
    "output": "한도를 초과하지 않고 먹을 수 있는 최대 칼로리 양이다.",
    "sample": "입력\n\n40 6\n7 13 17 19 29 31\n\n출력\n\n39"
  },
  {
    "id": 748,
    "title": "scales",
    "time_limit": "1 초",
    "description": "보석들을 저울 양쪽에 달아 무게가 동일하게 하려고 한다.",
    "input": "첫 줄은 보석들의  개수 ( 1 <= n <= 30 ) , 둘째 줄은 각 보석들의 무게이다. 단 보석들의 총 무게는 300\n을 넘지 않는다.",
    "output": "나올수 있는 모든 경우의 수를 출력한다.\n만약에 동일한 무게의 보석들로 나눌수 없는 경우에는 \"impossible\"을 출력한다.",
    "sample": "입력\n\n5\n1 9 5 3 8\n\n출력\n\n2"
  },
  {
    "id": 749,
    "title": "word_matrix",
    "time_limit": "1 초",
    "description": "BOGGLE 이라는 보드게임이 있다. 알파벳으로 구성된 4*4 칸에서 연결된 글자들을 이용해서 단어를 찾는 게임이다.",
    "input": "첫 번째 줄에는 숫자 N 이 입력으로 들어온다.\n두 번째 줄부터 N 줄에 걸쳐서 길이 N 의 알파벳 문자열들이 주어진다. (모두 대문자로)\n마지막 줄에는 찾으려는 단어가 주어진다.\nN 은 10 을 넘지 않는다.",
    "output": "입력받은 영어단어를 순서대로 숫자로 치환한 결과를 N*N 칸의 정수들로 출력한다.\n단어가 없는 위치는 0 으로 출력하고, 단어의 시작 알파벳을 1부터 순서대로 쓴다.\n숫자들은 한 칸씩 띄어쓰기로 구분한다.\n답이 없는 경우는 입력으로 주어지지 않으며, 모든 문제는 유일하게 답이 결정된다.",
    "sample": "GPEA\nMPLH\nAPZN\nOYQT"
  },
  {
    "id": 750,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 751,
    "title": "beeper",
    "time_limit": "1 초",
    "description": "카렐은 (x,y) 좌표축을 돌아다니는 로봇이다. 좌표 축에 놓여져 있는 호출기를 모두 주우려고 한다.",
    "input": "첫 줄은 좌표의 크기이고\n카렐이 현재 있는 위치이고\n다음은 호출기의 수이고\n다음 줄 부터는 호출기가 있는 좌표 값이 입력으로 주어진다.",
    "output": "카렐이 모든 호출기를 줍고 현재 위치로 돌아오는 최단거리를  출력한다.",
    "sample": "입력\n\n10 10\n1 1\n4\n2 3\n5 5\n9 4\n6 5\n\n출력\n\nThe shortest path has length 24"
  },
  {
    "id": 752,
    "title": "good_s(open)",
    "time_limit": "5 초",
    "description": "숫자 1,2,3 으로만 이루어지는 수열이 있다. 임의 길이의 인접한 두 개의 수열이 동일한 것이 있으면, 그 수열을 나쁜 수열이라고 부른다. 그렇지 않은 수열은 좋은 수열이다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n7\n\n출력\n\n1213121"
  },
  {
    "id": 753,
    "title": "nqueen(open)",
    "time_limit": "3 초",
    "description": "chess 에서 queen 은 가로 ,세로 , 대각선에 같은 queen 을 놓을 수 없다.",
    "input": "",
    "output": "",
    "sample": "행    1 2 3 4 5 6 \n열    2 4 6 1 3 5"
  },
  {
    "id": 754,
    "title": "door",
    "time_limit": "1 초",
    "description": "n 개의 같은 크기의 벽장들이 일렬로 붙어져 있고 벽장의 문은 n-2 개만이 있다. 한 벽장 앞에 있는 문은 이웃 벽장 앞에 문이 없다면(즉, 벽장이 열려있다면)그 벽장 앞으로 움직일 수 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n7 \n2 5\n4\n3\n1\n6\n5\n\n출력\n\n5"
  },
  {
    "id": 755,
    "title": "sudoku (special judge)",
    "time_limit": "2 초",
    "description": "스도쿠는 18세기 스위스 수학자가 만든 ‘라틴 사각형’이란 퍼즐에서 유래한 것으로 현재 많은 인기를 누리고 있다.",
    "input": "아홉 줄에 걸쳐 한 줄에 9 개씩 게임 시작 전 스도쿠 판 각 줄에 쓰여 있는 숫자가 빈 칸없이 차례로 주어진다. 스도쿠 판의 빈 칸의 경우에는 0 이 주어진다.\n스도쿠 판을 규칙대로 채울 수 없는 경우의 입력은 주어지지 않는다.",
    "output": "모든 빈 칸이 채워진 스도쿠 판의 최종 모습을 아홉 줄에 걸쳐 한 줄에 9 개씩 한 칸씩 띄워서 출력한다.\n스도쿠 판을 채우는 방법이 여럿인 경우는 그 중 하나만을 출력한다.",
    "sample": "입력\n\n035469278\n782105609\n060278135\n321046897\n804913506\n596820413\n917652080\n603701952\n258394761\n\n출력\n\n135469278\n782135649\n469278135\n321546897\n874913526\n596827413\n917652384\n643781952\n258394761"
  },
  {
    "id": 756,
    "title": "addi_chain (special judge)",
    "time_limit": "1 초",
    "description": "어떤 수 n 에 대한 합 연결은",
    "input": "n 은 1 이상 200 이하의 정수이다.",
    "output": "가장 짧은 연결을 출력한다.",
    "sample": "입력\n\n5\n\n출력\n\n1 2 4 5\n\n입력\n\n7\n\n출력\n\n1 2 4 6 7\n\n입력\n\n12\n\n출력\n\n1 2 4 8 12\n\n입력\n\n15\n\n출력\n\n1 2 4 5 10 15\n\n입력\n\n77\n\n출력\n\n1 2 4 8 9 17 34 68 77"
  },
  {
    "id": 757,
    "title": "SAT",
    "time_limit": "1 초",
    "description": "SAT (충족 가능성 문제)는 어떠한 변수들로 이루어진 논리식이 주어졌을 때, 그 논리식이 참이 되는 변수값이 존재하는지를 찾는 문제이다.",
    "input": "첫째 줄에 논리식을 나타내는 스트링이 주어진다. (스트링의 길이 ≤ 1000)\n논리식의 기본적인 정의는 아래와 같다.\nx : 변수를 나타낸다. (변수는 a~o까지 15개)\n~x : 논리 부정(NOT)을 나타낸다. 참이면 거짓을, 거짓이면 참을 반환한다.\nx1&x2 : 논리곱(AND)을 나타낸다. x1과 x2  모두 참이면 참을, 나머지 경우는 거짓을 반환한다.\nx1|x2 : 논리합(OR)를 나타낸다. x1과 x2  둘 중 하나라도 참이면 참을, 둘 다 거짓이라면 거짓을 반환한다.\n연산자 우선순위는 괄호로 구분된다.\n틀린 논리식은 주어지지 않는다.",
    "output": "변수들에 적절한 값을 대입해서 참이 나온다면\n첫째 줄에 1을 출력하고\n둘째 줄에 a부터 o까지 변수들의 값(참이면 1, 거짓이면 0)을 공백으로 구분하여 출력한다.\n단, 여러 가지 경우가 나온다면 사전순으로 빠른 것을 출력한다.\n\n이 문제에서 'A가 B보다 사전순으로 빠르다'는 것은, A를 뒤집어서 이진수로 나타낸 값이 B를 뒤집어서 이진수로 나타낸 값보다 작다는 것입니다.\n\n참이 나오지 않는다면\n첫째 줄에 0을 출력한다.",
    "sample": "입력\n\n(a|(b&c))|(c&~c)\n\n출력\n\n1\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\n입력\n\n(a|(b&c))&(c&~c)\n\n출력\n\n0"
  },
  {
    "id": 758,
    "title": "max_clique",
    "time_limit": "1 초",
    "description": "한 경찰 서장은 자기가 맡은 도시에 있는 모든 범법자들에 대해 잘 알고 있다. 경찰 서장은 그 뿐만 아니라 이들이 범죄를 같이 모의할 수 있는 다른 범법자들도 파악하고 있다. 단 그는 이 정보를 바탕으로 자기 도시에서 가장 큰 갱에 어떤 사람들이 들어 있는지를 알아내고 싶어한다.",
    "input": "입력의 첫 줄은 강도 수 n ( 2 <= n <=40 )이  입력되고 , 다음 n 줄은 관계가 입력된다.",
    "output": "출력의 첫 줄은 가장 큰 강도조직 수이고 , 다음 줄 은 어떤 조직인지를 출력한다.\n답이 여러가지 인 경우 조직이 정렬 된 상태에서 사전 순으로 먼저 나오는 것을 출력한다.",
    "sample": "a(1,1)\na(2,1) a(2,2)\na(3,1) a(3,2) a(3,3)\n...\na(n,1) a(n,2) .......... a(n,n)"
  },
  {
    "id": 759,
    "title": "election",
    "time_limit": "1 초",
    "description": "5 행 5 열에 H 와 J 로 채워져 있고 , 인접한 7 개 지역에서 J 가 H 보다 많은 가짓 수를 출력하는 것이 문제이다.",
    "input": "5 행 5 열에 H 과 J 문자가 입력으로 주어진다.",
    "output": "가능한 가짓 수를 출력한다.",
    "sample": "입력\n\nHHHHH\nJHJHJ\nHHHHH\nHJHHJ\nHHHHH\n\n출력\n\n2"
  },
  {
    "id": 760,
    "title": "clock",
    "time_limit": "1 초",
    "description": "3 * 3 배열에 분침이 없는 9 개의 시계가 있다. 각 시계의 상태는 12 시 , 3 시 , 6 시 , 9 시 중 한 상태에 있다.",
    "input": "",
    "output": "",
    "sample": "|-------|    |-------|    |-------|\n|       |    |       |    |   |   |\n|---O   |    |---O   |    |   O   |\n|       |    |       |    |       |\n|-------|    |-------|    |-------|\n    A            B            C\n \n|-------|    |-------|    |-------|\n|       |    |       |    |       |\n|   O   |    |   O   |    |   O   |\n|   |   |    |   |   |    |   |   |\n|-------|    |-------|    |-------|\n    D            E            F\n \n|-------|    |-------|    |-------|\n|       |    |       |    |       |\n|   O   |    |   O---|    |   O   |\n|   |   |    |       |    |   |   |\n|-------|    |-------|    |-------|\n    G            H            I"
  },
  {
    "id": 761,
    "title": "latin_square",
    "time_limit": "2 초",
    "description": "아래 배열은 1 에서 5 사이 수로 이루어져 있고 , 각 행과 열에 1 에서 5 까지의 수가 단 한 번 나타나는 5*5 라틴 스퀘어이다.",
    "input": "",
    "output": "",
    "sample": "1  2  3  4  5\n2  1  4  5  3\n3  4  5  1  2\n4  5  2  3  1\n5  3  1  2  4"
  },
  {
    "id": 762,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 763,
    "title": "job_assignment",
    "time_limit": "1 초",
    "description": "각자가 자신있는 과목을 가르쳐야 능률이 오르기 때문에 이 들은 가장 효과적인 방법을 찾고 자 한다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n4\n12 37 23 15 \n28 11 21 19 \n24 14 41 40\n21 23 31 23\n\n출력 \n\n136\n2 1 4 3"
  },
  {
    "id": 764,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 765,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 766,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 767,
    "title": "pcontrol",
    "time_limit": "1 초",
    "description": "당신은 나쁜우유가 선적이 되어서 보내졌다는 것을 발견했다. 이 우유가 목적지 가게로 가는 길을 봉쇄하고자 하는데 , 목적지 가게로 가는 길은 여러가지가 있다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n4 5\n1 3 100\n3 2 50\n2 4 60\n1 2 40\n2 3 80\n\n출력\n\n60 1\n3"
  },
  {
    "id": 768,
    "title": "assignment(open)",
    "time_limit": "2 초",
    "description": "농부 존의 N ( 1 <= N <= 1000 ) 마리의 소들이 B ( 1 <= B <= 20 )곳의 우리에 산다. 각 우리에 할당할 수 있는 소들의 수는 정해져 있다.",
    "input": "첫 번째 줄은 두 정수 소의 수 N 과 우리의 수 B 가 입력으로 주어진다.\n다음 N 줄에는 B 개의 우리 번호가 주어진다. 차례대로 소들이 좋아하는 우리 번호이고 정렬되어 입력된다.\n마지막 줄은 각 우리의 정원수이다. 우리의 정원의 합은 적어도 N 이다.",
    "output": "마지막 지점을 포함해서 그들의 할당된 우리의 최소 범위의 크기를 출력한다.",
    "sample": "입력\n\n6 4\n1 2 3 4\n2 3 1 4\n4 2 3 1\n3 1 2 4\n1 3 4 2\n1 4 2 3\n2 1 3 2\n\n출력\n\n2"
  },
  {
    "id": 769,
    "title": "ditch",
    "time_limit": "1 초",
    "description": "비가 올때 마다 연못이 넘져 순돌이의 클로버 밭으로 물이 넘져 막대한 손해을 본다. 그래서 순돌이는 물이 넘치지 못하도록 여러개의 도랑을 만들었다.",
    "input": "라인의 첫 줄은 N (0 <= N <= 200) and M (2 <= M <= 200)이 주어진다. N 은 도랑의 수이고 M 은 도랑의 교차지점의 수이고 1 번은 연못이고 , M 번은 출구이다.\n다음 N 라인은 세 정수 S E C 가 주어진다. S 는 도랑의 시작번호이고 E 는 도착지점이고 C 는 도랑의 한계 량이다. (1 <= S, E <= M 이고 0 <= C <= 10,000,000)",
    "output": "연못에서 보낼수 있는 최대 물의 양을 출력한다.",
    "sample": "입력\n\n5 4\n1 2 40\n1 4 20\n2 4 20\n2 3 30\n3 4 10\n\n출력\n\n50"
  },
  {
    "id": 770,
    "title": "pigs",
    "time_limit": "1 초",
    "description": "미코는 N 개의 우리를 가진 돼지 농장에서 일한다. 그는 우리의 키를 가지고 있지 않아 우리를 열수가 없다.",
    "input": "첫 줄에는 두 정수 N,M 이 주어진다.(1 <= N <= 1000, 1 <= M <= 100) 각각은 돼지우리 수 와 고객 수이다. 돼지우리는 1 에서 순차적으로 N 까지 번호가 부여되어 있고 , 고객은 1 에서 M 까지 부여되어 있다.\n다음 줄은 M 개의 정수가 주어진다. 우리에 있는 돼지 수이다. 이 수는 0 보다 크고 1000 이하이다.\n다음 N 줄은 A K1 K2 .. KA B 형식으로 A 는 고객이 가진 열쇠 수이고 다음 A 개의 수는 키를 가진 우리 번호로 크기 순으로 입력되고 마지막으로 이 고객이 필요한 돼지 수 B 가 주어진다. A,B 는 0 이 될수 있다.",
    "output": "최대로 판 돼지 수를 출력한다.",
    "sample": "입력\n\n3 3 \n3 1 10 \n2 1 2 2 \n2 1 3 3\n1 2 6\n\n출력\n\n7"
  },
  {
    "id": 771,
    "title": "exodus",
    "time_limit": "1 초",
    "description": "N * N 크기 지도의 서로 다른 위치에 M 명의 죄수들이 있다. 이 죄수들을 무사히 밖으로 탈출시키고자 한다. 죄수들의 탈출은 , 지도의 맨 가장자리로 이동시키는 것을 의미한다. 각 죄수들은 동,서,남,북 어느 쪽이든 이동할 수 있지만 , 다른 죄수들이 거쳤던 곳으로는 움직이지 못한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n6 11\n0 0 0 0 0 0\n0 1 0 1 0 1\n1 1 0 1 1 1\n0 1 0 1 0 1\n0 0 0 0 0 0\n0 0 0 0 0 0\n\n출력\n\n0"
  },
  {
    "id": 772,
    "title": "couple(special judge)",
    "time_limit": "2 초",
    "description": "남학생 n명과 여학생 n명이 데이트를 하려고 한다.",
    "input": "첫째 줄에는 남학생의수(여학생의수) (1 <= N <= 500)이 주어진다.\n둘째 줄부터 N+1줄까지는 i ( 1 <= i <= N ) 번째 남학생에 대한 이상형 여학생의 수( 0 <= K <= N )가 주어지고 이상형인 여학생이 주어진다.",
    "output": "첫째 줄에는 만들 수있는 커플수의 최대를 출력하고,\n다음 줄부터는 커플을 1번 남학생부터 순서대로 출력한다.\n커플이 없는 경우에는 -1을 출력한다.",
    "sample": "입력\n\n3\n2 2 3\n2 1 3\n2 1 2\n\n출력 \n\n3\n1 2\n2 3\n3 1\n\n입력 \n\n5\n5 1 2 3 4 5\n1 1\n1 1\n1 1\n1 1\n\n출력 \n\n2\n1 2\n2 1\n3 -1\n4 -1\n5 -1\n\n입력 \n\n1\n0\n\n출력 \n\n0\n1 -1"
  },
  {
    "id": 773,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 774,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 775,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 776,
    "title": "seek",
    "time_limit": "1 초",
    "description": "깜직한 고양이는 작명하는데 아주 유명해서 , 많은 커플들이 바이트랜드 나라로 몰려와서 태어나는 아이들의 이름을 지어주기를 요청한다. 그들은 이름을 잘 지어서 , 태어난 아이가 명성을 얻기를 바란다. 이름을 짓는 작업은 따분한 작업이어서 혁신적인 마인드를 가진 고양이는 쉽지만 아주 기막힌 알고리즘을 고안 했다.",
    "input": "각 입력데이터의 크기는 1 이상 400000 이하이다.",
    "output": "각 입력데이터당 출력은 오름차순 순으로 출력한다.",
    "sample": "입력\n\nababcababababcabab\n\n출력\n\n2 4 9 18\n\n입력\n\naaaaa\n\n출력\n\n1 2 3 4 5"
  },
  {
    "id": 777,
    "title": "period",
    "time_limit": "1 초",
    "description": "크기 N 인 문자열 S ( 소문자로 구성 ) 가 주어질 때 이 문자열의 접두어(prefix)가 주기를 가지는 문자인지를 알고자 한다.",
    "input": "첫 줄에는 문자열의 크기를 나타내는 N 이 주어진다. 2 <= N <= 1 000 000\n두 번째 줄에는 문자열이 주어진다.",
    "output": "접두어의 크기 i 와 주기 K (K > 1)를 출력한다. 접두어의 크기는 오름차순으로 출력되어야 한다.",
    "sample": "입력\n\n3\naaa\n\n출력\n\n2 2\n3 3\n\n입력\n\n12\naabaabaabaab\n\n출력\n\n2 2\n6 2\n9 3\n12 4"
  },
  {
    "id": 778,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 779,
    "title": "cdrw",
    "time_limit": "1 초",
    "description": "cd 를 굽는 장치(CD-RW)가 세 대 있다. 이들 CD-RW 로 CD를 굽는데 걸리는 시간은 각각 1 분, 3 분, 4 분이다. 구울려는 CD 의 개수가 주어질 때 일을 마치는데 걸리는 최소 시간을 구하는게 문제이다. 물론 동시 작업이 가능하다.",
    "input": "cd 의 장 수 n 을 입력한다.  n 은 10000 이하의 자연수이다.",
    "output": "최소 시간을 출력한다.",
    "sample": "입력\n\n20\n\n출력\n\n13"
  },
  {
    "id": 780,
    "title": "butt",
    "time_limit": "1 초",
    "description": "입력으로 두 개의 정수 n , k 가 입력으로 주어진다.",
    "input": "두 개의 정수 n , k 가 입력으로 주어진다. 두 정수는 정수 범위",
    "output": "피터가 피울 수 있는 총 담배수를 출력한다.",
    "sample": "입력\n\n4 3\n\n출력\n\n5\n\n입력\n\n10 3\n\n출력\n\n14\n\n입력\n\n100 5\n\n출력\n\n124"
  },
  {
    "id": 781,
    "title": "ally",
    "time_limit": "1 초",
    "description": "양의 정수 n 이 주어지는 경우 , 먼저 아군이 n 명이 줄을 서고, 다음 적군 n 명이 줄을 선다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n3\n\n출력\n\n5"
  },
  {
    "id": 782,
    "title": "runaround",
    "time_limit": "1 초",
    "description": "N 자리 런어라운드 수는 다음과 같이 정의된다.",
    "input": "하나의 정수가 주어진다.",
    "output": "주어지는 입력보다 큰 최초의 런어라운드 수를 출력한다.",
    "sample": "입력\n\n81361\n\n출력\n\n81362"
  },
  {
    "id": 783,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 784,
    "title": "aorb",
    "time_limit": "1 초",
    "description": "수 n 을 입력으로 받아 1 ~ n 사이( 1 , n 포함 )수 중 6 의 배수이거나 , 8 의 배수인 수의 개수를 구하는 프로그램을 작성하시오.",
    "input": "수 n 은  2 이상 100000000 사이 정수이다.",
    "output": "개수를 출력한다.",
    "sample": "입력\n\n100\n\n출력\n\n24"
  },
  {
    "id": 785,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 786,
    "title": "odometer",
    "time_limit": "1 초",
    "description": "주행 거리 계기판이 고장이 나서 숫자 4 가 표시되지 않는다.",
    "input": "입력되는 수의 범위는 1..999999999 이다.",
    "output": "",
    "sample": "입력\n\n13\n\n출력\n\n13: 12\n\n입력\n\n15\n\n출력\n\n15: 13\n\n입력\n\n999999\n\n출력\n\n999999: 531440"
  },
  {
    "id": 787,
    "title": "equ(open)",
    "time_limit": "1 초",
    "description": "",
    "input": "입력으로 두 줄이 주어진다.\n첫 줄에는 a , b , p 가 다음 줄에는 c , d , q 가 주어진다. 주어지는 수는 모두 정수이다.",
    "output": "출력은\n하나의 근이 나오는 경우에는 x , y 순으로 근을 소수 이하 두자리까지 출력하고 ,\n근이 여러개 나오는 경우에는 'not decided'\n근이 나올 수 없는 경우 'impossible'\n를 출력한다.",
    "sample": "입력\n\n15 11 3 \n7 11 17 \n\n출력\n\n-1.75\n2.66"
  },
  {
    "id": 788,
    "title": "straight(open)",
    "time_limit": "1 초",
    "description": "세 점이 주어질 때 이 세점이 일직선 상에 있는가를 알아내는 프로그램을 작성하시오.",
    "input": "(x,y) 좌표 세 쌍이 한 줄에 하나씩 입력으로 주어진다.  모든 수는 정수이다.",
    "output": "일 직선 상에 있으면 yes , 아니면 no 를 출력한다.",
    "sample": "입력\n\n0 1\n1 3\n2 5\n\n출력\n\nyes"
  },
  {
    "id": 789,
    "title": "lines",
    "time_limit": "1 초",
    "description": "농부 존은 베시(소)에게 다음과 같은 게임을 제안했다: 그는 N ( 2 <= N <= 200 )개의 서로 다른 점이 찍혀있는 보드판을 가지고 있다. 점 i 는 정수 Xi,Yi 좌표로 주어진다. (-1,000 ≤ Xi ≤ 1,000; -1,000 ≤ Yi ≤ 1,000).",
    "input": "첫 번째 라인은 점의 수 N\n다음 N + 1 줄에는 xi,yi 정수 좌표가 주어진다.",
    "output": "베시가 그을 수 있는 평행하지 않는 최대 직선 수를 출력한다.",
    "sample": "입력\n\n4\n-1 1\n-2 0\n0 0\n1 1\n\n출력\n\n4"
  },
  {
    "id": 790,
    "title": "visible",
    "time_limit": "1 초",
    "description": "(0,0) 에서 (x,y) 로 선을 그을 때 다른 점( 0 이상 정수의 격자) (x,y) 점은 원점에서 보이는(visible) 점이라 하자.",
    "input": "입력의 첫 줄은 테스트 데이터 수 C 이다. ( 1 <= C <= 1000)\n      다음 C 줄에는 크기 N (1 <= N <= 1000) 이 주어진다.",
    "output": "출력 형식의\n\n      첫 수는 데이터 세트의 순서 번호 , 데이터(N) , 보이는 점의 수이다.",
    "sample": "입력\n\n4\n2\n4\n5\n231\n\n출력\n\n1 2 5\n2 4 13\n3 5 21\n4 231 32549"
  },
  {
    "id": 791,
    "title": "jailer",
    "time_limit": "1 초",
    "description": "n 개의 방을 가진 감옥이 있다. 이 방의 문은 처음 모두 닫혀 있다.",
    "input": "방의 개수 n 이 주어진다. n 의 범위는 5 이상 100 이하이다.",
    "output": "열려있는 방의 개수를 출력한다.",
    "sample": "c c c c c  -- 최초 상태 \no o o o o  -- 1 의 배수\no c o c o  -- 2 의 배수\no c c c o  -- 3 의 배수\no c c o o  -- 4 의 배수\no c c o c  -- 5 의 배수"
  },
  {
    "id": 792,
    "title": "divisors",
    "time_limit": "3 초",
    "description": "각 테스트는 한 줄로 n , k 가 주어진다. ( 0 <= k <= n <= 431 ) 입력의 끝은 EOF 이다.",
    "input": "여러개의 테스트 데이터가 입력으로 주어진다.\n각 테스트는 한 줄로 n , k 가 주어진다. ( 0 <= k <= n <= 431 ) 입력의 끝은 EOF 이다.",
    "output": "각 테스트 당 정수 하나가 출력된다. 이 수는 2\n63\n-1 을 넘지 않는다.",
    "sample": "입력\n\n5 1\n6 3\n10 4\n\n출력\n\n2\n6\n16"
  },
  {
    "id": 793,
    "title": "ones",
    "time_limit": "1 초",
    "description": "2 혹은 5 로 나누어지지 않는 0 이상 10000 의 정수를 받아 , n 의 배수중 어떤 수는 10 진수로 모든 자리수가 1 이다.",
    "input": "n 이 주어진다.",
    "output": "자리수를 출력한다.",
    "sample": "입력\n\n3\n\n출력\n\n3\n\n입력\n\n7\n\n출력\n\n6\n\n입력\n\n9901\n\n출력\n   \n12"
  },
  {
    "id": 794,
    "title": "triangle1",
    "time_limit": "2 초",
    "description": "같은 길이의 성냥개비가 여러 개 주어져 있다. 이것들을 평면에 늘어놓아서 삼각형을 만들려고 한다. 삼각형의 한 변은 여러 개의 성냥개비를 직선으로 이어서 만들 수 있지만, 성냥개비를 꺾거나 잘라서 변의 한 부분을 만들 수는 없다. 성냥개비의 개수가 주어졌을 때, 이들 성냥개비를 사용하여 만들 수 있는 서로 다른 삼각형의 개수를 구하는 프로그램을 작성하시오.",
    "input": "",
    "output": "",
    "sample": "입력\n\n9\n\n\n출력\n\n3"
  },
  {
    "id": 795,
    "title": "bullseys",
    "time_limit": "1 초",
    "description": "다트 판은 여러개의 링이 걸려져 있는 평평한 원형이다.",
    "input": "입력으로 12 개의 실수가 입력으로 주어진다.\n\n      다트의 중심을 원점으로 했을 때 한 쌍식 X,Y 좌표 값이다.\n      \n      처음 3 쌍은 첫 번째 선수 , 다음 3 쌍은 두 번째 선수의 좌표 점이다.(  -20.0<=X, Y<=20.0 )",
    "output": "다음 두 가지중 한 가지 형식으로 출력한다.\nSCORE: N to M, PLAYER P WINS. \nSCORE: N to M, TIE.\nN 은 첫 플레이어의 점수 , M 은 두 번째 플레이어의 점수이다.\nP 는 1 혹은 2 이다.",
    "sample": "SCORE: N to M, PLAYER P WINS. \nSCORE: N to M, TIE."
  },
  {
    "id": 796,
    "title": "mfactor",
    "time_limit": "1 초",
    "description": "주어지는 수를 소인수 분해 했을 때 가장 큰 소인수를 가지는 수를 출력하는게 문제이다.",
    "input": "첫 줄에는 수의 개수 N (1 <= N <= 5000 ) 이 입력으로 주어진다.\n      다음 N 줄에는 수들이 입력으로 주어진다. 각 수들의 범위는 1 .. 20,000 이다.",
    "output": "답이 여러개 존재하는 경우 먼저 입력되는 수를 출력한다.",
    "sample": "입력\n\n4\n36\n38\n40\n42\n\n출력\n\n38"
  },
  {
    "id": 797,
    "title": "divisor",
    "time_limit": "1 초",
    "description": "수 n 이 주어질 때 이 수의 약수의 개수를 구하는 것이 문제이다.",
    "input": "n 은 1 이상 2 000 000 000 이하의 자연수이다.",
    "output": "개수를 출력한다.",
    "sample": "입력\n\n10\n\n출력\n\n4"
  },
  {
    "id": 798,
    "title": "balloonist",
    "time_limit": "1 초",
    "description": "열명의 수학자가 태평양 상공을 풍선기구를 타고 여행하고 있었다. 그들이 적도 부근을 지날 때 그들은 행사를 축하하기 위해 샴페인을 터트렸다. 그러나 불행하게도 이 샴페인 뚜껑이 기구에 구멍을 내고 말았다.",
    "input": "10,000 이하의 자연수가 열 개가 한 줄에 하나씩 입력으로 주어진다.",
    "output": "10 명의 사람은 0 부터  9 까지 번호가 부여되어 있다.",
    "sample": "입력\n\n1\n2\n6\n1\n3\n1\n1\n1\n1\n1\n\n출력\n\n9"
  },
  {
    "id": 799,
    "title": "factorial1",
    "time_limit": "1 초",
    "description": "팩토리얼은 급격히 증가하므로 13 ! 만 해도 32 비트 컴퓨터에서 정수 표현범위를 넘어가고 70! 은 실수범위를 넘어간다.",
    "input": "4,220 보다 크지 않는 정수 N 이 입력된다.",
    "output": "1 에서 9 중 하나의 수가 출력된다.",
    "sample": "입력\n\n7\n\n출력\n\n4"
  },
  {
    "id": 800,
    "title": "simple_calc",
    "time_limit": "1 초",
    "description": "n + 2 개의 수열 에서",
    "input": "첫 줄은 n 의 수이고, 다음 줄 부터\n이 주어진다.\nn 은 3000 이하이고 , ai 는 -1000 이상 1000 이하이다. ai 와 ci 는 소수이하 두 자리 수로 주어진다.",
    "output": "a1 값을 소수 이하 두 자리까지 출력한다.",
    "sample": "입력\n\n1\n50.50\n25.50\n10.15\n\n출력\n\n27.85"
  },
  {
    "id": 801,
    "title": "pair (special judge)",
    "time_limit": "1 초",
    "description": "어떤 시골의 중학교에는 부근의 3개 초등학교를 졸업한 남녀 학생들이 입학한다. 1학년 1반을 맡게 된 김갑동 선생님은 자기 반에 배정된 학생들을 대상으로 하여 짝을 정하려고 한다.",
    "input": "",
    "output": "",
    "sample": "남학생수 여학생수 \nA 초등 출신      4       2\nB 초등 출신      1       3\nC 초등 출신      1       1"
  },
  {
    "id": 802,
    "title": "diagonal",
    "time_limit": "1 초",
    "description": "사각형 형태의 바닥이 있다. 바닥은 여러 개의 사각형 형태의 블록으로 구성되는데, 각 블록은 정사각형 모양일 수도 있고, 직사각형 모양일 수도 있지만 모든 블록의 모양은 동일하다.",
    "input": "",
    "output": "",
    "sample": "입력 \n\n41 25\n\n출력\n\n65"
  },
  {
    "id": 803,
    "title": "eva_balance",
    "time_limit": "1 초",
    "description": "에바는 20 개의 저울 추를 가지고 있다. 추의 무게는 1 , 3 , 9 , 27 , ... , 3^19 이다.",
    "input": "물건의 무게 W 가 입력으로 주어진다. ( 1 <= W <= (3^20-1)/2 )",
    "output": "왼쪽 접시의 저울추 , 오른쪽 접시의 저울 추를 공백을 사이에 두고 출력한다. 같은 접시내의 저울추는\n오름차순으로 출력하고 콤마(,)로 저울추를 구분한다.\n왼쪽 접시에 저울추가 필요하지 않다면 empty 를 출력한다.",
    "sample": "입력\n\n9\n\n출력\n\nempty 9\n\n입력\n\n5\n\n출력\n\n1,3 9\n\n입력\n\n20\n\n출력\n\n1,9 3,27"
  },
  {
    "id": 804,
    "title": "grid",
    "time_limit": "1 초",
    "description": "수학 수업 시간에 (a + b)2 = a^2 + 2ab + b^2 내용를 다루어 이미 알고 있던 터라 지루 하기가 그지 없다.",
    "input": "입력은 32 비트 부호 없는 정수형 내에 n , m 이 입력으로 주어진다.  n 은 행이고 m 은 열이다.",
    "output": "그릴 수 있는 방법의 수를 출력한다. 가짓수는 32 비트 부호없는 정수 보다 작은 것은 보장된다.",
    "sample": "입력\n\n5 4\n\n출력\n\n126\n\n입력\n\n1 1\n\n출력\n\n2"
  },
  {
    "id": 805,
    "title": "moronic",
    "time_limit": "1 초",
    "description": "디지털 세계에 익숙치 않은 소들이 이진수를 사용하여 계산하는 계산기를 만들려고 노력하고 있다. 그런데 2 진수가 아니라 -2 진수 체계를 사용하는 계산기를 만들었다. 이 수 체계를 사용한다면 부호를 사용할 필요가 없기 때문에 그들은 아주 만족하고 있다.",
    "input": "-2 진법으로 바꿀 10 진수가 입력으로 주어진다.",
    "output": "-2 진법으로 출력한다.",
    "sample": "입력\n\n-13\n\n출력\n\n110111"
  },
  {
    "id": 806,
    "title": "inver",
    "time_limit": "1 초",
    "description": "수열 a1 , a2 , a3 , ... , an 의 inversion number 는 i < j 이고 ai > aj 인 (ai,aj) 의 수이다.",
    "input": "두 정수 n 과 m 이 입력으로 주어진다. n 은 1 <= n <= 50000 이고 0 <= m <= n(n-1)/2",
    "output": "최소 수열을 출력한다.",
    "sample": "입력\n\n5 9\n\n출력\n\n4 5 3 2 1\n\n입력\n\n7 3\n\n출력\n\n1 2 3 4 7 6 5"
  },
  {
    "id": 807,
    "title": "yeehaa",
    "time_limit": "1 초",
    "description": "[문제 요약] 큰 원의 반지름이 주어지고 작은 원의 개수가 주어질 때 작은 원의 반지름의 길이를 구하는 문제",
    "input": "두 수  큰 원의 반지름인 실수  R , 작은 원의 개수 n 이 주어진다.  1 <= R <= 100 and 2 <= n <= 100.",
    "output": "작은 원의 반지름을 소수이하 세자리까지 출력한다.",
    "sample": "입력\n\n4.0 6\n \n출력\n\n1.333\n\n입력\n\n4.0 17\n \n출력\n\n0.621\n\n입력\n\n3.14159 100\n\n출력\n\n0.096\n\n입력\n\n42 2\n\n출력\n\n21.000"
  },
  {
    "id": 808,
    "title": "combinations",
    "time_limit": "1 초",
    "description": "n 개 중에 m 개를 선택하는 방법의 수를 계산하는 것은 n 과 m 이 커지는 경우 쉬운일이 아닌다.",
    "input": "n 과 m 이 주어진다.\n5 <= n <= 100; 5 <= m <= 100; m <= n 이 주어질 때 nCm 을 구하는 것이 문제이다.",
    "output": "아래 형식을 출력한다.\nN things taken M at a time is C exactly.\n출력은 64 비트 정수형을 넘지 않는다.",
    "sample": "입력\n\n100  6\n\n출력\n\n100 things taken 6 at a time is 1192052400 exactly.\n\n입력\n\n20  5\n\n출력\n\n20 things taken 5 at a time is 15504 exactly.\n\n입력\n\n18  6\n\n출력\n\n18 things taken 6 at a time is 18564 exactly."
  },
  {
    "id": 809,
    "title": "stirling",
    "time_limit": "1 초",
    "description": "Stirling 수 S(n,m) 은 n 개의 원소를 m 개의 부분집합(공집합 제외)으로 나눌 수 있는 방법의 수를 나타낸다.",
    "input": "첫 번 째 수는 테스트 데이터 수 d 가 주어진다.  1 <= d <= 200\n다음 d 줄에 두개의 수 n , m 이 주어진다.   1 <= mi <= ni <= 10^9.",
    "output": "0 혹은 1 을 출력한다.",
    "sample": "입력\n\n1\n4 2\n\n출력\n\n1"
  },
  {
    "id": 810,
    "title": "a , p 가 서로 소이고 , p 가 소수이면\n는 p 의 배수이다. 즉",
    "time_limit": "소수 p 가 있다.\n1 , 2 , 3 , .... , p-1 에 p 와 서로 소인 수 a 를 곱하면\n1*a , 2*a , 3*a , ... ,(p-1)*a 를 p 로 나누면 나머지가 1 , 2 , ... , p-1 이 된다.",
    "description": "",
    "input": "",
    "output": "",
    "sample": "그림에서 세 구역으로 이루어져 있다. \n A 구역에만 들어 있는 A\n B\n A ^B \nA B A^B\n1   1\n  1 1\n------\n1 1 2\n\n\n\nA B C A^B A^C B^C A^B^C\n1      1   1       1\n  1    1       1   1\n    1      1   1   1\n-----------------------\n1 1 1  2   2   2   3\n\nA  B  C  D A^B A^C A^D B^C B^D C^D \n\n4 개 인 경우\n한 개자리 더해 A , B , C , D\n두개 빼 주고 \n세개 더해주고 \n네개 빼주고"
  },
  {
    "id": 811,
    "title": "relatives",
    "time_limit": "1 초",
    "description": "입력의 끝은 0 이다.",
    "input": "여러개의 테스트 데이터가 입력으로 주어진다 . n 의 범위는 n <= 1,000,000,000\n입력의 끝은 0 이다.",
    "output": "출력 예의 형식으로 개수를 출력한다.",
    "sample": "입력\n\n7\n12\n0\n\n출력\n\n6\n4"
  },
  {
    "id": 812,
    "title": "happy",
    "time_limit": "3 초",
    "description": "두 양의 정수의 최대 공약수가 1 일 때 두 수를 서로 소라고 한다.",
    "input": "여러 개의 테스트 데이터가 주어진다.\n\n   각 테스트 데이터 당 두 개의 정수 m , k 가 주어진다.  m (1 <= m <= 1000000), K (1 <= K <= 100000000).",
    "output": "한 줄에 하나씩 k 번째 원소를 출력한다.",
    "sample": "입력\n\n2006 1\n2006 2\n2006 3\n\n출력\n\n1\n3\n5"
  },
  {
    "id": 813,
    "title": "series",
    "time_limit": "1 초",
    "description": "수열의 길이는 < a1 ,a2 , a3,..,an >수열에 포함된 정수들의 개수 n 이라고 정의한다.",
    "input": "첫째 줄에 정수 M 이 주어진다.  1 <= M <= 1,000,000 이다.",
    "output": "첫째 줄에 문제 A에서 구한 수열의 길이 n  과 문제 B에서 구한 수열의 길이 m 을 한 개의 빈칸을 사이에 두고 차례대로 출력한다.",
    "sample": "입력\n\n6\n\n출력\n\n2 2"
  },
  {
    "id": 814,
    "title": "lamps",
    "time_limit": "1 초",
    "description": "ioi 98 년도 경축 저녁식사 모임을 축하하기 위해 , 1 부터 N ( 10 <= N <= 100)까지의 번호가 붙은 램프가 있다.",
    "input": "입력에서 같은 램프 번호는 중복되어 입력되지 않는다.\n첫번째 라인은 전구 수 N ,\n다음 라인은 눌려진 버튼 회수 C(0 <= C <= 10000) ,\n다음 라인은 마지막 상태에서 켜진 전구 번호 중 일부가 나열 되고 끝을 구분하기 위해 -1 이 입력되고\n마지막 라인은 마지막 상태에서 꺼진 전구 중 일부가 나열되고 마지막에는 -1 이 입력된다.",
    "output": "조건을 만족하는 전구의 상태를 중복없이 정렬한 후 출력한다.\n\n1 은 on , 0 은 off 를 의미한다.\n조건을 만족하는 상태가 없는 경우 IMPOSSIBLE 을 출력한다.",
    "sample": "입력\n\n10\n1\n-1\n7 -1\n\n출력\n\n0000000000\n0101010101\n0110110110\n\n\n보기의  경우 버튼이 한 번 눌려지고 7 번째 램프가 off 되어 있어야 하므로 \n1 번 , 2 번 , 4 번 버튼이 눌려지면 7 번째 램프가 꺼진 상태가 되므로 세 가지\n경우가 존재한다."
  },
  {
    "id": 815,
    "title": "sum1(open)",
    "time_limit": "1 초",
    "description": "1 에서 N 까지의 자연수에서 각 수에 + 혹은 - 를 붙여서 합 S 를 최소의 N 으로 구하는 것이 문제이다.",
    "input": "합 S 가 주어진다.(0< S <= 100000)",
    "output": "합 S 를 만들 수 있는 최소 N 출력한다.",
    "sample": "입력\n\n12\n\n출력\n\n7"
  },
  {
    "id": 816,
    "title": "just",
    "time_limit": "1 초",
    "description": "N!(N 팩토리얼 이라고 읽는다.)은 1부터 N까지의 양의 정수의 곱을 의미한다.(N은 0 이상. 0!=1로 정의.)",
    "input": "프로그램의 입력은 10000을 넘지 않는 0 이상의 정수의 연속이다.\n다른 글자,숫자,공백이 포함되지 않는 한 라인으로 입력이 들어온다. 각 정수 N에 대하여 당신은 값을 읽어들여 N!의 마지막 0이 아닌 자릿수를 계산해야 한다.",
    "output": "각 정수 입력에 대하여 프로그램은 정확히 한 줄의 출력을 프린트해야 한다.\n각 라인은 N을 포함해야 하며, 1열부터 5열까지 공백을 이용해 오른쪽으로 정렬해야 하며, 0을 이용해 정렬하면 안된다. 6열부터 9열까지는 “ -> “을 포함해야 한다.(공백 하이픈 부등호 공백). 10열에는 N!의 0이 아닌 마지막 자릿수를 포함해야 한다.",
    "sample": "N       N!  \n 0       1  \n 1       1  \n 2       2  \n 3       6  \n 4      24  \n 5     120  \n10 3628800"
  },
  {
    "id": 817,
    "title": "factorial3",
    "time_limit": "1 초",
    "description": "GSM 네트워크의 가장 중요한 부분은 BTS(Base Transceiver Station)이라 불리는 곳이다. 이 송수신기들은 cell(이 용어는 cellular phone이라는 이름을 만들었다) 이라 불리는 영역을 형성하여 모든 전화기는 BTS에 가장 강력한 신호로 연결된다.(약간 간략화된 관점) 물론, BTS들은 그들이 제대로 동작하는지 주기적으로 점검하고 그를 위한 기술자들이 필요하다.",
    "input": "입의 첫번째 줄에는 한 개의 양의 정수 T가 들어온다. 이 값은 뒤이어서 들어올 숫자의 개수를 나타낸다. 그리고 그 뒤에 T 줄은 각각 정확히 하나의 양의 정수 N을 나타내고, N의 범위는 1<=N<=1 000 000 000이다.",
    "output": "모든 N에 대하여 출력은 음이 아닌 하나의 정수인 Z(N)을 한 줄에 하나씩 출력하면 된다.",
    "sample": "입력\n\n6\n3\n60\n100\n1024\n23456\n8735373\n\n출력\n\n0\n14\n24\n253\n5861\n2183837"
  },
  {
    "id": 818,
    "title": "fac",
    "time_limit": "1 초",
    "description": "N!의 끝에서 연속하는 0의 개수를 출력하는문제이다. 단, N! = N * (N-1) * (N-2) . . . * 3 * 2 * 1",
    "input": "N이 주어진다. ( 1 <= N <= 1,000,000,000,000,000,000 )",
    "output": "끝에서 연속하는 0의 개수를 출력한다.\n단, 숫자가 너무커질수 있으므로 500,000,000,000,000,007로 나눈 나머지 값을 출력한다.",
    "sample": "입력 \n\n1\n\n출력\n\n0\n\n입력\n\n10\n\n출력\n\n2\n\n\n입력\n\n100\n\n출력\n\n24\n\n입력\n\n1422534662\n\n출력\n\n355633660"
  },
  {
    "id": 819,
    "title": "nth_pow(open)",
    "time_limit": "1 초",
    "description": "n 자리수가 n 거듭 제곱으로 표현가능한 수를 n 거듭제곱 수라고 할 때 , n 거듭 제곱 수 모두를 출력하는게 문제이다.",
    "input": "입력은 없다.",
    "output": "한 줄에 하나씩 가능한 모든 경우를 출력 예의 형식으로 출력한다.\n거듭 제곱 순으로 오름차순으로 출력하고 같은 거듭제곱이면 밑이 크지는 순으로 출력한다.",
    "sample": "입력\n\n출력\n\n1^1\n2^1\n3^1\n4^1\n..."
  },
  {
    "id": 820,
    "title": "dilemma",
    "time_limit": "1 초",
    "description": "[문제요약] 입력으로 주어진 수 N 이 3 자리수 abc 이면",
    "input": "It is a set of lines with a positive integer N not bigger than 2147483648 in each of them.",
    "output": "For every one of these integers a line containing the smallest positive integer E such that the first digits of 2\nE\nare precisely the digits of N, or, if there is no one, the sentence ``no power of 2\".",
    "sample": "입력\n\n1\n2\n10\n\n출력\n\n7\n8\n20"
  },
  {
    "id": 821,
    "title": "numbers",
    "time_limit": "1 초",
    "description": "문제는 (3 + √5)n 의 정수부 마지막 세 자리수를 구하는 것이다.",
    "input": "첫 줄에는 테스트 세트의 수 t 가 입력으로 주어진다. 다음 t 줄에는  양의 정수 n 이 주어진다.\n\nt 는 100 이하의 정수 , n 은 2 <= n <= 2 000 000 000",
    "output": "출력의 각 줄에는 (3 + √5)\nn\n의 정수부 마지막 세자리가 주어진다. 세 자리 정수가 2 자리이하이면 0 을 붙여\n출력 예의 형식을 출력한다.",
    "sample": "입력\n\n2\n5\n2\n\n출력\n\nCase #1: 935\nCase #2: 027"
  },
  {
    "id": 822,
    "title": "grazing_cow",
    "time_limit": "1 초",
    "description": "암소가 필드에서 풀을 먹고 있다. 필드에 있는 로프는 두 개의 지주에 묶여 있고, 암소는 링으로 로프에 묶여 있다. 그래서 암소는 로프의 어떤 지점으로도 이동이 가능하다. 당신의 일은 암소가 가서 풀을 먹을 수 있는 필드의 면적을 구하는 것이다.",
    "input": "각 줄에는 두 정수 D(0 <= D <= 1000)  와 L(0 < L <= 1500) 이 주어진다.\n\n\nD 는 두 지주사이의 거리이고 , L 은 로프의 길이 이다.(단위는 feet)",
    "output": "소수 3 자리까지 면적을 출력한다.",
    "sample": "입력\n\n10 12\n\n출력\n\n62.517\n\n입력\n\n23 45\n\n출력\n\n1366.999\n\n입력\n\n12 18\n\n출력\n\n189.670"
  },
  {
    "id": 823,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 824,
    "title": "submarine",
    "time_limit": "1 초",
    "description": "일반적으로 잠수함 엔진이 작동할 때에 나오는 소리는 잠수함 종류에 따라서 다르다고 한다. 우리는 물 속에서 들리는 소리의 패턴을 듣고서 그 소리가 특정한 잠수함에서 나오는 소리인지 아닌지를 알아내려고 한다.이 문제에서는 잠수함의 소리가 두 종류의 단위소리의 연속으로 이루어져 있고,그 단위 소리를 각각 0 과 1 로 표시한다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n10010111 \n\n출력\n\nnoise\n\n입력\n\n01001011000001  \n\n출력\n\nnoise\n\n입력\n\n100000000000101 \n\n출력\n\nsubmarine\n\n입력\n\n11111110000 \n\n출력\n\nnoise\n\n입력\n\n10000001111110101100111101 \n\n출력\n\nsubmarine"
  },
  {
    "id": 825,
    "title": "circumference",
    "time_limit": "1 초",
    "description": "일 직선위에 있지 않은 세 점이 주어질 때 이 세 점을 지나는 원주(원의 둘레)를 구하는 것이 문제이다.",
    "input": "세 점의 실수 좌표가 주어진다 . x1,y1,x2,y2,x3,y3  각 점은 1,000,000 을 넘지 않는다.",
    "output": "원주를 소수 두자리까지 구한다.\n원주률 pi 는 3.141592653589793 계산 한다.",
    "sample": "입력\n\n0.0 -0.5 0.5 0.0 0.0 0.5\n\n출력\n\n3.14\n\n입력\n\n0.0 0.0 0.0 1.0 1.0 1.0\n\n출력\n\n4.44\n\n입력\n\n5.0 5.0 5.0 7.0 4.0 6.0\n\n출력\n\n6.28\n\n입력\n\n0.0 0.0 -1.0 7.0 7.0 7.0\n\n출력\n\n31.42\n\n입력\n\n50.0 50.0 50.0 70.0 40.0 60.0\n\n출력\n\n62.83\n\n입력\n\n0.0 0.0 10.0 0.0 20.0 1.0\n\n출력\n\n632.24\n\n입력\n\n0.0 -500000.0 500000.0 0.0 0.0 500000.0\n\n출력\n\n3141592.65"
  },
  {
    "id": 826,
    "title": "저 학년을 대상으로 한 vector 문서 입니다. 나름 쉽게 쓸려고 고민은 많이 하였으나 워낙 짧은 지식으로 글을 쓰니 이상한 점 있 으면 알려 주세요. 아무래도 수학적인 내용이 많이 들어가니 이해가 되지 않는 개념은 스스로 공부가 필요할 것 같습니다.",
    "time_limit": "이 부분의 완전한 이해를 위해서는 일반각에서의 삼각함수의 정의와 코사인 2 법칙을 알아야 합니다.",
    "description": "//작업 중 입니다......",
    "input": "",
    "output": "",
    "sample": "출처:dovelet"
  },
  {
    "id": 827,
    "title": "vec(open)",
    "time_limit": "1 초",
    "description": "임의의 벡터는 평행하지 않은 두 벡터의 합으로 표현할 수 있다.",
    "input": "평행하지 않는 두 벡터\n,\n와\n가 주어진다.\n첫 줄에는 a 벡터\n두번 째 줄에는 b 벡터\n세번 재 줄에는 p 벡터\n가 주어진다.",
    "output": "m 과 n 을 소수 이하 세 자리까지 출력한다.",
    "sample": "입력\n\n2 6\n4 2\n3 4\n\n출력\n\n0.500 0.500\n\n입력\n\n3 5\n5 9\n1 3\n\n출력\n\n-3.000 2.000"
  },
  {
    "id": 828,
    "title": "in_out(open)",
    "time_limit": "1 초",
    "description": "그림과 같이 사각형의 중심의 좌표가 주어지고 다른 한 점이 주어질 때 이 점이 사각형 내부의 점 인지 아닌지를 판별하는 문제이다.",
    "input": "첫 줄에는 중심의 좌표와 중심에서 꼭지점 사이거리가\n두 번째 줄에는 판별할 점의 좌표가 주어진다.\n입력되는 좌표 범위는 -300 ~ 300 사이 정수이고 , 중심에서 꼭지점 사이의 거리 r 은  1 <= r <= 300  이다.",
    "output": "내부의 점이면 yes , 아니면 no 를 출력한다.",
    "sample": "입력\n\n2 2 3\n-1 2\n\n출력\n\nyes\n\n입력\n\n2 2 3\n-1 3\n\n출력\n\nno"
  },
  {
    "id": 829,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 830,
    "title": "clock_anticlock",
    "time_limit": "1 초",
    "description": "두 선분의 시점과 종점이 주어질 때 , 앞 선분을 기준으로 뒷 선분이",
    "input": "한 선분의 시작점 , 끝점 다른 한 선분의 시작점 끝점 형식으로 입력되는데 \n앞 선분의 끝점과 뒤 선분의 시작점이 항상 일치한다고 하자.\n즉 좌표 쌍 3 개가 입력으로 주어진다. 주어지는 수는 모두 정수이다.",
    "output": "시계(clock) , 반시계(counterclock) , 일직선(straight) 중 하나를 출력한다.",
    "sample": "입력\n\n2 4\n3 3\n2 1\n\n출력\n\nclock\n\n입력\n\n2 1\n3 3\n2 1\n\n출력\n\nstraight\n\n입력\n\n0 0 \n1 1\n2 2\n\n출력\n\nstraight"
  },
  {
    "id": 831,
    "title": "wonder",
    "time_limit": "1 초",
    "description": "아이들이 많이 묻는 질문 중에 하나가 \"하늘에는 얼마나 많은 별들이 있나요?\" 이상적인 조건하에서는 , 심지어 맨눈으로 보더라도 , 거의 8 천개의 별들을 북쪽 하늘에서 관측할 수 있다.",
    "input": "각 데이터는 별들과 사용할 망원경의 파라미터가 주어진다.\n첫 줄에는 500 을 넘지 않는 정수 n 이 주어진다. 이는 별의 개수이다.\n다음 n 라인은 3 개의 소수가 주어진다.\n\nsx, sy, and sz. 이는 각 별의 3 차원 좌표 (sx, sy, sz) 이다. -1000 ≤ sx ≤ 1000, -1000 ≤ sy ≤ 1000, -1000 ≤ sz ≤ 1000, 그리고 (sx, sy, sz) ≠ (0,0,0)\n\n다음으로 50 을 넘지 않는 정수 m 이 주어진다. 이는 망원경의 수 이다.\n다음 m 개의 줄에는 망원 경의 정보를 네 개의 실수 tx, ty, tz and ψ 로 주어진다.\n\n처음 세개의 수는 망원경의 방향을 나타낸다. 모든 망원경의 원점 (0,0,0)에 위치하고 있고 ,별들의 크기는 무시한다. 즉 세 수 (tx,ty,tz) 는 망원경을 통해서 볼수 있는 중간지점의 좌표이다. -1000 ≤ tx ≤ 1000, -1000 ≤ ty ≤ 1000, -1000 ≤ tz ≤ 1000, 그리고 (tx, ty, tz) ≠ (0, 0, 0).\n\n4 번째 수 ψ (0 ≤ ψ ≤ π/2) 는 각도 (angular radius) 가 라디언 값으로 주어진다. 즉 이는 망원경이 한 번에 볼수 있는 시야이다.\n\nθi,j 를 i 번째 별의 방향과 j 번째 망원경의 중심의 방향 사이의 각도로 정의 하자.\n\nθi,j 가 ψj 보다 작으면 i 번째 별이 j 번째 망원경을 통해서 관측 가능하다.\n\n단, 모든 i,j 의 모든 쌍에 대해서 다음 조건은 성립한다.\n\n|θi,j - ψj| > 0.00000001",
    "output": "망원경으로 관측할 수 있는 별의 수를 구해서 출력한다.\n하나의 별이 여러개의 망원경에서 관측할 수 있는 경우 이를 여러개로 간주해서는 안된다.",
    "sample": "입력\n\n3 \n100 0 500 \n-500.243 -200.1 -300.5 \n0 300 200 \n2 \n1 1 1 0.65 \n-1 0 0 1.57 \n\n출력\n\n2\n\n입력\n\n3 \n1 0 0 \n0 1 0 \n0 0 1 \n4 \n1 -1 -1 0.9553 \n-1 1 -1 0.9554\n-1 -1 1 0.9553\n-1 1 -1 0.9554\n\n출력\n\n1\n\n입력\n\n3 \n1 0 0 \n0 1 0 \n0 0 1 \n4 \n1 -1 -1 0.9553\n-1 1 -1 0.9553\n-1 -1 1 0.9553\n-1 1 -1 0.9553\n\n출력\n\n0"
  },
  {
    "id": 832,
    "title": "intersection",
    "time_limit": "1 초",
    "description": "선분, 사각형이 주어질 때 이 선분이 사각형과 겹치는지를 구하는 프로그램이다.",
    "input": "8 개의 정수가 입력으로 주어진다.  xstart ystart xend yend xleft ytop xright ybottom\n사각형의 정보가 반드시 xleft ytop xright ybottom 순으로 입력되지는 않는다.",
    "output": "겹치는 경우는 T 아니면 , F 를 출력한다.",
    "sample": "예로 , \n선분의 시작점: ( 4 , 9) -- (xstart,ystart)\n선분의 끝점:(11,2) - (xend,yend)\n사각형의 왼쪽 위점: (1,5) --(xleft,ytop)\n사각형의 오른쪽 아래점:(7,1) -- ( xright,ybotton)"
  },
  {
    "id": 833,
    "error": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[2]\"}\n  (Session info: chrome=137.0.7151.104); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f458fe75+79173]\n\tGetHandleVerifier [0x0x7ff7f458fed0+79264]\n\t(No symbol) [0x0x7ff7f4349e5a]\n\t(No symbol) [0x0x7ff7f43a0586]\n\t(No symbol) [0x0x7ff7f43a083c]\n\t(No symbol) [0x0x7ff7f43f4247]\n\t(No symbol) [0x0x7ff7f43c89af]\n\t(No symbol) [0x0x7ff7f43f100d]\n\t(No symbol) [0x0x7ff7f43c8743]\n\t(No symbol) [0x0x7ff7f43914c1]\n\t(No symbol) [0x0x7ff7f4392253]\n\tGetHandleVerifier [0x0x7ff7f485a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff7f48546fd+2981325]\n\tGetHandleVerifier [0x0x7ff7f4873350+3107360]\n\tGetHandleVerifier [0x0x7ff7f45aa9fe+188622]\n\tGetHandleVerifier [0x0x7ff7f45b228f+219487]\n\tGetHandleVerifier [0x0x7ff7f4598dc4+115860]\n\tGetHandleVerifier [0x0x7ff7f4598f79+116297]\n\tGetHandleVerifier [0x0x7ff7f457f528+11256]\n\tBaseThreadInitThunk [0x0x7ffd2dcd7374+20]\n\tRtlUserThreadStart [0x0x7ffd2e11cc91+33]\n"
  },
  {
    "id": 834,
    "title": "c_h(special judge)",
    "time_limit": "1 초",
    "description": "평면상에 N 개의 점이 있다. 이 N 개의 점들에 대한 convex hull 을 구하는게 문제이다.",
    "input": "점의 개수 N(100 이하의 정수)이 첫 줄에 주어진다.\n둘째 줄부터는 각 점의 좌표가 x,y (-10000 <= x,y <= 10000) 형식으로 주어진다. 입력되는 점들은 모두 다르다.\n주어지는 입력에 대해서 convex hull 이 존재하는 것은 보장된다.",
    "output": "convex hull 을 이루는 꼭지점의 좌표를 시계방향 혹은 반 시계방향으로  convex hull 을 이루는 최소 점만을 \n출력한다.",
    "sample": "입력\n\n7\n2 5\n4 4\n3 3\n1 2\n2 2\n5 2\n4 1\n\n출력\n\n4 1\n5 2\n4 4\n2 5\n1 2"
  },
  {
    "id": 835,
    "title": "angle_sort",
    "time_limit": "1 초",
    "description": "점들이 입력으로 주어질 때 원점을 기준으로 각도 순으로 점들을 정렬하는 문제이다.",
    "input": "점의 개수 N(100 이하의 정수)이 첫 줄에 주어진다.\n둘째 줄부터는 각 점의 좌표가 x,y (-10000 <= x,y <= 10000) 형식으로 주어진다. 입력되는 점들은 모두 다르다.\n처음 입력되는 점이 1 번 점 , 다음 입력되는 점이 2 번 점,...",
    "output": "각도가 작은 순으로 점의 번호를 출력한다. 각이 같은 경우 먼저 입력되는 점 우선으로 출력한다.\n단, 원점의 경우 0도로 가정한다",
    "sample": "입력\n\n6\n-1 2\n-2 -2\n2 -1\n4 1\n4 3\n2 -3\n\n출력 \n\n4 5 1 2 6 3"
  },
  {
    "id": 836,
    "title": "angle_sort2",
    "time_limit": "1 초",
    "description": "위 문제에서의 입력데이터에서는 6 번째 점을 기준으로 각도순으로 정렬하면 출력은 6 4 5 3 1 2 이 될 것이다.",
    "input": "점의 개수 N(100 이하의 정수)이 첫 줄에 주어진다.\n둘째 줄부터는 각 점의 좌표가 x,y (-10000 <= x,y <= 10000) 형식으로 주어진다. 입력되는 점들은 모두 다르다.\n처음 입력되는 점이 1 번 점 , 다음 입력되는 점이 2 번 점,...",
    "output": "각이 같은 경우 먼저 입력된 점이 먼저 출력되도록 한다.",
    "sample": "입력\n\n6\n-1 2\n-2 -2\n2 -1\n4 1\n4 3\n2 -3\n\n출력 \n\n6 4 5 3 1 2"
  },
  {
    "id": 837,
    "title": "fencing",
    "time_limit": "1 초",
    "description": "목초 지점들이 주어질 때 이 지점을 모두 포함하는 가장 짧은 길이의 울타리 길이를 구하는 것이 문제이다. ( 울타리는 볼록 다각형 이어야 한다.)",
    "input": "",
    "output": "",
    "sample": "입력 \n\n4\n4 8\n4 12\n5 9.3\n7 8\n\n출력\n\n12.00"
  },
  {
    "id": 838,
    "title": "koi_area",
    "time_limit": "1 초",
    "description": "어떤 섬나라의 해변은 수직 선분과 수평 선분으로만 구성되어 있다. 우리는 이 나라의 해안에 둑을 쌓아 간척지를 만들려고 한다. 이러한 간척지를 만들기 위해서 쌓아야 하는 둑은 수평성분이거나 수직 성분이어야 한다.이때 간척지의 효율은 (간척지의 넓이)/(둑의길이) 로 계산된다.",
    "input": "",
    "output": "",
    "sample": "입력\n\n22\n2 2  8 2  8 3  6 3  6 5\n8 5  8 7  11 7 11 5 13 5\n13 9   8 9  8 10 2 10  2 8\n4 8  4 9  6 9  6 7  3 7\n3 5  2 5   \n\n출력\n\n5.00"
  },
  {
    "id": 839,
    "title": "ccc_comets",
    "time_limit": "5 초",
    "description": "슈퍼맨은 지구에서 크립톤까지 이동하던 도중 웜 홀에 빠져버려 알 수 없는 장소로 이동해버렸습니다. 슈퍼맨은 지구에서 본 주기적 혜성이 있던 걸 기억하고, 순간이동 된 지점에서도 몇 개의 주기적 혜성을 볼 수 있습니다. 슈퍼맨은 혜성들을 이용해 방향을 잡으려고 합니다만 먼저 지금 보고 있는 혜성이 맞는 혜성인지 알아내야합니다.",
    "input": "첫 줄에 테스트 케이스 수 t (1 ≤ t ≤ 10)이 입력됩니다.\n각 테스트 케이스의 첫 번째 줄은 정수 이 n(1 ≤ n ≤ 500000)이 입력됩니다.\n다음 n 줄에 공백으로 구분 된 xi, yi 쌍이 입력됩니다. 각 줄의 숫자는 지구에서 봤을 때의 점들의 주기입니다.\n다음 n 줄에도 같은 형식으로 x'i, y'i 쌍이 입력됩니다. 각 줄의 숫자는 지금 슈퍼맨이 보고 있는 점들의 주기입니다.",
    "output": "각 테스트 케이스별로 지금 보고 있는 혜성이 같은 혜성이라면 주기의 (x1,y1)와 (x's,y's)가 같은 가장 작은 s를 출력하세요. 만족하는 s 값이 없다면 0을 출력하세요.",
    "sample": "입력\n\n3\n3\n0 0\n1 0\n0 1\n20 20\n60 20\n40 40\n4\n0 0\n1 1\n0 0\n1 1\n30 30\n19 23\n30 30\n19 23\n4\n0 0\n1 0\n1 1\n0 1\n0 0\n2 0\n2 1\n0 1\n\n출력\n\n3\n1\n0\n\n※ 이 문제는 번역이 이상한 것도 있지만 원문도 만만치 않게 헷갈리게 쓰여 있습니다. 원문이 보고 싶으신 분은  cemc.uwaterloo.ca/contests/computing/2013/Stage2/day2.pdf에서 Problem 2를 읽어보세요."
  }
]